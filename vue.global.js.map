{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/options.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/tokenizer/context.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/tokenizer/types.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/util/location.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parse-error/credentials.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parse-error/module-errors.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parse-error/to-node-description.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parse-error/standard-errors.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parse-error/strict-mode-errors.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parse-error/pipeline-operator-errors.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parse-error.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/plugins/estree.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/util/identifier.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/util/scopeflags.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/util/scope.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/plugins/flow/scope.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parser/base.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parser/comments.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/util/whitespace.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/tokenizer/state.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/babel-helper-string-parser/src/index.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/tokenizer/index.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/util/class-scope.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/util/expression-scope.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/util/production-parameter.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parser/util.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parser/node.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/plugins/flow/index.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/plugins/jsx/xhtml.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/plugins/jsx/index.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/plugins/typescript/scope.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parser/lval.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/plugins/typescript/index.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/plugins/placeholders.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/plugins/v8intrinsic.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/plugin-utils.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parser/expression.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parser/statement.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/parser/index.ts", "../../../node_modules/.pnpm/@babel+parser@7.21.3/node_modules/@babel/parser/src/index.ts", "../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/base64.js", "../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/base64-vlq.js", "../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/util.js", "../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/array-set.js", "../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/mapping-list.js", "../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/source-map-generator.js", "../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/binary-search.js", "../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/quick-sort.js", "../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/source-map-consumer.js", "../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/source-node.js", "../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/source-map.js", "../src/index.ts", "../../reactivity/src/operations.ts", "../../shared/src/makeMap.ts", "../../shared/src/general.ts", "../../shared/src/patchFlags.ts", "../../shared/src/slotFlags.ts", "../../shared/src/globalsAllowList.ts", "../../shared/src/codeframe.ts", "../../shared/src/normalizeProp.ts", "../../shared/src/domTagConfig.ts", "../../shared/src/domAttrConfig.ts", "../../shared/src/looseEqual.ts", "../../shared/src/toDisplayString.ts", "../../reactivity/src/warning.ts", "../../reactivity/src/effectScope.ts", "../../reactivity/src/dep.ts", "../../reactivity/src/effect.ts", "../../reactivity/src/baseHandlers.ts", "../../reactivity/src/collectionHandlers.ts", "../../reactivity/src/reactive.ts", "../../reactivity/src/ref.ts", "../../reactivity/src/computed.ts", "../../runtime-core/src/warning.ts", "../../runtime-core/src/errorHandling.ts", "../../runtime-core/src/scheduler.ts", "../../runtime-core/src/hmr.ts", "../../runtime-core/src/devtools.ts", "../../runtime-core/src/compat/compatConfig.ts", "../../runtime-core/src/componentEmits.ts", "../../runtime-core/src/componentRenderContext.ts", "../../runtime-core/src/componentRenderUtils.ts", "../../runtime-core/src/apiWatch.ts", "../../runtime-core/src/directives.ts", "../../runtime-core/src/components/BaseTransition.ts", "../../runtime-core/src/apiDefineComponent.ts", "../../runtime-core/src/apiAsyncComponent.ts", "../../runtime-core/src/components/KeepAlive.ts", "../../runtime-core/src/apiLifecycle.ts", "../../runtime-core/src/helpers/resolveAssets.ts", "../../runtime-core/src/helpers/renderList.ts", "../../runtime-core/src/helpers/createSlots.ts", "../../runtime-core/src/helpers/renderSlot.ts", "../../runtime-core/src/helpers/toHandlers.ts", "../../runtime-core/src/componentPublicInstance.ts", "../../runtime-core/src/apiSetupHelpers.ts", "../../runtime-core/src/componentOptions.ts", "../../runtime-core/src/apiCreateApp.ts", "../../runtime-core/src/apiInject.ts", "../../runtime-core/src/componentProps.ts", "../../runtime-core/src/componentSlots.ts", "../../runtime-core/src/rendererTemplateRef.ts", "../../runtime-core/src/hydration.ts", "../../runtime-core/src/profiling.ts", "../../runtime-core/src/renderer.ts", "../../runtime-core/src/components/Suspense.ts", "../../runtime-core/src/components/Teleport.ts", "../../runtime-core/src/vnode.ts", "../../runtime-core/src/component.ts", "../../runtime-core/src/apiComputed.ts", "../../runtime-core/src/h.ts", "../../runtime-core/src/helpers/useSsrContext.ts", "../../runtime-core/src/customFormatter.ts", "../../runtime-core/src/helpers/withMemo.ts", "../../runtime-core/src/index.ts", "../../runtime-dom/src/nodeOps.ts", "../../runtime-dom/src/components/Transition.ts", "../../runtime-dom/src/modules/class.ts", "../../runtime-dom/src/directives/vShow.ts", "../../runtime-dom/src/modules/style.ts", "../../runtime-dom/src/modules/attrs.ts", "../../runtime-dom/src/modules/props.ts", "../../runtime-dom/src/modules/events.ts", "../../runtime-dom/src/patchProp.ts", "../../runtime-dom/src/apiCustomElement.ts", "../../runtime-dom/src/helpers/useCssModule.ts", "../../runtime-dom/src/helpers/useCssVars.ts", "../../runtime-dom/src/components/TransitionGroup.ts", "../../runtime-dom/src/directives/vModel.ts", "../../runtime-dom/src/directives/vOn.ts", "../../runtime-dom/src/index.ts", "../src/dev.ts", "../../compiler-core/src/errors.ts", "../../compiler-core/src/runtimeHelpers.ts", "../../compiler-core/src/ast.ts", "../../compiler-core/src/utils.ts", "../../compiler-core/src/parse.ts", "../../compiler-core/src/transforms/hoistStatic.ts", "../../compiler-core/src/transform.ts", "../../compiler-core/src/codegen.ts", "../../../node_modules/.pnpm/estree-walker@2.0.2/node_modules/estree-walker/dist/esm/estree-walker.js", "../../compiler-core/src/babelUtils.ts", "../../compiler-core/src/validateExpression.ts", "../../compiler-core/src/transforms/transformExpression.ts", "../../compiler-core/src/transforms/vIf.ts", "../../compiler-core/src/transforms/vFor.ts", "../../compiler-core/src/transforms/vSlot.ts", "../../compiler-core/src/transforms/transformElement.ts", "../../compiler-core/src/transforms/transformSlotOutlet.ts", "../../compiler-core/src/transforms/vOn.ts", "../../compiler-core/src/transforms/vBind.ts", "../../compiler-core/src/transforms/transformText.ts", "../../compiler-core/src/transforms/vOnce.ts", "../../compiler-core/src/transforms/vModel.ts", "../../compiler-core/src/transforms/vMemo.ts", "../../compiler-core/src/compile.ts", "../../compiler-core/src/transforms/noopDirectiveTransform.ts", "../../compiler-dom/src/runtimeHelpers.ts", "../../compiler-dom/src/decodeHtmlBrowser.ts", "../../compiler-dom/src/parserOptions.ts", "../../compiler-dom/src/transforms/transformStyle.ts", "../../compiler-dom/src/errors.ts", "../../compiler-dom/src/transforms/vHtml.ts", "../../compiler-dom/src/transforms/vText.ts", "../../compiler-dom/src/transforms/vModel.ts", "../../compiler-dom/src/transforms/vOn.ts", "../../compiler-dom/src/transforms/vShow.ts", "../../compiler-dom/src/transforms/Transition.ts", "../../compiler-dom/src/transforms/ignoreSideEffectTags.ts", "../../compiler-dom/src/index.ts"],
  "sourcesContent": ["import type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType;\n  sourceFilename?: string;\n  startColumn: number;\n  startLine: number;\n  allowAwaitOutsideFunction: boolean;\n  allowReturnOutsideFunction: boolean;\n  allowNewTargetOutsideFunction: boolean;\n  allowImportExportEverywhere: boolean;\n  allowSuperOutsideMethod: boolean;\n  allowUndeclaredExports: boolean;\n  plugins: PluginList;\n  strictMode: boolean | undefined | null;\n  ranges: boolean;\n  tokens: boolean;\n  createParenthesizedExpressions: boolean;\n  errorRecovery: boolean;\n  attachComment: boolean;\n  annexB: boolean;\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, new.target outside a function or class is not\n  // considered an error.\n  allowNewTargetOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n  // When enabled, the parser will support Annex B syntax.\n  // https://tc39.es/ecma262/#sec-additional-ecmascript-features-for-web-browsers\n  annexB: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts?: Options | null): Options {\n  if (opts && opts.annexB != null && opts.annexB !== false) {\n    throw new Error(\"The `annexB` option can only be set to `false`.\");\n  }\n\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    // @ts-expect-error key may not exist in opts\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n", "// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext;\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n", "import { types as tc, type TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = typeof tt;\n\nexport const tt = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _using: createKeywordLike(\"using\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  _satisfies: createKeywordLike(\"satisfies\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n} as const;\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n", "export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n", "export const enum ParseErrorCode {\n  SyntaxError = \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n}\n\nexport type SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\nexport type ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\nexport type ParseErrorCredentials<ErrorDetails> = {\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  toMessage: ToMessage<ErrorDetails>;\n};\n\nconst reflect = (keys: string[], last = keys.length - 1) => ({\n  get(this: unknown): unknown {\n    return keys.reduce(\n      (object, key) =>\n        // @ts-expect-error key should index object\n        object[key],\n      this,\n    );\n  },\n  set(this: unknown, value: unknown) {\n    keys.reduce(\n      // @ts-expect-error key should index item\n      (item, key, i) => (i === last ? (item[key] = value) : item[key]),\n      this,\n    );\n  },\n});\n\nconst instantiate = <T>(\n  constructor: new () => T,\n  properties: any,\n  descriptors: any,\n) =>\n  Object.keys(descriptors)\n    .map(key => [key, descriptors[key]])\n    .filter(([, descriptor]) => !!descriptor)\n    .map(([key, descriptor]) => [\n      key,\n      typeof descriptor === \"function\"\n        ? { value: descriptor, enumerable: false }\n        : typeof descriptor.reflect === \"string\"\n        ? { ...descriptor, ...reflect(descriptor.reflect.split(\".\")) }\n        : descriptor,\n    ])\n    .reduce(\n      (instance, [key, descriptor]) =>\n        Object.defineProperty(instance, key, {\n          configurable: true,\n          ...descriptor,\n        }),\n      Object.assign(new constructor(), properties),\n    );\n\nexport { instantiate };\n", "import { ParseErrorCode } from \"../parse-error\";\n\nexport default {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n};\n", "const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = keyof Omit<\n  typeof NodeDescriptions,\n  \"UpdateExpression\"\n>;\n\ntype NodeWithDescription =\n  | {\n      type: \"UpdateExpression\";\n      prefix: boolean;\n    }\n  | {\n      type: NodeTypesWithDescriptions;\n    };\n\n// @ts-expect-error prefix is specified only when type is UpdateExpression\n// eslint-disable-next-line no-confusing-arrow\nconst toNodeDescription = ({ type, prefix }: NodeWithDescription) =>\n  type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[String(prefix) as \"true\" | \"false\"]\n    : NodeDescriptions[type];\n\nexport default toNodeDescription;\n", "import toNodeDescription from \"./to-node-description\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\"; prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"ImportSpecifier\"\n        | \"ImportNamespaceSpecifier\"\n        | \"ImportDefaultSpecifier\"\n        | \"ParenthesizedExpression\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\";\n    };\n\nexport default {\n  AccessorIsGenerator: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter:\n    \"'await' is not allowed in async function parameters.\",\n  AwaitInUsingBinding:\n    \"'await' is not allowed to be used as a name in 'using' declarations.\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\n  BadSetterRestParameter:\n    \"A 'set' accessor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind,\n  }: {\n    kind: \"const\" | \"destructuring\";\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses:\n    \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",\n  DecoratorsBeforeAfterExport:\n    \"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({ exportName }: { exportName: string }) =>\n    `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName,\n  }: {\n    localName: string;\n    exportName: string;\n  }) =>\n    `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'.\",\n\n  ForInOfLoopInitializer: ({\n    type,\n  }: {\n    type: \"ForInStatement\" | \"ForOfStatement\";\n  }) =>\n    `'${\n      type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n    }' loop variable declaration may not have an initializer.`,\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\n\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block.\",\n\n  IllegalBreakContinue: ({\n    type,\n  }: {\n    type: \"BreakStatement\" | \"ContinueStatement\";\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: ({ importName }: { importName: string }) =>\n    `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({ maxArgumentCount }: { maxArgumentCount: 1 | 2 }) =>\n    `\\`import()\\` requires exactly ${\n      maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"\n    }.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault:\n    \"A JSON module can only be imported with `default`.\",\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\n  ImportReflectionNotBinding:\n    'Only `import module x from \"./module\"` is valid.',\n  IncompatibleRegExpUVFlags:\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({ radix }: { radix: number }) =>\n    `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({ identifierName }: { identifierName: string }) =>\n    `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({ unexpected }: { unexpected: string }) =>\n    `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName,\n  }: {\n    identifierName: string;\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({ labelName }: { labelName: string }) =>\n    `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({ missingPlugin }: { missingPlugin: [string] }) =>\n    `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also, seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: ({ missingPlugin }: { missingPlugin: string[] }) =>\n    `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({ key }: { key: string }) =>\n    `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode,\n  }: {\n    surrogateCharCode: number;\n  }) =>\n    `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n      16,\n    )}'.`,\n  ModuleExportUndefined: ({ localName }: { localName: string }) =>\n    `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar:\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor:\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({ identifierName }: { identifierName: string }) =>\n    `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level or inside a block.\",\n  SloppyFunctionAnnexB:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed:\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({ keyword }: { keyword: string }) =>\n    `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget:\n    \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected,\n  }: {\n    expected?: string | null;\n    unexpected?: string | null;\n  }) =>\n    `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n      expected ? `, expected \"${expected}\"` : \"\"\n    }`,\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnexpectedUsingDeclaration:\n    \"Using declaration cannot appear in the top level when source type is `script`.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport:\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName,\n  }: {\n    target: string;\n    onlyValidPropertyName: string;\n  }) =>\n    `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper:\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  UsingDeclarationHasBindingPattern:\n    \"Using declaration cannot have destructuring patterns.\",\n  VarRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0.\",\n};\n", "export default {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: ({ referenceName }: { referenceName: string }) =>\n    `Assigning to '${referenceName}' in strict mode.`,\n\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: ({ bindingName }: { bindingName: string }) =>\n    `Binding '${bindingName}' in strict mode.`,\n\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n\n  StrictWith: \"'with' in strict mode.\",\n};\n", "import toNodeDescription from \"./to-node-description\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n] as const);\n\ntype GetSetMemberType<T extends Set<any>> = T extends Set<infer M>\n  ? M\n  : unknown;\n\ntype UnparenthesizedPipeBodyTypes = GetSetMemberType<\n  typeof UnparenthesizedPipeBodyDescriptions\n>;\n\nexport default {\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter:\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound:\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({ token }: { token: string }) =>\n    `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused:\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({ type }: { type: UnparenthesizedPipeBodyTypes }) =>\n    `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n      type,\n    })}; please wrap it in parentheses.`,\n\n  // Messages whose codes start with “Pipeline” or “PrimaryTopic”\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n};\n", "import { Position } from \"./util/location\";\nimport {\n  instantiate,\n  ParseErrorCode,\n  type ParseErrorCredentials,\n  type ToMessage,\n  type SyntaxPlugin,\n} from \"./parse-error/credentials\";\nimport type { Undone } from \"./parser/node\";\nimport type { Node } from \"./types\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  missingPlugin?: string | string[];\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  // pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = (a: {\n  loc: Position;\n  details: ErrorDetails;\n}) => ParseError<ErrorDetails>;\n\nfunction toParseErrorConstructor<ErrorDetails extends object>({\n  toMessage,\n  ...properties\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  type ConstructorArgument = {\n    loc: Position;\n    details: ErrorDetails;\n  };\n\n  return function constructor({ loc, details }: ConstructorArgument) {\n    return instantiate(\n      SyntaxError,\n      { ...properties, loc },\n      {\n        clone(\n          overrides: {\n            loc?: Position;\n            details?: ErrorDetails;\n          } = {},\n        ) {\n          const loc = (overrides.loc || {}) as Partial<Position>;\n          return constructor({\n            loc: new Position(\n              \"line\" in loc ? loc.line : this.loc.line,\n              \"column\" in loc ? loc.column : this.loc.column,\n              \"index\" in loc ? loc.index : this.loc.index,\n            ),\n            details: { ...this.details, ...overrides.details },\n          });\n        },\n        details: { value: details, enumerable: false },\n        message: {\n          get(this: ConstructorArgument): string {\n            return `${toMessage(this.details)} (${this.loc.line}:${\n              this.loc.column\n            })`;\n          },\n          set(value: string) {\n            Object.defineProperty(this, \"message\", { value });\n          },\n        },\n        pos: { reflect: \"loc.index\", enumerable: true },\n        missingPlugin: \"missingPlugin\" in details && {\n          reflect: \"details.missingPlugin\",\n          enumerable: true,\n        },\n      },\n    ) as ParseError<ErrorDetails>;\n  };\n}\n\ntype ParseErrorTemplate =\n  | string\n  | ToMessage<any>\n  | { message: string | ToMessage<any> };\n\ntype ParseErrorTemplates = { [reasonCode: string]: ParseErrorTemplate };\n\n// This is the templated form of `ParseErrorEnum`.\n//\n// Note: We could factor out the return type calculation into something like\n// `ParseErrorConstructor<T extends ParseErrorTemplates>`, and then we could\n// reuse it in the non-templated form of `ParseErrorEnum`, but TypeScript\n// doesn't seem to drill down that far when showing you the computed type of\n// an object in an editor, so we'll leave it inlined for now.\nexport function ParseErrorEnum(a: TemplateStringsArray): <\n  T extends ParseErrorTemplates,\n>(\n  parseErrorTemplates: T,\n) => {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\nexport function ParseErrorEnum<T extends ParseErrorTemplates>(\n  parseErrorTemplates: T,\n  syntaxPlugin?: SyntaxPlugin,\n): {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either:\n//\n// 1. a static error message,\n// 2. `toMessage` functions that define additional necessary `details` needed by\n//    the `ParseError`, or\n// 3. Objects that contain a `message` of one of the above and overridden `code`\n//    and/or `reasonCode`:\n//\n// ParseErrorEnum `optionalSyntaxPlugin` ({\n//   ErrorWithStaticMessage: \"message\",\n//   ErrorWithDynamicMessage: ({ type } : { type: string }) => `${type}`),\n//   ErrorWithOverriddenCodeAndOrReasonCode: {\n//     message: ({ type }: { type: string }) => `${type}`),\n//     code: ParseErrorCode.SourceTypeModuleError,\n//     ...(BABEL_8_BREAKING ? { } : { reasonCode: \"CustomErrorReasonCode\" })\n//   }\n// });\n//\nexport function ParseErrorEnum(\n  argument: TemplateStringsArray | ParseErrorTemplates,\n  syntaxPlugin?: SyntaxPlugin,\n) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return (parseErrorTemplates: ParseErrorTemplates) =>\n      ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n\n  const ParseErrorConstructors = {} as Record<\n    string,\n    ParseErrorConstructor<unknown>\n  >;\n\n  for (const reasonCode of Object.keys(argument)) {\n    const template = (argument as ParseErrorTemplates)[reasonCode];\n    const { message, ...rest } =\n      typeof template === \"string\"\n        ? { message: () => template }\n        : typeof template === \"function\"\n        ? { message: template }\n        : template;\n    const toMessage = typeof message === \"string\" ? () => message : message;\n\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: ParseErrorCode.SyntaxError,\n      reasonCode,\n      toMessage,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...rest,\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nexport type RaiseProperties<ErrorDetails> = {\n  at: Position | Undone<Node>;\n} & ErrorDetails;\n\nimport ModuleErrors from \"./parse-error/module-errors\";\nimport StandardErrors from \"./parse-error/standard-errors\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors\";\n\nexport * from \"./parse-error/credentials\";\n", "import { type TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport type * as N from \"../types\";\nimport type { Node as NodeType, NodeBase, File } from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { BindingTypes } from \"../util/scopeflags\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object: any, key: string) =>\n  defineProperty(object, key, { enumerable: false, value: object[key] });\n\nfunction toESTreeLocation(node: any) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: typeof Parser) =>\n  class ESTreeParserMixin extends superClass implements Parser {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseRegExpLiteral({ pattern, flags }): N.EstreeRegExpLiteral {\n      let regex: RegExp | null = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt: BigInt | null;\n      try {\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal: null = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T extends N.Node>(value: any) {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    // Cast a Directive to an ExpressionStatement. Mutates the input Directive.\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const expression = directive.value as any as N.EstreeLiteral;\n      delete directive.value;\n\n      expression.type = \"Literal\";\n      // @ts-expect-error N.EstreeLiteral.raw is not defined.\n      expression.raw = expression.extra.raw;\n      expression.value = expression.extra.expressionValue;\n\n      const stmt = directive as any as N.ExpressionStatement;\n      stmt.type = \"ExpressionStatement\";\n      stmt.expression = expression;\n      // @ts-expect-error N.ExpressionStatement.directive is not defined\n      stmt.directive = expression.extra.rawValue;\n\n      delete expression.extra;\n\n      return stmt;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        // @ts-expect-error plugin typings\n        this.checkDeclaration((node as unknown as N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return (method as any as N.EstreeProperty | N.EstreeMethodDefinition)\n        .value.params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: boolean | undefined | null,\n      topLevel: boolean,\n      end: TokenType,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): void {\n      super.parseBlockBody(\n        node,\n        allowDirectives,\n        topLevel,\n        end,\n        afterBlockParse,\n      );\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      // @ts-expect-error estree plugin typings\n      node.body = directiveStatements.concat(node.body);\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // @ts-expect-error mutate AST types\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = node as any;\n      delete node.id;\n      // @ts-expect-error mutate AST types\n      node.name = name;\n      // @ts-expect-error mutate AST types\n      node.type = \"PrivateIdentifier\";\n      return node as unknown as N.EstreePrivateIdentifier;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node);\n        }\n      }\n      return node.name;\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseLiteral<T extends N.Literal>(value: any, type: T[\"type\"]): T {\n      const node = super.parseLiteral<T>(value, type);\n      // @ts-expect-error mutating AST types\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseMethod<\n      T extends N.ClassPrivateMethod | N.ObjectMethod | N.ClassMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope: boolean = false,\n    ): N.EstreeMethodDefinition {\n      let funcNode = this.startNode<N.MethodLike>();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        // @ts-expect-error todo(flow->ts)\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error mutate AST types\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // @ts-expect-error mutate AST types\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        node.computed = false;\n      }\n      return this.finishNode(\n        // @ts-expect-error cast methods to estree types\n        node as Undone<N.EstreeMethodDefinition>,\n        \"MethodDefinition\",\n      );\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = super.parseClassProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = super.parseClassPrivateProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): N.ObjectMethod | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) as any;\n\n      if (node) {\n        node.type = \"Property\";\n        if ((node as any as N.ClassMethod).kind === \"method\") {\n          node.kind = \"init\";\n        }\n        node.shorthand = false;\n      }\n\n      return node as any;\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startLoc: Position | undefined | null,\n      isPattern: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectProperty | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectProperty(\n        prop,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ) as any;\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return node as any;\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return type === \"Property\"\n        ? \"value\"\n        : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(\n      prop: N.Node,\n      isLast: boolean,\n      isLHS: boolean,\n    ) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(Errors.PatternHasAccessor, { at: prop.key });\n      } else if (prop.method) {\n        this.raise(Errors.PatternHasMethod, { at: prop.key });\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n      }\n    }\n\n    finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n      unfinished: Undone<T>,\n      optional: boolean,\n    ): T {\n      const node = super.finishCallExpression(unfinished, optional);\n\n      if (node.callee.type === \"Import\") {\n        (node as N.Node as N.EstreeImportExpression).type = \"ImportExpression\";\n        (node as N.Node as N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          (node as N.Node as N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // arguments isn't optional in the type definition\n        delete node.arguments;\n        // callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(\n      unfinished: Undone<N.AnyExport>,\n      decorators: N.Decorator[] | null,\n    ) {\n      const exportStartLoc = this.state.lastTokStartLoc;\n      const node = super.parseExport(unfinished, decorators);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          // @ts-expect-error mutating AST types\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            // @ts-expect-error mutating AST types\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            // @ts-expect-error mutating AST types\n            node.type = \"ExportAllDeclaration\";\n            // @ts-expect-error mutating AST types\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n        // fallthrough\n        case \"ExportDefaultDeclaration\":\n          {\n            const { declaration } = node;\n            if (\n              declaration?.type === \"ClassDeclaration\" &&\n              declaration.decorators?.length > 0 &&\n              // decorator comes before export\n              declaration.start === node.start\n            ) {\n              this.resetStartLocation(\n                node,\n                // For compatibility with ESLint's keyword-spacing rule, which assumes that an\n                // export declaration must start with export.\n                // https://github.com/babel/babel/issues/15085\n                // Here we reset export declaration's start to be the start of the export token\n                exportStartLoc,\n              );\n            }\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(base, startLoc, noCalls, state);\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    // @ts-expect-error override interfaces\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n\n    finishNodeAt<T extends NodeType>(\n      node: Undone<T>,\n      type: T[\"type\"],\n      endLoc: Position,\n    ): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, startLoc: Position) {\n      super.resetStartLocation(node, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n", "import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,3104,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n", "const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n", "/* eslint max-len: 0 */\n\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n", "// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_STATIC_BLOCK | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b0000000_0000_01,\n             BIND_KIND_TYPE             = 0b0000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b0000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b0000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b0000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b0000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b00000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b00000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b00000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b00001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b00010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b00100000_0000_00,\n             BIND_FLAGS_TS_IMPORT       = 0b01000000_0000_00,\n             // Whether \"let\" should be allowed in bound names in sloppy mode\n             BIND_FLAGS_NO_LET_IN_LEXICAL = 0b10000000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS|BIND_FLAGS_NO_LET_IN_LEXICAL,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | BIND_FLAGS_NO_LET_IN_LEXICAL,\n             BIND_CATCH_PARAM   = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM|BIND_FLAGS_NO_LET_IN_LEXICAL,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE          ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE          ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM    | BIND_FLAGS_TS_CONST_ENUM                                        ,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0                   | BIND_FLAGS_TS_EXPORT_ONLY,\n             BIND_TS_TYPE_IMPORT= 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_TS_IMPORT     ,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n", "import {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport type { Position } from \"./location\";\nimport type * as N from \"../types\";\nimport { Errors } from \"../parse-error\";\nimport type Tokenizer from \"../tokenizer\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope extends Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inTopLevel() {\n    return (this.currentScope().flags & SCOPE_PROGRAM) > 0;\n  }\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n\n  enter(flags: ScopeFlags) {\n    /*:: +createScope: (flags: ScopeFlags) => IScope; */\n    // @ts-expect-error This method will be overwritten by subclasses\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit(): ScopeFlags {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        // Annex B.3.4\n        // https://tc39.es/ecma262/#sec-variablestatements-in-catch-blocks\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n", "import type { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport type * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n", "import type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"../typings\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<any>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: string | undefined | null;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin’s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(\n        pluginOptions,\n      ) as (keyof typeof pluginOptions)[]) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption<\n    PluginName extends ParserPluginWithOptions[0],\n    OptionName extends keyof PluginOptions<PluginName>,\n  >(plugin: PluginName, name: OptionName) {\n    return (this.plugins.get(plugin) as null | PluginOptions<PluginName>)?.[\n      name\n    ];\n  }\n}\n", "/*:: declare var invariant; */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport type { Undone } from \"./node\";\n\n/**\n * A whitespace token containing comments\n */\nexport type CommentWhitespace = {\n  /**\n   * the start of the whitespace token.\n   */\n  start: number;\n  /**\n   * the end of the whitespace token.\n   */\n  end: number;\n  /**\n   * the containing comments\n   */\n  comments: Array<Comment>;\n  /**\n   * the immediately preceding AST node of the whitespace token\n   */\n  leadingNode: Node | null;\n  /**\n   * the immediately following AST node of the whitespace token\n   */\n  trailingNode: Node | null;\n  /**\n   * the innermost AST node containing the whitespace with minimal size (|end - start|)\n   */\n  containingNode: Node | null;\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setTrailingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setLeadingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nexport function setInnerComments(\n  node: Undone<Node>,\n  comments?: Array<Comment>,\n) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n */\nfunction adjustInnerComments(\n  node: Undone<Node>,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /* eslint-disable no-irregular-whitespace */\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing\n   * ```\n   * async /* 1 *​/ function f() {}\n   * ```\n   * the comment whitespace `/* 1 *​/` has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark `/* 1 *​/` as\n   * inner comments. So `/* 1 *​/` should be detached from the Identifier node.\n   *\n   * @param node the last finished AST node _before_ current token\n   */\n  /* eslint-enable no-irregular-whitespace */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n", "import * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\n\n// Skip whitespace and single-line comments, including /* no newline here */.\n// After this RegExp matches, its lastIndex points to a line terminator, or\n// the start of multi-line comment (which is effectively a line terminator),\n// or the end of string.\nexport const skipWhiteSpaceToLineBreak = new RegExp(\n  // Unfortunately JS doesn't support Perl's atomic /(?>pattern)/ or\n  // possessive quantifiers, so we use a trick to prevent backtracking\n  // when the look-ahead for line terminator fails.\n  \"(?=(\" +\n    // Capture the whitespace and comments that should be skipped inside\n    // a look-ahead assertion, and then re-match the group as a unit.\n    skipWhiteSpaceInLine.source +\n    \"))\\\\1\" +\n    // Look-ahead for either line terminator, start of multi-line comment,\n    // or end of string.\n    /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source,\n  \"y\", // sticky\n);\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n", "import type { Options } from \"../options\";\nimport type * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { tt, type TokenType } from \"./types\";\nimport type { Errors } from \"../parse-error\";\nimport { type ParseError } from \"../parse-error\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n        ? true\n        : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n  inDisallowConditionalTypesContext: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: \"loop\" | \"switch\" | undefined | null;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // Used to track invalid escape sequences in template literals,\n  // that must be reported if the template is not tagged.\n  firstInvalidTemplateEscapePos: null | Position = null;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this) as (keyof State)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // @ts-expect-error val must conform to S[key]\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: () => Position;\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n  // These boolean properties are not initialized in createLookaheadState()\n  // instead they will only be set by the tokenizer\n  containsEsc?: boolean;\n};\n", "import * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      );\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = { pos, lineStart, curLine };\n      } else {\n        out += res.ch;\n      }\n      ({ pos, lineStart, curLine } = res);\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return {\n    pos,\n    str: out,\n    firstInvalidLoc,\n    lineStart,\n    curLine,\n\n    // TODO(Babel 8): This is only needed for backwards compatibility,\n    // we can remove it.\n    containsInvalid: !!firstInvalidLoc,\n  };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/)!;\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n    /* bailOnError */ !throwOnInvalid,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n  bailOnError: boolean,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n      ? isAllowedNumericSeparatorSibling.dec\n      : radix === 8\n      ? isAllowedNumericSeparatorSibling.oct\n      : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        if (bailOnError) return { n: null, pos };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        if (bailOnError) return { n: null, pos };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && bailOnError) {\n        return { n: null, pos };\n      } else if (\n        val <= 9 &&\n        errors.invalidDigit(pos, lineStart, curLine, radix)\n      ) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n", "/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location\";\nimport CommentsParser, { type CommentWhitespace } from \"../parser/comments\";\nimport type * as N from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types\";\nimport { type TokContext } from \"./context\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n  type RaiseProperties,\n} from \"../parse-error\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState, DeferredStrictError } from \"./state\";\n\nimport {\n  readInt,\n  readCodePoint,\n  readStringContents,\n  type IntErrorHandlers,\n  type CodePointErrorHandlers,\n  type StringContentsErrorHandlers,\n} from \"@babel/helper-string-parser\";\n\nimport type { Plugin } from \"../typings\";\n\nfunction buildPosition(pos: number, lineStart: number, curLine: number) {\n  return new Position(curLine, pos - lineStart, pos);\n}\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  // This is only valid when using the regexpUnicodeSets plugin\n  charCodes.lowercaseV,\n]);\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default abstract class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // @ts-expect-error For performance we use a simplified tokenizer state structure\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, { at }),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related properties.\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  // Skips a block comment, whose end is marked by commentEnd.\n  // *-/ is used by the Flow plugin, when parsing block comments nested\n  // inside Flow comments.\n  skipBlockComment(commentEnd: \"*/\" | \"*-/\"): N.CommentBlock | undefined {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(commentEnd, start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    this.state.pos = end + commentEnd.length;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment: N.CommentBlock = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + commentEnd.length,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | undefined {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment: N.CommentLine = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment(\"*/\");\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (\n            ch === charCodes.dash &&\n            !this.inModule &&\n            this.options.annexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (\n            ch === charCodes.lessThan &&\n            !this.inModule &&\n            this.options.annexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace: CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val?: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // @ts-expect-error the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          { at: this.state.curPosition() },\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code),\n    });\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      // @ts-expect-error VALID_REGEX_FLAGS.has should accept expanded type: number\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, { at: nextPos() });\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, { at: nextPos() });\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen: boolean = false,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const { n, pos } = readInt(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      radix,\n      len,\n      forceLen,\n      allowNumSeparator,\n      this.errorHandlers_readInt,\n      /* bailOnError */ false,\n    );\n    this.state.pos = pos;\n    return n;\n  }\n\n  readRadixNumber(radix: number): void {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        // Numeric literals can't have newlines, so this is safe to do.\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix,\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, { at: startLoc });\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (isBigInt) {\n      const str = this.input\n        .slice(startLoc.index, this.state.pos)\n        .replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, { at: this.state.curPosition() });\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, { at: startLoc });\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos),\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, { at: startLoc });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, { at: startLoc });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, { at: startLoc });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const { code, pos } = readCodePoint(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      throwOnInvalid,\n      this.errorHandlers_readCodePoint,\n    );\n    this.state.pos = pos;\n    return code;\n  }\n\n  readString(quote: number): void {\n    const { str, pos, curLine, lineStart } = readStringContents(\n      quote === charCodes.quotationMark ? \"double\" : \"single\",\n      this.input,\n      this.state.pos + 1, // skip the quote\n      this.state.lineStart,\n      this.state.curLine,\n      this.errorHandlers_readStringContents_string,\n    );\n    this.state.pos = pos + 1; // skip the quote\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(tt.string, str);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    const opening = this.input[this.state.pos];\n    const { str, firstInvalidLoc, pos, curLine, lineStart } =\n      readStringContents(\n        \"template\",\n        this.input,\n        this.state.pos + 1, // skip '`' or `}`\n        this.state.lineStart,\n        this.state.curLine,\n        this.errorHandlers_readStringContents_template,\n      );\n    this.state.pos = pos + 1; // skip '`' or `$`\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(\n        firstInvalidLoc.curLine,\n        firstInvalidLoc.pos - firstInvalidLoc.lineStart,\n        firstInvalidLoc.pos,\n      );\n    }\n\n    if (this.input.codePointAt(pos) === charCodes.graveAccent) {\n      this.finishToken(\n        tt.templateTail,\n        firstInvalidLoc ? null : opening + str + \"`\",\n      );\n    } else {\n      this.state.pos++; // skip '{'\n      this.finishToken(\n        tt.templateNonTail,\n        firstInvalidLoc ? null : opening + str + \"${\",\n      );\n    }\n  }\n\n  recordStrictModeErrors(\n    toParseError: DeferredStrictError,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, { at });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode?: number): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition(),\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, { at: escStart });\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode?: number): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   */\n  raise<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    // @ts-expect-error: refine details typing\n    const error = toParseError({ loc, details });\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> | never {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        // @ts-expect-error: refine details typing\n        return (errors[i] = toParseError({ loc, details }));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, raiseProperties);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc,\n    });\n  }\n\n  expectPlugin(pluginName: Plugin, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName],\n    });\n  }\n\n  expectOnePlugin(pluginNames: Plugin[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n\n  errorBuilder(error: ParseErrorConstructor<{}>) {\n    return (pos: number, lineStart: number, curLine: number) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    };\n  }\n\n  errorHandlers_readInt: IntErrorHandlers = {\n    invalidDigit: (pos, lineStart, curLine, radix) => {\n      if (!this.options.errorRecovery) return false;\n\n      this.raise(Errors.InvalidDigit, {\n        at: buildPosition(pos, lineStart, curLine),\n        radix,\n      });\n      // Continue parsing the number as if there was no invalid digit.\n      return true;\n    },\n    numericSeparatorInEscapeSequence: this.errorBuilder(\n      Errors.NumericSeparatorInEscapeSequence,\n    ),\n    unexpectedNumericSeparator: this.errorBuilder(\n      Errors.UnexpectedNumericSeparator,\n    ),\n  };\n\n  errorHandlers_readCodePoint: CodePointErrorHandlers = {\n    ...this.errorHandlers_readInt,\n    invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n    invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint),\n  };\n\n  errorHandlers_readStringContents_string: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: (pos, lineStart, curLine) => {\n      this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedString, {\n        // Report the error at the string quote\n        at: buildPosition(pos - 1, lineStart, curLine),\n      });\n    },\n  };\n\n  errorHandlers_readStringContents_template: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedTemplate, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n  };\n}\n", "import {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport type { Position } from \"./location\";\nimport { Errors } from \"../parse-error\";\nimport type Tokenizer from \"../tokenizer\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n}\n", "import { Errors, type ParseErrorConstructor } from \"../parse-error\";\nimport type { Position } from \"./location\";\nimport type { Node } from \"../types\";\nimport type Tokenizer from \"../tokenizer\";\n\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n  e.g. we don't know if `async({ x })` is a call expression or an async arrow\n  function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration(): this is ArrowHeadParsingScope {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<{}>, Position]> =\n    new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<{}>,\n    {\n      at,\n    }: {\n      at: Position;\n    },\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: (a: [ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const origin = { at: node.loc.start };\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   */\n  recordArrowParameterBindingError(\n    error: ParseErrorConstructor<{}>,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = { at: node.loc.start };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   */\n  recordAsyncArrowParametersError({ at }: { at: Position }): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, { at });\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, { at: loc });\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n", "export const // Initial Parameter flags\n  PARAM = 0b0000,\n  // track [Yield] production parameter\n  PARAM_YIELD = 0b0001,\n  // track [Await] production parameter\n  PARAM_AWAIT = 0b0010,\n  // track [Return] production parameter\n  PARAM_RETURN = 0b0100,\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind = number;\n\n// todo(flow->ts) - check if more granular type can be used,\n//  type below is not good because things like PARAM_AWAIT|PARAM_YIELD are not included\n// export type ParamKind =\n//   | typeof PARAM\n//   | typeof PARAM_AWAIT\n//   | typeof PARAM_IN\n//   | typeof PARAM_RETURN\n//   | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<number> = [];\n  enter(flags: number) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): number {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n", "import { type Position } from \"../util/location\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport type State from \"../tokenizer/state\";\nimport type { EstreePropertyDefinition, Node, ObjectProperty } from \"../types\";\nimport { lineBreak, skipWhiteSpaceToLineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error\";\nimport type Parser from \".\";\n\nimport type ScopeHandler from \"../util/scope\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node;\n  error: Error;\n  thrown: Thrown;\n  aborted: Aborted;\n  failState: FailState;\n};\n\n// ## Parser utilities\n\nexport default abstract class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  abstract getScopeHandler(): { new (...args: any): ScopeHandler };\n\n  addExtra(\n    node: Partial<Node>,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, { at: this.state.startLoc });\n      }\n      this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEndLoc.index, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, { at: this.state.lastTokEndLoc });\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: Position | null): void {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T extends Node | ReadonlyArray<Node>>(\n    fn: (abort: (node?: T) => never) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: {\n      node: T | null;\n    } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        // @ts-expect-error casting general syntax error to parse error\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ExpressionErrors | undefined | null,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc,\n      });\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, { at: doubleProtoLoc });\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, { at: privateKeyLoc });\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /**\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /**\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /**\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isObjectProperty(\n    node: Node,\n  ): node is ObjectProperty | EstreePropertyDefinition {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    this: Parser,\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional parameter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: Position | undefined | null = null;\n  doubleProtoLoc: Position | undefined | null = null;\n  privateKeyLoc: Position | undefined | null = null;\n  optionalParametersLoc: Position | undefined | null = null;\n}\n", "import type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: {\n    [key: string]: any;\n  };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error __clone is not defined in Node prototype\n  NodePrototype.__clone = function (): Node {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this) as (keyof Node)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // @ts-expect-error cloning this to newNode\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport type Undone<T extends NodeType> = Omit<T, \"type\">;\n\nexport abstract class NodeUtils extends UtilParser {\n  startNode<T extends NodeType>(): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T extends NodeType>(loc: Position): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, loc.index, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T extends NodeType>(type: Undone<NodeType>): Undone<T> {\n    return this.startNodeAt(type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T extends NodeType>(node: Undone<T>, type: T[\"type\"]): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T extends NodeType>(\n    node: Omit<T, \"type\">,\n    type: T[\"type\"],\n    endLoc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    // @ts-expect-error migrate to Babel types AST typings\n    node.type = type;\n    // @ts-expect-error migrate to Babel types AST typings\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node as T);\n    return node as T;\n  }\n\n  resetStartLocation(node: NodeBase, startLoc: Position): void {\n    node.start = startLoc.index;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = startLoc.index;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.loc.start);\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type Parser from \"../../parser\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types\";\nimport type * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport type { ParseStatementFlag } from \"../../parser/statement\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports:\n    \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({ enumName }: { enumName: string }) =>\n    `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName,\n  }: {\n    invalidEnumType: string;\n    enumName: string;\n  }) =>\n    `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion,\n  }: {\n    enumName: string;\n    memberName: string;\n    suggestion: string;\n  }) =>\n    `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n  }) =>\n    `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitailized: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` or `typeof` keyword.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: {\n    message:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    ...(!process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {}),\n  },\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion,\n  }: {\n    unsupportedExportKind: string;\n    suggestion: string;\n  }) =>\n    `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type: TokenType): boolean {\n  return tokenIsKeywordOrIdentifier(type) && type !== tt._from;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (c: T, b: number, a: T[]) => boolean | undefined | null,\n): [T[], T[]] {\n  const list1: T[] = [];\n  const list2: T[] = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\n\ntype EnumContext = {\n  enumName: string;\n  explicitType: EnumExplicitType;\n  memberName: string;\n};\n\ntype EnumMemberInit =\n  | {\n      type: \"number\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"string\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"boolean\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"invalid\";\n      loc: Position;\n    }\n  | {\n      type: \"none\";\n      loc: Position;\n    };\n\nexport default (superClass: typeof Parser) =>\n  class FlowParserMixin extends superClass implements Parser {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): {\n      new (...args: any): FlowScopeHandler;\n    } {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n          at: moduloLoc,\n        });\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = super.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [\n      N.FlowType | undefined | null,\n      N.FlowPredicate | undefined | null,\n    ] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(\n      node: Undone<N.FlowDeclareClass>,\n    ): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: Undone<N.FlowDeclareFunction>,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode<N.TypeAnnotation>();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [typeNode.returnType, node.predicate] =\n        this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BIND_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: Undone<N.FlowDeclare>,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(FlowErrors.NestedDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: Undone<N.FlowDeclareVariable>,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(\n      node: Undone<N.FlowDeclareModule>,\n    ): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = super.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      // @ts-expect-error refine typings\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode<N.ImportDeclaration>();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          super.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n          // @ts-expect-error refine typings\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind: \"CommonJS\" | \"ES\" | null = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n              at: bodyElement,\n            });\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: Undone<N.FlowDeclareExportDeclaration>,\n      insideModule?: boolean | null,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value as\n            | \"const\"\n            | \"let\"\n            | \"type\"\n            | \"interface\";\n          throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n            at: this.state.startLoc,\n            unsupportedExportKind: label,\n            suggestion: exportSuggestions[label],\n          });\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(\n            node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n            /* decorators */ null,\n          );\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n\n          return node as N.Node;\n        }\n      }\n\n      this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: Undone<N.FlowDeclareModuleExports>,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: Undone<N.FlowDeclareTypeAlias>,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      const finished = this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareTypeAlias\";\n      return finished;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: Undone<N.FlowDeclareOpaqueType>,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      const finished = this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareOpaqueType\";\n      return finished;\n    }\n\n    flowParseDeclareInterface(\n      node: Undone<N.FlowDeclareInterface>,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(node: Undone<N.FlowDeclare>, isClass: boolean): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (isClass) {\n        if (this.eatContextual(tt._mixins)) {\n          do {\n            node.mixins.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n\n        if (this.eatContextual(tt._implements)) {\n          do {\n            node.implements.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: Undone<N.FlowInterface>): N.FlowInterface {\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n          at: this.state.startLoc,\n        });\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        {\n          at: startLoc,\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: Undone<N.FlowTypeAlias>): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: Undone<N.FlowOpaqueType>,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode<N.TypeParameter>();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      // @ts-expect-error migrate to Babel types\n      node.variance = variance;\n      // @ts-expect-error migrate to Babel types\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        // @ts-expect-error migrate to Babel types\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, { at: nodeStartLoc });\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode<N.TypeParameterDeclaration>();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode<N.FlowInterfaceType>();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? super.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: Undone<N.FlowObjectTypeIndexer>,\n      isStatic: boolean,\n      variance?: N.FlowVariance | null,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: Undone<N.FlowObjectTypeInternalSlot>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: Undone<N.FlowFunctionTypeAnnotation>,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: Undone<N.FlowObjectTypeCallProperty>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean;\n      allowExact: boolean;\n      allowSpread: boolean;\n      allowProto: boolean;\n      allowInexact: boolean;\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: Position | undefined | null = null;\n        let inexactStartLoc: Position | undefined | null = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n            at: inexactStartLoc,\n          });\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: Undone<N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty>,\n      isStatic: boolean,\n      protoStartLoc: Position | undefined | null,\n      variance: N.FlowVariance | undefined | null,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(FlowErrors.InexactInsideNonObject, {\n              at: this.state.lastTokStartLoc,\n            });\n          } else if (!allowInexact) {\n            this.raise(FlowErrors.InexactInsideExact, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, { at: variance });\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(FlowErrors.UnexpectedSpreadType, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, { at: variance });\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(FlowErrors.ThisParamBannedInConstructor, {\n              at: node.value.this,\n            });\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: Undone<\n        N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty\n      >,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          { at: property.value.this },\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          { at: property },\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, { at: property });\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startLoc ??= this.state.startLoc;\n      let node: N.Identifier | N.FlowQualifiedTypeIdentifier =\n        id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt<N.FlowQualifiedTypeIdentifier>(startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode<N.FlowFunctionTypeParam>();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node });\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: node });\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[];\n      rest: N.FlowFunctionTypeParam | undefined | null;\n      _this: N.FlowFunctionTypeParam | undefined | null;\n    } {\n      let rest: N.FlowFunctionTypeParam | undefined | null = null;\n      let _this: N.FlowFunctionTypeParam | undefined | null = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startLoc: Position,\n      node: Undone<N.FlowTypeAnnotation>,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt:\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(\n            node as Undone<N.BooleanLiteralTypeAnnotation>,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n              at: this.state.startLoc,\n            });\n          }\n          this.unexpected();\n          return;\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node as Undone<N.Identifier>, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode<N.FlowTypeAnnotation>();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): N.FlowVariance | undefined | null {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode<N.FlowVariance>();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        return this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n        return;\n      }\n\n      super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode<N.TypeAnnotation>();\n\n        [\n          typeNode.typeAnnotation,\n          // @ts-expect-error predicate may not exist\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatementLike(flags: ParseStatementFlag): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode<N.FlowInterface>();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatementLike(flags);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            // @ts-expect-error: refine typings\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, {\n            at: state.startLoc,\n          });\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression;\n      failed: boolean;\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            // @ts-expect-error: refine typings\n            this.finishArrowValidation(node);\n          } else {\n            // @ts-expect-error: refine typings\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        node.params as any as N.Expression[],\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(\n      node: Undone<N.Node>,\n      parse: () => T,\n    ): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(\n      node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n      decorators: N.Decorator[] | null,\n    ): N.AnyExport {\n      const decl = super.parseExport(node, decorators);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          super.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          // @ts-expect-error: refine typings\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        // @ts-expect-error: refine typings\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(node)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (super.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, { at: startLoc });\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, {\n            at: member.value,\n          });\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, {\n          at: this.state.curPosition(),\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          this.finishOp(tt.questionDot, 2);\n        } else {\n          // allow double nullable types in Flow: ??string\n          this.finishOp(tt.question, 1);\n        }\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        this.readIterator();\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left);\n      }\n      super.toAssignable(node, isLHS);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: ReadonlyArray<N.Expression | undefined | null>,\n      isParenthesizedExpr?: boolean,\n    ): ReadonlyArray<N.Expression | undefined | null> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, {\n            at: expr.typeAnnotation,\n          });\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"TypeCastExpression\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n        // estree support\n      } else if (\n        // @ts-expect-error TS does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        // @ts-expect-error estree\n        method.value.params\n      ) {\n        // @ts-expect-error estree\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, { at: param });\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, { at: param });\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectMethod | N.ObjectProperty {\n      if ((prop as any).variance) {\n        this.unexpected((prop as any).variance.loc.start);\n      }\n      delete (prop as any).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      const result = super.parseObjPropValue(\n        prop,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (result.value || result).typeParameters = typeParameters;\n      }\n      return result;\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, { at: param });\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, { at: param });\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, { at: param });\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: N.Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state.type);\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(FlowErrors.ImportReflectionHasImportType, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n    }\n\n    parseImportSpecifierLocal<\n      T extends\n        | N.ImportSpecifier\n        | N.ImportDefaultSpecifier\n        | N.ImportNamespaceSpecifier,\n    >(node: N.ImportDeclaration, specifier: Undone<T>, type: T[\"type\"]): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\" as const;\n      } else if (this.isContextual(tt._type)) {\n        kind = \"type\" as const;\n      }\n      if (kind) {\n        const lh = this.lookahead();\n        const { type } = lh;\n\n        // import type * is not allowed\n        if (kind === \"type\" && type === tt.star) {\n          // FIXME: lh.start?\n          this.unexpected(null, lh.type);\n        }\n\n        if (\n          isMaybeDefaultImport(type) ||\n          type === tt.braceL ||\n          type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, {\n              at: specifier,\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n          at: specifier,\n        });\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(\n      node: Undone<N.Function>,\n      isConstructor: boolean,\n    ): void {\n      // @ts-expect-error kind may not index node\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        // @ts-expect-error refine typings\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters: N.TypeParameterDeclaration;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression:\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n          | undefined\n          | null = null;\n\n        if (\n          arrow.node &&\n          // @ts-expect-error: refine tryParse typings\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            // @ts-expect-error: refine tryParse typings\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                { at: typeParameters },\n              );\n            }\n            // @ts-expect-error: refine tryParse typings\n            return arrow.node;\n          }\n\n          // @ts-expect-error: refine typings\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n          at: typeParameters,\n        });\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error todo(flow->ts)\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode<N.TypeAnnotation>();\n\n          [\n            typeNode.typeAnnotation,\n            // @ts-expect-error (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        // @ts-expect-error todo(flow->ts)\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Pattern[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction?: boolean | null,\n      strictModeChanged: boolean = true,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node.params[i] });\n        }\n      }\n\n      super.checkParams(\n        node,\n        allowDuplicates,\n        isArrowFunction,\n        strictModeChanged,\n      );\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls?: boolean | null,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startLoc.index) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startLoc);\n        node.callee = base;\n        node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        // @ts-expect-error: refine tryParse typings\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          // @ts-expect-error: refine tryParse typings\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node = this.startNodeAt<N.OptionalCallExpression>(startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt<\n          N.OptionalCallExpression | N.CallExpression\n        >(startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) {\n            (node as Undone<N.OptionalCallExpression>).optional = false;\n          }\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n      this.parseFunctionParams(node, false);\n      if (!this.parseArrow(node)) return;\n      return super.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(FlowErrors.UnterminatedFlowComment, {\n          at: this.state.curPosition(),\n        });\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | undefined {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, {\n            at: this.state.startLoc,\n          });\n        }\n        this.hasFlowCommentCompletion();\n        const commentSkip = this.skipFlowComment();\n        if (commentSkip) {\n          this.state.pos += commentSkip;\n          this.state.hasFlowComment = true;\n        }\n        return;\n      }\n\n      return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\n    }\n\n    skipFlowComment(): number | false {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          // @ts-expect-error testing whether a number is included\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, {\n          at: this.state.curPosition(),\n        });\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n        at: loc,\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n          ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n          : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        {\n          at: loc,\n          ...enumContext,\n        },\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n        at: loc,\n        enumName,\n        memberName,\n      });\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      node: N.Node,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n        at: node,\n        enumName,\n      });\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): {\n      id: N.Node;\n      init: EnumMemberInit;\n    } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\" as const, loc };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string;\n      explicitType: EnumExplicitType;\n    }): {\n      members: {\n        booleanMembers: Array<N.Node>;\n        numberMembers: Array<N.Node>;\n        stringMembers: Array<N.Node>;\n        defaultedMembers: Array<N.Node>;\n      };\n      hasUnknownMembers: boolean;\n    } {\n      const seenNames = new Set();\n      const members = {\n        // @ts-expect-error: migrate to Babel types\n        booleanMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        numberMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        stringMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, {\n            at: id,\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, {\n            at: id,\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string;\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n          at: this.state.startLoc,\n          enumName,\n        });\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, {\n          at: this.state.startLoc,\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: Undone<N.Node>, id: N.Node): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: Undone<N.Node>): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n", "const entities: {\n  __proto__: null;\n  [name: string]: string;\n} = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n} as const;\nexport default entities;\n", "import * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types\";\nimport type { TokContext } from \"../../tokenizer/context\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport type * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { type Undone } from \"../../parser/node\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({ openingTagName }: { openingTagName: string }) =>\n    `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity,\n  }: {\n    unexpected: string;\n    HTMLEntity: string;\n  }) =>\n    `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object?: N.JSXElement | null): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport interface IJSXParserMixin {\n  jsxParseOpeningElementAfterName(\n    node: N.JSXOpeningElement,\n  ): N.JSXOpeningElement;\n}\n\nexport default (superClass: typeof Parser) =>\n  class JSXParserMixin extends superClass implements Parser, IJSXParserMixin {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(JsxErrors.UnterminatedJsxContent, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                this.finishToken(tt.jsxTagStart);\n              } else {\n                super.getTokenFromCode(ch);\n              }\n              return;\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            this.finishToken(tt.jsxText, out);\n            return;\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, {\n                at: this.state.curPosition(),\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) == charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      this.finishToken(tt.jsxName, this.input.slice(start, this.state.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, { at: node });\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, {\n            at: this.state.startLoc,\n          });\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(this.state.lastTokEndLoc);\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: Undone<N.JSXSpreadChild>): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_expr);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: Undone<N.JSXExpressionContainer>,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(JsxErrors.UnexpectedSequenceExpression, {\n              at: expression.expressions[1],\n            });\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(startLoc: Position): N.JSXOpeningElement {\n      const node = this.startNodeAt<N.JSXOpeningElement | N.JSXOpeningFragment>(\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        // @ts-expect-error migrate to Babel types\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(\n        node as Undone<N.JSXOpeningElement>,\n      );\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: Undone<N.JSXOpeningElement>,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(startLoc: Position): N.JSXClosingElement {\n      const node = this.startNodeAt(startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(startLoc);\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode<\n                N.JSXSpreadChild | N.JSXExpressionContainer\n              >();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(node, tc.j_expr),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, {\n            at: closingElement,\n          });\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, {\n              at: closingElement,\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n          at: this.state.startLoc,\n        });\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        this.jsxReadToken();\n        return;\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          this.jsxReadWord();\n          return;\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          this.finishToken(tt.jsxTagEnd);\n          return;\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          this.jsxReadString(code);\n          return;\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        this.finishToken(tt.jsxTagStart);\n        return;\n      }\n\n      super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n", "import type { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n  BIND_FLAGS_TS_IMPORT,\n  SCOPE_TS_MODULE,\n} from \"../../util/scopeflags\";\nimport type * as N from \"../../types\";\nimport { Errors } from \"../../parse-error\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  importsStack: Set<string>[] = [];\n\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    this.importsStack.push(new Set()); // Always keep the top-level scope for export checks.\n\n    return new TypeScriptScope(flags);\n  }\n\n  enter(flags: number): void {\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n\n    super.enter(flags);\n  }\n\n  exit() {\n    const flags = super.exit();\n\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.pop();\n    }\n\n    return flags;\n  }\n\n  hasImport(name: string, allowShadow?: boolean) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    if (bindingType & BIND_FLAGS_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n\n    if (this.hasImport(name)) return;\n\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.types.has(name) || scope.exportOnlyBindings.has(name)) return;\n    }\n\n    super.checkLocalExport(id);\n  }\n}\n", "import * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  AssignmentPattern,\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  ObjectOrClassMember,\n  ClassMember,\n  ObjectMember,\n  TsNamedTypeElementBase,\n  PrivateName,\n  ObjectExpression,\n  ObjectPattern,\n  ArrayExpression,\n  ArrayPattern,\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils, type Undone } from \"./node\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_FLAGS_NO_LET_IN_LEXICAL,\n} from \"../util/scopeflags\";\nimport type { ExpressionErrors } from \"./util\";\nimport { Errors, type LValAncestor } from \"../parse-error\";\nimport type Parser from \"./index\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport const enum ParseBindingListFlags {\n  ALLOW_EMPTY = 1 << 0,\n  IS_FUNCTION_PARAMS = 1 << 1,\n  IS_CONSTRUCTOR_PARAMS = 1 << 2,\n}\n\nexport default abstract class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  abstract parseIdentifier(liberal?: boolean): Identifier;\n  abstract parseMaybeAssign(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseMaybeAssignAllowIn(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseObjectLike<T extends ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): T;\n  abstract parseObjPropValue(\n    prop: any,\n    startLoc: Position | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void;\n  abstract parsePropertyName(\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ): Expression | Identifier;\n  abstract parsePrivateName(): PrivateName;\n  // Forward-declaration: defined in statement.js\n  abstract parseDecorator(): Decorator;\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n   *\n   * - Parenthesized Destructuring patterns\n   * - RestElement is not the last element\n   * - Missing `=` in assignment pattern\n   *\n   * NOTE: There is a corresponding \"isAssignable\" method.\n   * When this one is updated, please check if also that one needs to be updated.\n   *\n   * @param node The expression atom\n   * @param isLHS Whether we are parsing a LeftHandSideExpression.\n   *              If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *              If isLHS is `false`, we are in an arrow function parameters list.\n   */\n  toAssignable(node: Node, isLHS: boolean = false): void {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParameterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParameterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            { at: node },\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc,\n            });\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, { at: node.left.loc.end });\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        { at: prop.key },\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, { at: prop });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaLoc: Position | undefined | null,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, { at: elt });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, { at: trailingCommaLoc });\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return (node.properties as ObjectExpression[\"properties\"]).every(\n          (prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type !== \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          },\n        );\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return (node as ArrayExpression).elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isParenthesizedExpr?: boolean,\n  ): ReadonlyArray<Expression | undefined | null> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): SpreadElement {\n    const node = this.startNode<SpreadElement>();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(this: Parser): RestElement {\n    const node = this.startNode<RestElement>();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(this: Parser): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode<ArrayPattern>();\n        this.next();\n        // @ts-expect-error: Fixme: TSParameterProperty can not be assigned to node.elements\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          ParseBindingListFlags.ALLOW_EMPTY,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    this: Parser,\n    close: TokenType,\n    closeCharCode: typeof charCodes[keyof typeof charCodes],\n    flags: ParseBindingListFlags,\n  ): Array<Pattern | TSParameterProperty> {\n    const allowEmpty = flags & ParseBindingListFlags.ALLOW_EMPTY;\n\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(\n          this.parseAssignableListItemTypes(this.parseRestBinding(), flags),\n        );\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc,\n          });\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(flags, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(\n    this: Parser,\n    prop: Undone<RestElement>,\n  ): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(this: Parser): ObjectMember | RestElement {\n    const prop = this.startNode<ObjectMember | RestElement>();\n    const { type, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(prop as Undone<RestElement>);\n    } else if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      (prop as Undone<ObjectMember>).key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop as Undone<ObjectMember>);\n    }\n    (prop as Undone<ObjectMember>).method = false;\n    return this.parseObjPropValue(\n      prop as Undone<ObjectMember>,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n  }\n\n  parseAssignableListItem(\n    this: Parser,\n    flags: ParseBindingListFlags,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(\n    param: Pattern,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flags: ParseBindingListFlags,\n  ): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    this: Parser,\n    startLoc?: Position | null,\n    left?: Pattern | null,\n  ): Pattern {\n    startLoc ??= this.state.startLoc;\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt<AssignmentPattern>(startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus its descendants must be subsequently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param type A Node `type` string\n   * @param isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    binding: BindingTypes,\n  ): string | boolean {\n    return getOwn(\n      {\n        AssignmentPattern: \"left\",\n        RestElement: \"argument\",\n        ObjectProperty: \"value\",\n        ParenthesizedExpression: \"expression\",\n        ArrayPattern: \"elements\",\n        ObjectPattern: \"properties\",\n      },\n      // @ts-expect-error refine string to enum\n      type,\n    );\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param expression The expression in question to check.\n   * @param options A set of options described below.\n   * @param options.in\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param options.binding\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BIND_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param options.checkClashes\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param options.strictModeChanged\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param options.hasParenthesizedAncestor\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   */\n\n  checkLVal(\n    expression: Expression | ObjectMember | RestElement,\n    {\n      in: ancestor,\n      binding = BIND_NONE,\n      checkClashes = false,\n      strictModeChanged = false,\n      hasParenthesizedAncestor = false,\n    }: {\n      in: LValAncestor;\n      binding?: BindingTypes;\n      checkClashes?: Set<string> | false;\n      strictModeChanged?: boolean;\n      hasParenthesizedAncestor?: boolean;\n    },\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, { at: expression });\n      }\n      return;\n    }\n\n    if (type === \"Identifier\") {\n      this.checkIdentifier(\n        expression as Identifier,\n        binding,\n        strictModeChanged,\n      );\n\n      const { name } = expression as Identifier;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, { at: expression });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, { at: expression, ancestor });\n      return;\n    }\n\n    const [key, isParenthesizedExpression] = Array.isArray(validity)\n      ? validity\n      : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor =\n      type === \"ArrayPattern\" ||\n      type === \"ObjectPattern\" ||\n      type === \"ParenthesizedExpression\"\n        ? ({ type } as const)\n        : ancestor;\n\n    // @ts-expect-error key may not index expression.\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression,\n        });\n      }\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingTypes,\n    strictModeChanged: boolean = false,\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, { at, referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (bindingType & BIND_FLAGS_NO_LET_IN_LEXICAL && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, { at });\n    }\n\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingTypes) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, { at: node });\n    }\n  }\n\n  checkCommaAfterRest(\n    close: typeof charCodes[keyof typeof charCodes],\n  ): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      { at: this.state.startLoc },\n    );\n\n    return true;\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type State from \"../../tokenizer/state\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport type * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { createPositionWithColumnOffset } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_TS_TYPE_IMPORT,\n  BIND_CLASS,\n  BIND_NONE,\n  BIND_FLAGS_TS_IMPORT,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport type { ParseStatementFlag } from \"../../parser/statement\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\nimport type { Pattern } from \"../../types\";\nimport type { Expression } from \"../../types\";\nimport type { IJSXParserMixin } from \"../jsx\";\nimport { ParseBindingListFlags } from \"../../parser/lval\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | \"const\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x?: T | null): T {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\ntype ModifierBase = {\n  accessibility?: N.Accessibility;\n} & {\n  [key in TsModifier]?: boolean | undefined | null;\n};\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({ methodName }: { methodName: string }) =>\n    `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName,\n  }: {\n    propertyName: string;\n  }) =>\n    `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter:\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  AccessorCannotBeOptional:\n    \"An 'accessor' property cannot be declared optional.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier:\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ modifier }: { modifier: N.Accessibility }) =>\n      `Accessibility modifier already seen.`,\n  DuplicateModifier: ({ modifier }: { modifier: TsModifier }) =>\n    `Duplicate modifier: '${modifier}'.`,\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: ({ token }: { token: \"extends\" | \"implements\" }) =>\n    `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` modifier\",\n  IncompatibleModifiers: ({\n    modifiers,\n  }: {\n    modifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride:\n    \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic:\n    \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext:\n    \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier,\n  }: {\n    modifier: TsModifier;\n  }) =>\n    `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers,\n  }: {\n    orderedModifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression:\n    \"Invalid property access after an instantiation expression. \" +\n    \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName:\n    \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass:\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam:\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion:\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  // TODO: Accesor -> Accessor\n  SetAccesorCannotHaveOptionalParameter:\n    \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter:\n    \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType:\n    \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName,\n  }: {\n    typeParameterName: string;\n  }) =>\n    `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier:\n    \"Static class blocks cannot have any modifier.\",\n  TupleOptionalAfterType:\n    \"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed:\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports:\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports:\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({ type }: { type: string }) =>\n    `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n});\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(value: string): N.TsKeywordTypeType | undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): modifier is N.Accessibility {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(\n  modifier: string,\n): modifier is N.VarianceAnnotations {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\ntype ClassWithMixin<\n  T extends new (...args: any) => any,\n  M extends object,\n> = T extends new (...args: infer P) => infer I\n  ? new (...args: P) => I & M\n  : never;\n\nexport default (superClass: ClassWithMixin<typeof Parser, IJSXParserMixin>) =>\n  class TypeScriptParserMixin extends superClass implements Parser {\n    getScopeHandler(): {\n      new (...args: any): TypeScriptScopeHandler;\n    } {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T extends TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): T | undefined | null {\n      if (\n        !tokenIsIdentifier(this.state.type) &&\n        this.state.type !== tt._in &&\n        this.state.type !== tt._const\n      ) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.indexOf(modifier) !== -1) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers<N extends ModifierBase>(\n      {\n        allowedModifiers,\n        disallowedModifiers,\n        stopOnStartOfClassStaticBlock,\n        errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n      }: {\n        allowedModifiers: readonly TsModifier[];\n        disallowedModifiers?: TsModifier[];\n        stopOnStartOfClassStaticBlock?: boolean;\n        errorTemplate?: typeof TSErrors.InvalidModifierOnTypeMember;\n      },\n      modified: N,\n    ): void {\n      const enforceOrder = (\n        loc: Position,\n        modifier: TsModifier,\n        before: TsModifier,\n        after: TsModifier,\n      ) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, {\n            at: loc,\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (\n        loc: Position,\n        modifier: TsModifier,\n        mod1: TsModifier,\n        mod2: TsModifier,\n      ) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, {\n            at: loc,\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: TsModifier | undefined | null = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, {\n              at: startLoc,\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, {\n            at: startLoc,\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n    }\n\n    tsParseList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T | undefined | null,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] | undefined | null {\n      const result = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStart;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node = this.startNode<N.TsImportType>();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: Undone<N.TsQualifiedName> =\n          this.startNodeAtNode<N.TsQualifiedName>(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node = this.startNode<N.TsTypeReference>();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node = this.startNodeAtNode<N.TsTypePredicate>(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node = this.startNode<N.TsThisType>();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node = this.startNode<N.TsTypeQuery>();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\n        \"const\",\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseConstModifier = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"const\"],\n      // for better error recovery\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n    });\n\n    tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\", \"const\"],\n      disallowedModifiers: [\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseTypeParameter(\n      parseModifiers: (node: Undone<N.TsTypeParameter>) => void,\n    ): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers: (node: N.TsTypeParameter) => void,\n    ): N.TsTypeParameterDeclaration | undefined | null {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(parseModifiers: (node: N.TsTypeParameter) => void) {\n      const node = this.startNode<N.TsTypeParameterDeclaration>();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        // @ts-expect-error refine typings\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, { at: node });\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: Undone<N.TsSignatureDeclaration>,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): Array<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern\n    > {\n      return super\n        .parseBindingList(\n          tt.parenR,\n          charCodes.rightParenthesis,\n          ParseBindingListFlags.IS_FUNCTION_PARAMS,\n        )\n        .map(pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n              at: pattern,\n              type: pattern.type,\n            });\n          }\n          return pattern as any;\n        });\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: Undone<\n        N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration\n      >,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(\n      node: Undone<N.TsIndexSignature>,\n    ): N.TsIndexSignature | undefined | null {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, { at: node });\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, { at: this.state.curPosition() });\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, { at: this.state.curPosition() });\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n              at: method[returnTypeKey],\n            });\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id = this.startNode<N.Identifier>();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\"readonly\"],\n          disallowedModifiers: [\n            \"declare\",\n            \"abstract\",\n            \"private\",\n            \"protected\",\n            \"public\",\n            \"static\",\n            \"override\",\n          ],\n        },\n        node,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      super.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        super.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node = this.startNode<N.TsTypeLiteral>();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): Array<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node = this.startNode<N.TsMappedType>();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node = this.startNode<N.TsTupleType>();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements: boolean | null = null;\n      node.elementTypes.forEach(elementNode => {\n        const { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, {\n            at: elementNode,\n          });\n        }\n\n        seenOptionalElement ||=\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        let checkType = type;\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          checkType = elementNode.type;\n        }\n\n        const isLabeled = checkType === \"TSNamedTupleMember\";\n        labeledElements ??= isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n            at: elementNode,\n          });\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsNamedTupleMember | N.TsType {\n      // parses `...TsType[]`\n\n      const { startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n\n      let labeled: boolean;\n      let label: N.Identifier;\n      let optional: boolean;\n      let type: N.TsNamedTupleMember | N.TsType;\n\n      const isWord = tokenIsKeywordOrIdentifier(this.state.type);\n      const chAfterWord = isWord ? this.lookaheadCharCode() : null;\n      if (chAfterWord === charCodes.colon) {\n        labeled = true;\n        optional = false;\n        label = this.parseIdentifier(true);\n        this.expect(tt.colon);\n        type = this.tsParseType();\n      } else if (chAfterWord === charCodes.questionMark) {\n        optional = true;\n        const startLoc = this.state.startLoc;\n        const wordName = this.state.value;\n        const typeOrLabel = this.tsParseNonArrayType();\n\n        if (this.lookaheadCharCode() === charCodes.colon) {\n          labeled = true;\n          label = this.createIdentifier(\n            this.startNodeAt<N.Identifier>(startLoc),\n            wordName,\n          );\n          this.expect(tt.question);\n          this.expect(tt.colon);\n          type = this.tsParseType();\n        } else {\n          labeled = false;\n          type = typeOrLabel;\n          this.expect(tt.question);\n        }\n      } else {\n        type = this.tsParseType();\n        optional = this.eat(tt.question);\n        // In this case (labeled === true) could be only in invalid label.\n        // E.g. [x.y:type]\n        // An error is raised while processing node.\n        labeled = this.eat(tt.colon);\n      }\n\n      if (labeled) {\n        let labeledNode: Undone<N.TsNamedTupleMember>;\n        if (label) {\n          labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(label);\n          labeledNode.optional = optional;\n          labeledNode.label = label;\n          labeledNode.elementType = type;\n\n          if (this.eat(tt.question)) {\n            labeledNode.optional = true;\n            this.raise(TSErrors.TupleOptionalAfterType, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n        } else {\n          labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(type);\n          labeledNode.optional = optional;\n          this.raise(TSErrors.InvalidTupleMemberLabel, { at: type });\n          // @ts-expect-error This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          labeledNode.label = type;\n          labeledNode.elementType = this.tsParseType();\n        }\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode = this.startNodeAtNode<N.TsOptionalType>(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode = this.startNodeAt<N.TsRestType>(startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode<N.TsParenthesizedType>();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node = this.startNode<\n        N.TsFunctionOrConstructorType | N.TsConstructorType\n      >();\n      if (type === \"TSConstructorType\") {\n        (node as Undone<N.TsConstructorType>).abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node = this.startNode<N.TsLiteralType>();\n      // @ts-expect-error refine typings\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return super.parseExprAtom();\n          default:\n            this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node = this.startNode<N.TsLiteralType>();\n      node.literal = super.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType | N.Node {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node = this.startNode<N.TsLiteralType>();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              this.unexpected();\n            }\n            // @ts-expect-error: parseMaybeUnary must returns unary expression\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startLoc = this.state.startLoc;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startLoc.index);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                ? \"TSNullKeyword\"\n                : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node = this.startNode<N.TsKeywordType>();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node = this.startNodeAtNode<N.TsArrayType>(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node = this.startNodeAtNode<N.TsIndexedAccessType>(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node = this.startNode<N.TsTypeOperator>();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(\n          // @ts-expect-error todo(flow->ts)\n          node,\n        );\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, { at: node });\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode<N.TsInferType>();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode<N.TsTypeParameter>();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n        ? this.tsParseInferType()\n        : this.tsInAllowConditionalTypesContext(() =>\n            this.tsParseArrayTypeOrHigher(),\n          );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node = this.startNode<N.TsUnionType | N.TsIntersectionType>();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          super.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            ParseBindingListFlags.ALLOW_EMPTY,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t = this.startNode<N.TsTypeAnnotation>();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = thisTypePredicate;\n            node.asserts = true;\n            (node as N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            thisTypePredicate.asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node as N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation():\n      | N.TsTypeAnnotation\n      | undefined\n      | null {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): N.TsTypeAnnotation | undefined | null {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): N.TsType | undefined | null {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): N.Identifier | undefined | null {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(Errors.InvalidEscapedReservedWord, {\n          at: this.state.lastTokStartLoc,\n          reservedWord: \"asserts\",\n        });\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: Undone<N.TsTypeAnnotation> = this.startNode<N.TsTypeAnnotation>(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node = this.startNodeAtNode<N.TsConditionalType>(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, { at: this.state.startLoc });\n      }\n\n      const node = this.startNode<N.TsTypeAssertion>();\n      node.typeAnnotation = this.tsInType(() => {\n        this.next(); // \"<\"\n        return this.match(tt._const)\n          ? this.tsParseTypeReference()\n          : this.tsParseType();\n      });\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): Array<N.TsExpressionWithTypeArguments> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node = this.startNode<N.TsExpressionWithTypeArguments>();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, {\n          at: originalStartLoc,\n          token,\n        });\n      }\n\n      return delimitedList;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: Undone<N.TsInterfaceDeclaration>,\n      properties: {\n        declare?: true;\n      } = {},\n    ): N.TsInterfaceDeclaration | undefined | null {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, { at: this.state.startLoc });\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body = this.startNode<N.TSInterfaceBody>();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers,\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node = this.startNode<N.TsKeywordType>();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node = this.startNode<N.TsEnumMember>();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? super.parseStringLiteral(this.state.value)\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = super.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: Undone<N.TsEnumDeclaration>,\n      properties: {\n        const?: true;\n        declare?: true;\n      } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node = this.startNode<N.TsModuleBlock>();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      super.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: Undone<N.TsModuleDeclaration>,\n      nested: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode<N.TsModuleDeclaration>();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        // @ts-expect-error Fixme: refine typings\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = super.parseStringLiteral(this.state.value);\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: Undone<N.TsImportEqualsDeclaration>,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_FLAGS_TS_IMPORT);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, {\n          at: moduleReference,\n        });\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node = this.startNode<N.TsExternalModuleReference>();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T extends N.NodeBase | undefined | null>(\n      f: () => T,\n    ): T | undefined | null {\n      const result = this.tryParse(\n        abort =>\n          // @ts-expect-error todo(flow->ts)\n          f() || abort(),\n      );\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      // @ts-expect-error refine typings\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => T | undefined | false): T | undefined {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): N.Declaration | undefined | null {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind: \"let\" | null;\n\n      if (this.isContextual(tt._let)) {\n        starttype = tt._var;\n        kind = \"let\" as const;\n      }\n\n      // @ts-expect-error refine typings\n      return this.tsInAmbientContext(() => {\n        if (starttype === tt._function) {\n          nany.declare = true;\n          return super.parseFunctionStatement(\n            nany,\n            /* async */ false,\n            /* isHangingDeclaration */ false,\n          );\n        }\n\n        if (starttype === tt._class) {\n          // While this is also set by tsParseExpressionStatement, we need to set it\n          // before parsing the class declaration to know how to register it in the scope.\n          nany.declare = true;\n          return this.parseClass(\n            nany,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          );\n        }\n\n        if (starttype === tt._enum) {\n          return this.tsParseEnumDeclaration(nany, { declare: true });\n        }\n\n        if (starttype === tt._global) {\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n        }\n\n        if (starttype === tt._const || starttype === tt._var) {\n          if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n            nany.declare = true;\n            return this.parseVarStatement(nany, kind || this.state.value, true);\n          }\n\n          // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n          this.expect(tt._const);\n          return this.tsParseEnumDeclaration(nany, {\n            const: true,\n            declare: true,\n          });\n        }\n\n        if (starttype === tt._interface) {\n          const result = this.tsParseInterfaceDeclaration(nany, {\n            declare: true,\n          });\n          if (result) return result;\n        }\n\n        if (tokenIsIdentifier(starttype)) {\n          return this.tsParseDeclaration(\n            nany,\n            this.state.value,\n            /* next */ true,\n            /* decorators */ null,\n          );\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): N.Declaration | undefined | null {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n        /* decorators */ null,\n      );\n    }\n\n    tsParseExpressionStatement(\n      node: Undone<N.TsModuleDeclaration>,\n      expr: N.Identifier,\n      decorators: N.Decorator[] | null,\n    ): N.Declaration | undefined | null {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(\n            node,\n            expr.name,\n            /* next */ false,\n            decorators,\n          );\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n      decorators: N.Decorator[] | null,\n    ): N.Declaration | undefined | null {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node, decorators);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      if (!this.match(tt.lt)) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: Undone<N.ArrowFunctionExpression> | undefined | null =\n        this.tsTryParseAndCatch(() => {\n          const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n          node.typeParameters = this.tsParseTypeParameters(\n            this.tsParseConstModifier,\n          );\n          // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n          super.parseFunctionParams(node);\n          node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n          this.expect(tt.arrow);\n          return node;\n        });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return super.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression(): N.TsTypeParameterInstantiation | void {\n      if (this.reScan_lt() !== tt.lt) {\n        return undefined;\n      }\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode<N.TsTypeParameterInstantiation>();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, { at: node });\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      flags: ParseBindingListFlags,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location to include modifiers in range\n      const startLoc = this.state.startLoc;\n\n      const modified: ModifierBase = {};\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        },\n        modified,\n      );\n      const accessibility = modified.accessibility;\n      const override = modified.override;\n      const readonly = modified.readonly;\n      if (\n        !(flags & ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS) &&\n        (accessibility || readonly || override)\n      ) {\n        this.raise(TSErrors.UnexpectedParameterModifier, { at: startLoc });\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left, flags);\n      const elt = this.parseMaybeDefault(left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp = this.startNodeAt<N.TSParameterProperty>(startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, { at: pp });\n        }\n        pp.parameter = elt as any as N.Identifier | N.AssignmentPattern;\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    tsDisallowOptionalPattern(node: Undone<N.Function>) {\n      for (const param of node.params) {\n        if (\n          param.type !== \"Identifier\" &&\n          (param as any).optional &&\n          !this.state.isAmbientContext\n        ) {\n          this.raise(TSErrors.PatternIsOptional, { at: param });\n        }\n      }\n    }\n\n    setArrowFunctionParameters(\n      node: Undone<N.ArrowFunctionExpression>,\n      params: N.Expression[],\n      trailingCommaLoc?: Position | null,\n    ): void {\n      super.setArrowFunctionParameters(node, params, trailingCommaLoc);\n      this.tsDisallowOptionalPattern(node);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        return this.finishNode(node, bodilessType);\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, { at: node });\n        if ((node as Undone<N.FunctionDeclaration>).declare) {\n          return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        }\n      }\n      this.tsDisallowOptionalPattern(node);\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodiless function, we need to do it here.\n        this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(node);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: Array<N.Expression | undefined | null>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, {\n            at: node.typeAnnotation,\n          });\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: Array<N.Expression | undefined | null>,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isInParens?: boolean,\n    ): Array<N.Expression | undefined | null> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression =\n          this.startNodeAt<N.TsNonNullExpression>(startLoc);\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn =\n              this.tsTryParseGenericAsyncArrowFunction(startLoc);\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = super.parseTaggedTemplateExpression(\n              base,\n\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node = this.startNodeAt<\n              N.CallExpression | N.OptionalCallExpression\n            >(startLoc);\n            node.callee = base;\n            // possibleAsync always false here, because we would have handled it above.\n            // @ts-expect-error (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(\n              tt.parenR,\n              /* possibleAsync */ false,\n            );\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              (node as Undone<N.OptionalCallExpression>).optional =\n                isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>>>c is not (a<b>)>>c, but a<(b>>>c)\n            tokenType === tt.bitShiftR ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node = this.startNodeAt<N.TsInstantiationExpression>(startLoc);\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              { at: this.state.startLoc },\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartLoc: Position,\n      minPrec: number,\n    ): N.Expression {\n      let isSatisfies: boolean;\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        (this.isContextual(tt._as) ||\n          (isSatisfies = this.isContextual(tt._satisfies)))\n      ) {\n        const node = this.startNodeAt<\n          N.TsAsExpression | N.TsSatisfiesExpression\n        >(leftStartLoc);\n        node.expression = left;\n        node.typeAnnotation = this.tsInType(() => {\n          this.next(); // \"as\" or \"satisfies\"\n          if (this.match(tt._const)) {\n            if (isSatisfies) {\n              this.raise(Errors.UnexpectedKeyword, {\n                at: this.state.startLoc,\n                keyword: \"const\",\n              });\n            }\n            return this.tsParseTypeReference();\n          }\n\n          return this.tsParseType();\n        });\n        this.finishNode(\n          node,\n          isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\",\n        );\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(\n          // @ts-expect-error todo(flow->ts)\n          node,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(TSErrors.ImportReflectionHasImportType, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(\n      node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    ): N.AnyImport {\n      node.importKind = \"value\";\n      if (\n        tokenIsIdentifier(this.state.type) ||\n        this.match(tt.star) ||\n        this.match(tt.braceL)\n      ) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(tt._type) &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          ahead.type !== tt._from &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (tokenIsIdentifier(this.state.type) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(\n            node as Undone<N.TsImportEqualsDeclaration>,\n          );\n        }\n      }\n\n      const importNode = super.parseImport(node as Undone<N.ImportDeclaration>);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        // @ts-expect-error refine typings\n        importNode.specifiers.length > 1 &&\n        // @ts-expect-error refine typings\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n          at: importNode,\n        });\n      }\n\n      return importNode;\n    }\n\n    parseExport(\n      node: Undone<N.Node>,\n      decorators: N.Decorator[] | null,\n    ): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(tt._type) &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n          /* isExport */ true,\n        );\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign = node as Undone<N.TsExportAssignment>;\n        assign.expression = super.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl = node as Undone<N.TsNamespaceExportDeclaration>;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        node.exportKind = \"value\";\n\n        if (this.isContextual(tt._type)) {\n          const ch = this.lookaheadCharCode();\n          if (ch === charCodes.leftCurlyBrace || ch === charCodes.asterisk) {\n            this.next();\n            node.exportKind = \"type\";\n          }\n        }\n\n        return super.parseExport(\n          node as Undone<N.ExportAllDeclaration | N.ExportDefaultDeclaration>,\n          decorators,\n        );\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode<N.Class>();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        return this.parseClass(cls, true, true);\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(\n          this.startNode<N.TsInterfaceDeclaration>(),\n        );\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n            at: init,\n          });\n        } else if (\n          !isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))\n        ) {\n          this.raise(\n            TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            { at: init },\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(\n      flags: ParseStatementFlag,\n      decorators?: N.Decorator[] | null,\n    ): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node = this.startNode<N.TsEnumDeclaration>();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(\n          this.startNode<N.TsEnumDeclaration>(),\n        );\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(flags, decorators);\n    }\n\n    parseAccessModifier(): N.Accessibility | undefined | null {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: readonly TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ] as const;\n      this.tsParseModifiers(\n        {\n          allowedModifiers: modifiers,\n          disallowedModifiers: [\"in\", \"out\"],\n          stopOnStartOfClassStaticBlock: true,\n          errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n        },\n        member,\n      );\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n              at: this.state.curPosition(),\n            });\n          }\n          super.parseClassStaticBlock(classBody, member as N.StaticBlock);\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: Undone<N.ClassMember | N.TsIndexSignature>,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(\n        member as Undone<N.TsIndexSignature>,\n      );\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member as any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, { at: member });\n        }\n        if ((member as any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, {\n            at: member,\n            modifier: (member as any).accessibility,\n          });\n        }\n        if ((member as any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, { at: member });\n        }\n        if ((member as any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, { at: member });\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member as any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n          at: member,\n        });\n      }\n\n      if ((member as any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, { at: member });\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member as Undone<N.ClassMember>,\n        state,\n        isStatic,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp as any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, { at: methodOrProp });\n      }\n\n      if ((methodOrProp as any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, { at: methodOrProp });\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    // @ts-expect-error plugin overrides interfaces\n    parseExpressionStatement(\n      node: Undone<N.ExpressionStatement>,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? // @ts-expect-error refine typings\n            this.tsParseExpressionStatement(node, expr, decorators)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TsTypeCastExpression>(startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n          at: this.state.startLoc,\n        });\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: N.Declaration | undefined | null =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType?: BindingTypes,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node as any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty,\n    ): void {\n      if (!node.optional) {\n        if (this.eat(tt.bang)) {\n          node.definite = true;\n        } else if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (\n        this.state.isAmbientContext &&\n        !(node.readonly && !node.typeAnnotation) &&\n        this.match(tt.eq)\n      ) {\n        this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n          at: this.state.startLoc,\n        });\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(TSErrors.AbstractPropertyHasInitializer, {\n          at: this.state.startLoc,\n          propertyName:\n            key.type === \"Identifier\" && !node.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n        });\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // @ts-expect-error abstract may not index node\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, { at: node });\n      }\n\n      // @ts-expect-error accessibility may not index node\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, {\n          at: node,\n          // @ts-expect-error refine typings\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    parseClassAccessorProperty(\n      node: N.ClassAccessorProperty,\n    ): N.ClassAccessorProperty {\n      this.parseClassPropertyAnnotation(node);\n      if (node.optional) {\n        this.raise(TSErrors.AccessorCannotBeOptional, { at: node });\n      }\n      return super.parseClassAccessorProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, {\n          at: typeParameters,\n        });\n      }\n\n      // @ts-expect-error declare does not exist in ClassMethod\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, { at: method, kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        // @ts-expect-error refine typings\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ) {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      return super.parseObjPropValue(\n        prop,\n\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n    }\n\n    parseFunctionParams(node: N.Function, isConstructor: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: State | undefined | null;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: N.TsTypeParameterDeclaration | undefined | null;\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n        const expr = super.parseMaybeAssign(\n          refExpressionErrors,\n          afterLeftParse,\n        );\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters.params[0];\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(TSErrors.SingleTypeParameterWithoutTrailingComma, {\n                at: createPositionWithColumnOffset(parameter.loc.end, 1),\n                typeParameterName: parameter.name.name,\n              });\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.params[0].constraint &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, { at: node });\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(\n      refExpressionErrors?: ExpressionErrors | null,\n      sawUnary?: boolean,\n    ): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n      }\n    }\n\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          // @ts-expect-error refine typings\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(\n      param: N.Pattern,\n      flags: ParseBindingListFlags,\n    ) {\n      if (!(flags & ParseBindingListFlags.IS_FUNCTION_PARAMS)) return param;\n\n      if (this.eat(tt.question)) {\n        (param as any as N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParameterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              { at: node },\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, { at: node });\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left);\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    // @ts-expect-error plugin overrides interfaces\n    isValidLVal(\n      type:\n        | \"TSTypeCastExpression\"\n        | \"TSParameterProperty\"\n        | \"TSNonNullExpression\"\n        | \"TSAsExpression\"\n        | \"TSSatisfiesExpression\"\n        | \"TSTypeAssertion\",\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return (\n        getOwn(\n          {\n            // Allow \"typecasts\" to appear on the left of assignment expressions,\n            // because it may be in an arrow function.\n            // e.g. `const f = (foo: number = 0) => foo;`\n            TSTypeCastExpression: true,\n            TSParameterProperty: \"parameter\",\n            TSNonNullExpression: \"expression\",\n            TSAsExpression: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSSatisfiesExpression: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSTypeAssertion: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n          },\n          type,\n        ) || super.isValidLVal(type, isUnparenthesizedInAssign, binding)\n      );\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(\n      close: typeof charCodes[keyof typeof charCodes],\n    ): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      } else {\n        return super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          this.finishOp(tt.gt, 1);\n          return;\n        }\n        if (code === charCodes.lessThan) {\n          this.finishOp(tt.lt, 1);\n          return;\n        }\n      }\n      super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(\n      exprList: Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(\n            expr as N.TsTypeCastExpression,\n          );\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          // @ts-expect-error: refine typings\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        // @ts-expect-error: refine typings\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T extends N.Class>(\n      node: Undone<T>,\n      isStatement: boolean,\n      optionalId?: boolean,\n    ): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node as any).abstract;\n      try {\n        return super.parseClass(node, isStatement, optionalId);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n      decorators: N.Decorator[] | null,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | undefined | null {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.maybeTakeDecorators(\n          decorators,\n          this.parseClass<N.ClassDeclaration>(\n            node as N.ClassDeclaration,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          ),\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n            at: node,\n          });\n          return this.tsParseInterfaceDeclaration(\n            node as N.TsInterfaceDeclaration,\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod<\n      T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope?: boolean,\n    ) {\n      const method = super.parseMethod<T>(\n        node,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error todo(flow->ts) property not defined for all types in union\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? // @ts-expect-error estree typings\n            !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, {\n            at: method,\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: Undone<N.ExportSpecifier>,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: Undone<N.ImportSpecifier>,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n        isInTypeOnlyImport ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          { at: loc },\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(\n          node[rightOfAsKey],\n          hasTypeSpecifier ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT,\n        );\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\n// If a const declaration has no type annotation and is initialized to\n// a string literal, numeric literal, or enum reference, then it is\n// allowed. In an ideal world, we'd check whether init was *actually* an\n// enum reference, but we allow anything that \"could be\" a literal enum\n// in `isPossiblyLiteralEnum` since we don't have all the information\n// that the typescript compiler has.\nfunction isValidAmbientConstInitializer(\n  expression: N.Expression,\n  estree: boolean,\n): boolean {\n  const { type } = expression;\n  if (expression.extra?.parenthesized) {\n    return false;\n  }\n  if (estree) {\n    if (type === \"Literal\") {\n      const { value } = expression;\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\n        return true;\n      }\n    }\n  } else {\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\n      return true;\n    }\n  }\n  if (isNumber(expression, estree) || isNegativeNumber(expression, estree)) {\n    return true;\n  }\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\n    return true;\n  }\n  if (isPossiblyLiteralEnum(expression)) {\n    return true;\n  }\n  return false;\n}\n\nfunction isNumber(expression: N.Expression, estree: boolean): boolean {\n  if (estree) {\n    return (\n      expression.type === \"Literal\" &&\n      (typeof expression.value === \"number\" || \"bigint\" in expression)\n    );\n  } else {\n    return (\n      expression.type === \"NumericLiteral\" ||\n      expression.type === \"BigIntLiteral\"\n    );\n  }\n}\n\nfunction isNegativeNumber(expression: N.Expression, estree: boolean): boolean {\n  if (expression.type === \"UnaryExpression\") {\n    const { operator, argument } = expression as N.UnaryExpression;\n    if (operator === \"-\" && isNumber(argument, estree)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\") return false;\n  if (expression.computed) return false;\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n", "import * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type * as N from \"../types\";\nimport { ParseErrorEnum } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport type { BindingTypes } from \"../util/scopeflags\";\nimport type { Position } from \"../util/location\";\n\ntype PossiblePlaceholders = {\n  Identifier: N.Identifier;\n  StringLiteral: N.StringLiteral;\n  Expression: N.Expression;\n  Statement: N.Statement;\n  Declaration: N.Declaration;\n  BlockStatement: N.BlockStatement;\n  ClassBody: N.ClassBody;\n  Pattern: N.Pattern;\n};\nexport type PlaceholderTypes = keyof PossiblePlaceholders;\n\ntype NodeOf<T extends keyof PossiblePlaceholders> = PossiblePlaceholders[T];\n// todo: when there  is proper union type for Node\n// type NodeOf<T extends PlaceholderTypes> = Extract<N.Node, { type: T }>;\n\n// todo: Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T extends PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\",\n});\n\n/* eslint-disable sort-keys */\n\nexport default (superClass: typeof Parser) =>\n  class PlaceholdersParserMixin extends superClass implements Parser {\n    parsePlaceholder<T extends PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ MaybePlaceholder<T> | undefined | null {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        // @ts-expect-error placeholder typings\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T extends PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      // @ts-expect-error todo(flow->ts)\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        this.finishOp(tt.placeholder, 2);\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(\n      refExpressionErrors?: ExpressionErrors | null,\n    ): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") ||\n        super.parseExprAtom(refExpressionErrors)\n      );\n    }\n\n    parseIdentifier(liberal?: boolean): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal)\n      );\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ) {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"Placeholder\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    chStartsBindingIdentifier(ch: number, pos: number): boolean {\n      if (super.chStartsBindingIdentifier(ch, pos)) {\n        return true;\n      }\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(\n      node: N.BreakStatement | N.ContinueStatement,\n      isBreak: boolean,\n    ) {\n      // @ts-expect-error: node.label could be Placeholder\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(node, isBreak);\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        // @ts-expect-error placeholder typings\n        return super.parseExpressionStatement(node, expr);\n      }\n\n      if (this.match(tt.colon)) {\n        // @ts-expect-error placeholder typings\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration();\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(\n      allowDirectives?: boolean,\n      createNewLexicalScope?: boolean,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(\n          allowDirectives,\n          createNewLexicalScope,\n          afterBlockParse,\n        )\n      );\n    }\n\n    parseFunctionId(\n      requireId?: boolean,\n    ): MaybePlaceholder<\"Identifier\"> | undefined | null {\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseClass<T extends N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n            at: this.state.startLoc,\n          });\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      super.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        super.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node, decorators: N.Decorator[] | null): N.AnyExport {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(node, decorators);\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node, decorators);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(node);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          // @ts-expect-error placeholder typings\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration>,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(node);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier =\n        this.startNodeAtNode<N.ImportDefaultSpecifier>(placeholder);\n      specifier.local = placeholder;\n      node.specifiers.push(\n        this.finishNode(specifier, \"ImportDefaultSpecifier\"),\n      );\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource()\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (this.state.start > this.state.lastTokEndLoc.index) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, {\n          at: this.state.lastTokEndLoc,\n        });\n      }\n    }\n  };\n", "import type Parser from \"../parser\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types\";\nimport type * as N from \"../types\";\nimport type { ExpressionErrors } from \"../parser/util\";\n\nexport default (superClass: typeof Parser) =>\n  class V8IntrinsicMixin extends superClass implements Parser {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode<N.Identifier>();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName();\n          const identifier = this.createIdentifier(node, name);\n          // @ts-expect-error: avoid mutating AST types\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      return (\n        this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors)\n      );\n    }\n  };\n", "import type Parser from \"./parser\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"./typings\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = PluginConfig[];\n\nexport type MixinPlugin = (superClass: { new (...args: any): Parser }) => {\n  new (...args: any): Parser;\n};\n\n// This function’s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        // @ts-expect-error key may not exist in plugin options\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption<\n  PluginName extends ParserPluginWithOptions[0],\n  OptionName extends keyof PluginOptions<PluginName>,\n>(plugins: PluginList, name: PluginName, option: OptionName) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return (plugin[1] as PluginOptions<PluginName>)[option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (\n      decoratorsBeforeExport != null &&\n      typeof decoratorsBeforeExport !== \"boolean\"\n    ) {\n      throw new Error(\n        \"'decoratorsBeforeExport' must be a boolean, if specified.\",\n      );\n    }\n\n    const allowCallParenthesized = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"allowCallParenthesized\",\n    );\n    if (\n      allowCallParenthesized != null &&\n      typeof allowCallParenthesized !== \"boolean\"\n    ) {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error so @babel/core can provide better error message\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n", "// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport type * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport {\n  type Position,\n  createPositionWithColumnOffset,\n} from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, type ParseError } from \"../parse-error\";\nimport { UnparenthesizedPipeBodyDescriptions } from \"../parse-error/pipeline-operator-errors\";\nimport { setInnerComments } from \"./comments\";\nimport { cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \".\";\n\nimport type { SourceType } from \"../options\";\n\nexport default abstract class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  abstract parseBlock(\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement;\n  abstract parseClass(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ): N.Class;\n  abstract parseDecorators(allowExport?: boolean): void;\n  abstract parseFunction<T extends N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ): T;\n  abstract parseFunctionParams(node: N.Function, isConstructor?: boolean): void;\n  abstract parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: N.Directive[] | null | undefined,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void;\n  abstract parseProgram(\n    program: N.Program,\n    end: TokenType,\n    sourceType?: SourceType,\n  ): N.Program;\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean | undefined | null,\n    protoRef: {\n      used: boolean;\n    },\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // @ts-expect-error prop must be an ObjectProperty\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, { at: key });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, { at: key });\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(this: Parser): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    // @ts-expect-error fixme: refine types\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    this: Parser,\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt<N.AssignmentExpression>(startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        const startIndex = startLoc.index;\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startIndex\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startIndex\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startIndex\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\"),\n      });\n      // @ts-expect-error todo(flow->ts) improve node types\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    this: Parser,\n    expr: N.Expression,\n    startLoc: Position,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    this: Parser,\n    left: N.Expression | N.PrivateName,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt<N.LogicalExpression | N.BinaryExpression>(\n          leftStartLoc,\n        );\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc,\n            });\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc,\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(this: Parser): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      // @ts-expect-error TS2345: Argument of type 'string' is not assignable to parameter of type '\"ArrowFunctionExpression\" | \"YieldExpression\" | \"AssignmentExpression\" | \"ConditionalExpression\"'.\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        // @ts-expect-error TS2322: Type 'string' is not assignable to type '\"AssignmentExpression\" | \"ArrowFunctionExpression\" | \"ConditionalExpression\" | \"YieldExpression\"'.\n        type: body.type,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, { at: startLoc });\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(\n    node: N.AwaitExpression | Undone<N.UnaryExpression>,\n  ) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument,\n      });\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode<N.UnaryExpression | N.UpdateExpression>();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, { at: node });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, { at: node });\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node as Undone<N.UnaryExpression>);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(\n      // @ts-expect-error using \"Undone\" node as \"done\"\n      node,\n      update,\n      refExpressionErrors,\n    );\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, { at: startLoc });\n        return this.parseAwait(startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    this: Parser,\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (update) {\n      // @ts-expect-error Type 'Node' is missing the following properties from type 'Undone<UpdateExpression>': prefix, operator, argument\n      const updateExpressionNode = node as Undone<N.UpdateExpression>;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\"),\n      });\n      return node;\n    }\n\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt<N.UpdateExpression>(startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: (expr = this.finishNode(node, \"UpdateExpression\")),\n      });\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startLoc);\n  }\n\n  parseSubscripts(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls?: boolean | null,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls) {\n        this.raise(Errors.OptionalChainingNoNew, {\n          at: this.state.startLoc,\n        });\n        if (this.lookaheadCharCode() === charCodes.leftParenthesis) {\n          // stop at `?.` when parsing `new a?.()`\n          state.stop = true;\n          return base;\n        }\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(base, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt<\n      N.OptionalMemberExpression | N.MemberExpression\n    >(startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, { at: startLoc });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      (node as N.OptionalMemberExpression).optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors: ExpressionErrors | null = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    const node = this.startNodeAt<N.CallExpression | N.OptionalCallExpression>(\n      startLoc,\n    );\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      // @ts-expect-error when optionalChainMember is true, node must be an optional call\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        // @ts-expect-error todo(flow->ts)\n        node,\n        refExpressionErrors,\n      );\n    }\n    let finishedNode:\n      | N.CallExpression\n      | N.OptionalCallExpression\n      | N.ArrowFunctionExpression = this.finishCallExpression(\n      node,\n      optionalChainMember,\n    );\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt<N.ArrowFunctionExpression>(startLoc),\n        finishedNode as N.CallExpression,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return finishedNode;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node = this.startNodeAt<N.TaggedTemplateExpression>(startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, { at: startLoc });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n    node: Undone<T>,\n    optional: boolean,\n  ): T {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount:\n            this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n              ? 2\n              : 1,\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, { at: arg });\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    this: Parser,\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: N.Node | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): Array<N.Expression | undefined | null> {\n    const elts: N.Expression[] = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node as N.ArrowFunctionExpression;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(this: Parser): N.Expression {\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    let node;\n    let decorators: N.Decorator[] | null = null;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode<N.MetaProperty | N.Import>();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node as Undone<N.MetaProperty>);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        decorators = this.parseDecorators();\n      // fall through\n      case tt._class:\n        return this.parseClass(\n          this.maybeTakeDecorators(decorators, this.startNode()),\n          false,\n        );\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, { at: callee });\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: this.state.startLoc,\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName();\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        }\n        this.unexpected();\n        break;\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n        } else {\n          this.unexpected();\n        }\n        break;\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n            !this.hasFollowingLineBreak()\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseAsyncFunctionExpression(\n                this.startNodeAtNode(id),\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that “topic token”.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the “topic token”, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token’s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode<N.TopicReference>();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin’s configuration matches the current token’s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin’s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin’s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: Undone<N.Node>,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin’s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          { at: startLoc },\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin’s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin’s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration’s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            // @ts-expect-error token must have a label\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, { at: startLoc });\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n  ): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition(),\n      });\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    return this.parseArrowExpression(node, params, true);\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(\n    this: Parser,\n    node: Undone<N.DoExpression>,\n    isAsync: boolean,\n  ): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode<N.Super>();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, { at: node });\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, { at: node });\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, { at: node });\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode<N.PrivateName>();\n    const id = this.startNodeAt<N.Identifier>(\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      createPositionWithColumnOffset(this.state.startLoc, 1),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(\n    this: Parser,\n  ): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode<N.FunctionExpression | N.MetaProperty>();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"sent\",\n      );\n    }\n    return this.parseFunction(node as Undone<N.FunctionExpression>);\n  }\n\n  parseMetaProperty(\n    node: Undone<N.MetaProperty>,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: Undone<N.MetaProperty>): N.MetaProperty {\n    const id = this.createIdentifier(\n      this.startNodeAtNode<N.Identifier>(node),\n      \"import\",\n    );\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, { at: id });\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T extends N.Node>(\n    value: any,\n    type: T[\"type\"],\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T extends N.Node>(value: any, type: T[\"type\"]): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: {\n    value: any;\n    pattern: string;\n    flags: N.RegExpLiteral[\"flags\"];\n  }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode<N.BooleanLiteral>();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode<N.NullLiteral>();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(\n    this: Parser,\n    canBeArrow: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartLoc = this.state.startLoc;\n    const exprList: N.Expression[] = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      // @ts-expect-error todo(flow->ts) improve node types\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt<N.SequenceExpression>(innerStartLoc);\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(\n      startLoc,\n      // @ts-expect-error todo(flow->ts)\n      val,\n    );\n  }\n\n  wrapParenthesis(startLoc: Position, expression: N.Expression): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startLoc.index);\n\n      this.takeSurroundingComments(\n        expression,\n        startLoc.index,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression =\n      this.startNodeAt<N.ParenthesizedExpression>(startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(\n    node: Undone<N.ArrowFunctionExpression>,\n  ): Undone<N.ArrowFunctionExpression> | undefined {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startLoc: Position,\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(this: Parser): N.NewExpression | N.MetaProperty {\n    const node = this.startNode<N.NewExpression | N.MetaProperty>();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"new\",\n      );\n      this.next();\n      const metaProp = this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"target\",\n      );\n\n      if (\n        !this.scope.inNonArrowFunction &&\n        !this.scope.inClass &&\n        !this.options.allowNewTargetOutsideFunction\n      ) {\n        this.raise(Errors.UnexpectedNewTarget, { at: metaProp });\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node as Undone<N.NewExpression>);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(this: Parser, node: Undone<N.NewExpression>): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(this: Parser, node: Undone<N.NewExpression>): void {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, { at: node.callee });\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt<N.TemplateElement>(\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          // FIXME: Adding 1 is probably wrong.\n          at: createPositionWithColumnOffset(\n            this.state.firstInvalidTemplateEscapePos,\n            1,\n          ),\n        });\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      finishedNode,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return finishedNode;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(this: Parser, isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode<N.TemplateLiteral>();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(this: Parser): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike(\n    close: TokenType,\n    isPattern: true,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectPattern;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: false | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectExpression;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: true,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.RecordExpression;\n  parseObjectLike<T extends N.ObjectPattern | N.ObjectExpression>(\n    this: Parser,\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode<\n      N.ObjectExpression | N.ObjectPattern | N.RecordExpression\n    >();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(\n            // @ts-expect-error todo(flow->ts) improve node types\n            node,\n          );\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, { at: prop });\n      }\n\n      // @ts-expect-error shorthand may not index prop\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      // @ts-expect-error Fixme: refine typings\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    // @ts-expect-error type is well defined\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: N.Node): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: Undone<N.ObjectProperty>): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode<N.ObjectProperty>();\n    let isAsync = false;\n    let isAccessor = false;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    return this.parseObjPropValue(\n      prop,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        { at: method },\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, { at: method });\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    this: Parser,\n    prop: Undone<N.ObjectMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): N.ObjectMethod | undefined | null {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      const finishedProp = this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    this: Parser,\n    prop: Undone<N.ObjectProperty>,\n    startLoc: Position | undefined | null,\n    isPattern: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectProperty | undefined | null {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc,\n          });\n        }\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    this: Parser,\n    prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n    startLoc: Position | undefined | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMethod | N.ObjectProperty {\n    const node =\n      this.parseObjectMethod(\n        prop as Undone<N.ObjectMethod>,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop as Undone<N.ObjectProperty>,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    this: Parser,\n    prop:\n      | Undone<N.ObjectOrClassMember | N.ClassMember>\n      | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop as Undone<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, {\n                at: privateKeyLoc,\n              });\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            this.unexpected();\n        }\n      }\n      (prop as any).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod>(\n    this: Parser,\n    node: Undone<T>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: T[\"type\"],\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = isGenerator;\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, isConstructor);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return finishedNode;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    this: Parser,\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode<N.ArrayExpression | N.TupleExpression>();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[] | undefined | null,\n    isAsync: boolean,\n    trailingCommaLoc?: Position | null,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead ≠ {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[],\n    trailingCommaLoc?: Position | null,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params as (N.Pattern | N.TSParameterProperty)[];\n  }\n\n  parseFunctionBodyAndFinish<\n    T extends\n      | N.Function\n      | N.TSDeclareMethod\n      | N.TSDeclareFunction\n      | N.ClassPrivateMethod,\n  >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n    // @ts-expect-error (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowExpression?: boolean | null,\n    isMethod: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      (node as Undone<N.ArrowFunctionExpression>).body =\n        this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(Errors.IllegalLanguageModeDirective, {\n              at:\n                // @ts-expect-error kind may not index node\n                (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // @ts-expect-error key may not index node\n                !!node.key\n                  ? // @ts-expect-error node.key has been guarded\n                    node.key.loc.end\n                  : node,\n            });\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: ReadonlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: Undone<N.Function>,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isArrowFunction?: boolean | null,\n    strictModeChanged: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set<string>();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" } as const;\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged,\n      });\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    this: Parser,\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    nodeForExtra?: N.Node | null,\n  ): (N.Expression | null)[] {\n    const elts: (N.Expression | null)[] = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: false,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc,\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode<N.Identifier>();\n    const name = this.parseIdentifierName(liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(\n    node: Omit<N.Identifier, \"type\">,\n    name: string,\n  ): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word,\n      });\n      return;\n    } else if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, { at: startLoc });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, { at: startLoc });\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc,\n        });\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError({ at: startLoc });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, { at: startLoc });\n        return;\n      }\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(this: Parser, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt<N.AwaitExpression>(startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, { at: node });\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``, await of []\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      (type === tt._of && !this.state.containsEsc) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(this: Parser): N.YieldExpression {\n    const node = this.startNode<N.YieldExpression>();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    this.next();\n    let delegating = false;\n    let argument: N.Expression | null = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc,\n        });\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr: N.Expression, startLoc: Position) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt<N.PipelineBareFunction>(startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt<N.PipelineTopicExpression>(startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, { at: this.state.startLoc });\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, { at: startLoc });\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser’s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(this: Parser, prec: number): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(this: Parser): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    if (!this.match(tt.braceL)) {\n      this.unexpected(null, tt.braceL);\n    }\n    // start program node immediately after `{`\n    const program = this.startNodeAt<N.Program>(this.state.endLoc);\n    this.next(); // eat `{`\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prop: Undone<N.ObjectOrClassMember | N.ClassMember>,\n  ): void {}\n}\n", "import type * as N from \"../types\";\nimport {\n  tokenIsIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"../parse-error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n  BIND_CATCH_PARAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport type { Position } from \"../util/location\";\nimport { createPositionWithColumnOffset } from \"../util/location\";\nimport { cloneStringLiteral, cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \"./index\";\nimport { ParseBindingListFlags } from \"./lval\";\n\nconst loopLabel = { kind: \"loop\" } as const,\n  switchLabel = { kind: \"switch\" } as const;\n\nexport const enum ParseFunctionFlag {\n  Expression = 0b0000,\n  Declaration = 0b0001,\n  HangingDeclaration = 0b0010,\n  NullableId = 0b0100,\n  Async = 0b1000,\n}\n\nexport const enum ParseStatementFlag {\n  StatementOnly = 0b0000,\n  AllowImportExport = 0b0001,\n  AllowDeclaration = 0b0010,\n  AllowFunctionDeclaration = 0b0100,\n  AllowLabeledFunction = 0b1000,\n}\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n */\nfunction babel7CompatTokens(tokens: (Token | N.Comment)[], input: string) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // @ts-expect-error: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default abstract class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(this: Parser, file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    this: Parser,\n    program: Undone<N.Program>,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, { at, localName });\n      }\n    }\n    let finishedProgram: N.Program;\n    if (end === tt.eof) {\n      // finish at eof for top level program\n      finishedProgram = this.finishNode(program, \"Program\");\n    } else {\n      // finish immediately before the end token\n      finishedProgram = this.finishNodeAt(\n        program,\n        \"Program\",\n        createPositionWithColumnOffset(this.state.startLoc, -1),\n      );\n    }\n    return finishedProgram;\n  }\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = stmt as any;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode<N.InterpreterDirective>();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.hasFollowingBindingAtom();\n  }\n\n  chStartsBindingIdentifier(ch: number, pos: number) {\n    if (isIdentifierStart(ch)) {\n      keywordRelationalOperator.lastIndex = pos;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identifier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    } else if (ch === charCodes.backslash) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  chStartsBindingPattern(ch: number) {\n    return (\n      ch === charCodes.leftSquareBracket || ch === charCodes.leftCurlyBrace\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `let` and declaration is allowed, check if it\n   * starts a variable declaration so that it should be interpreted as a keyword.\n   */\n  hasFollowingBindingAtom(): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return (\n      this.chStartsBindingPattern(nextCh) ||\n      this.chStartsBindingIdentifier(nextCh, next)\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `using` and declaration is allowed, check if it\n   * starts a variable declaration so that it should be interpreted as a keyword.\n   */\n  hasFollowingBindingIdentifier(): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingIdentifier(nextCh, next);\n  }\n\n  startsUsingForOf(): boolean {\n    const lookahead = this.lookahead();\n    if (lookahead.type === tt._of && !lookahead.containsEsc) {\n      // `using of` must start a for-lhs-of statement\n      return false;\n    } else {\n      this.expectPlugin(\"explicitResourceManagement\");\n      return true;\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleItem\n  parseModuleItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowImportExport |\n        ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        // This function is actually also used to parse StatementItems,\n        // which with Annex B enabled allows labeled functions.\n        ParseStatementFlag.AllowLabeledFunction,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-StatementListItem\n  parseStatementListItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        (!this.options.annexB || this.state.strict\n          ? 0\n          : ParseStatementFlag.AllowLabeledFunction),\n    );\n  }\n\n  parseStatementOrSloppyAnnexBFunctionDeclaration(\n    this: Parser,\n    allowLabeledFunction: boolean = false,\n  ) {\n    let flags: ParseStatementFlag = ParseStatementFlag.StatementOnly;\n    if (this.options.annexB && !this.state.strict) {\n      flags |= ParseStatementFlag.AllowFunctionDeclaration;\n      if (allowLabeledFunction) {\n        flags |= ParseStatementFlag.AllowLabeledFunction;\n      }\n    }\n    return this.parseStatementLike(flags);\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  parseStatement(this: Parser) {\n    return this.parseStatementLike(ParseStatementFlag.StatementOnly);\n  }\n\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatementLike(\n    this: Parser,\n    flags: ParseStatementFlag,\n  ):\n    | N.Statement\n    | N.Declaration\n    | N.ImportDeclaration\n    | N.ExportDefaultDeclaration\n    | N.ExportNamedDeclaration\n    | N.ExportAllDeclaration {\n    let decorators: N.Decorator[] | null = null;\n\n    if (this.match(tt.at)) {\n      decorators = this.parseDecorators(true);\n    }\n    return this.parseStatementContent(flags, decorators);\n  }\n\n  parseStatementContent(\n    this: Parser,\n    flags: ParseStatementFlag,\n    decorators?: N.Decorator[] | null,\n  ): N.Statement {\n    const starttype = this.state.type;\n    const node = this.startNode();\n    const allowDeclaration = !!(flags & ParseStatementFlag.AllowDeclaration);\n    const allowFunctionDeclaration = !!(\n      flags & ParseStatementFlag.AllowFunctionDeclaration\n    );\n    const topLevel = flags & ParseStatementFlag.AllowImportExport;\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node as Undone<N.DebuggerStatement>);\n      case tt._do:\n        return this.parseDoWhileStatement(node as Undone<N.DoWhileStatement>);\n      case tt._for:\n        return this.parseForStatement(node as Undone<N.ForStatement>);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (!allowFunctionDeclaration) {\n          this.raise(\n            this.state.strict\n              ? Errors.StrictFunction\n              : this.options.annexB\n              ? Errors.SloppyFunctionAnnexB\n              : Errors.SloppyFunction,\n            { at: this.state.startLoc },\n          );\n        }\n        return this.parseFunctionStatement(\n          node as Undone<N.FunctionDeclaration>,\n          false,\n          !allowDeclaration && allowFunctionDeclaration,\n        );\n      case tt._class:\n        if (!allowDeclaration) this.unexpected();\n        return this.parseClass(\n          this.maybeTakeDecorators(\n            decorators,\n            node as Undone<N.ClassDeclaration>,\n          ),\n          true,\n        );\n\n      case tt._if:\n        return this.parseIfStatement(node as Undone<N.IfStatement>);\n      case tt._return:\n        return this.parseReturnStatement(node as Undone<N.ReturnStatement>);\n      case tt._switch:\n        return this.parseSwitchStatement(node as Undone<N.SwitchStatement>);\n      case tt._throw:\n        return this.parseThrowStatement(node as Undone<N.ThrowStatement>);\n      case tt._try:\n        return this.parseTryStatement(node as Undone<N.TryStatement>);\n\n      case tt._using:\n        // using [no LineTerminator here][lookahead != `await`] BindingList[+Using]\n        if (\n          this.hasFollowingLineBreak() ||\n          this.state.containsEsc ||\n          !this.hasFollowingBindingIdentifier()\n        ) {\n          break;\n        }\n        this.expectPlugin(\"explicitResourceManagement\");\n        if (!this.scope.inModule && this.scope.inTopLevel) {\n          this.raise(Errors.UnexpectedUsingDeclaration, {\n            at: this.state.startLoc,\n          });\n        } else if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          \"using\",\n        );\n      case tt._let: {\n        if (this.state.containsEsc) {\n          break;\n        }\n        // `let [` is an explicit negative lookahead for\n        // ExpressionStatement, so special-case it first.\n        const next = this.nextTokenStart();\n        const nextCh = this.codePointAtPos(next);\n        if (nextCh !== charCodes.leftSquareBracket) {\n          if (!allowDeclaration && this.hasFollowingLineBreak()) break;\n          if (\n            !this.chStartsBindingIdentifier(nextCh, next) &&\n            nextCh !== charCodes.leftCurlyBrace\n          ) {\n            break;\n          }\n        }\n      }\n      // fall through\n      case tt._const: {\n        if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n      }\n      // fall through\n      case tt._var: {\n        const kind = this.state.value;\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          kind,\n        );\n      }\n      case tt._while:\n        return this.parseWhileStatement(node as Undone<N.WhileStatement>);\n      case tt._with:\n        return this.parseWithStatement(node as Undone<N.WithStatement>);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node as Undone<N.EmptyStatement>);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node as Undone<N.ImportDeclaration>);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(\n            node as Undone<\n              | N.ExportAllDeclaration\n              | N.ExportDefaultDeclaration\n              | N.ExportDefaultDeclaration\n            >,\n            decorators,\n          );\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(result);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (!allowDeclaration) {\n            this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next(); // eat 'async'\n          return this.parseFunctionStatement(\n            node as Undone<N.FunctionDeclaration>,\n            true,\n            !allowDeclaration && allowFunctionDeclaration,\n          );\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(starttype) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(\n        node as Undone<N.LabeledStatement>,\n        maybeName,\n        // @ts-expect-error migrate to Babel types\n        expr,\n        flags,\n      );\n    } else {\n      return this.parseExpressionStatement(\n        node as Undone<N.ExpressionStatement>,\n        expr,\n        decorators,\n      );\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, { at: node });\n    }\n  }\n\n  decoratorsEnabledBeforeExport(): boolean {\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\n    return (\n      this.hasPlugin(\"decorators\") &&\n      this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== false\n    );\n  }\n\n  // Attach the decorators to the given class.\n  // NOTE: This method changes the .start location of the class, and thus\n  // can affect comment attachment. Calling it before or after finalizing\n  // the class node (and thus finalizing its comments) changes how comments\n  // before the `class` keyword or before the final .start location of the\n  // class are attached.\n  maybeTakeDecorators<T extends Undone<N.Class>>(\n    maybeDecorators: N.Decorator[] | null,\n    classNode: T,\n    exportNode?: Undone<N.ExportDefaultDeclaration | N.ExportNamedDeclaration>,\n  ): T {\n    if (maybeDecorators) {\n      if (classNode.decorators && classNode.decorators.length > 0) {\n        // Note: decorators attachment is only attempred multiple times\n        // when the class is part of an export declaration.\n        if (\n          typeof this.getPluginOption(\n            \"decorators\",\n            \"decoratorsBeforeExport\",\n          ) !== \"boolean\"\n        ) {\n          // If `decoratorsBeforeExport` was set to `true` or `false`, we\n          // already threw an error about decorators not being in a valid\n          // position.\n          this.raise(Errors.DecoratorsBeforeAfterExport, {\n            at: classNode.decorators[0],\n          });\n        }\n        classNode.decorators.unshift(...maybeDecorators);\n      } else {\n        classNode.decorators = maybeDecorators;\n      }\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\n    }\n    return classNode;\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(this: Parser, allowExport?: boolean): N.Decorator[] {\n    const decorators = [];\n    do {\n      decorators.push(this.parseDecorator());\n    } while (this.match(tt.at));\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (!this.decoratorsEnabledBeforeExport()) {\n        this.raise(Errors.DecoratorExportClass, { at: this.state.startLoc });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc,\n      });\n    }\n\n    return decorators;\n  }\n\n  parseDecorator(this: Parser): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode<N.Decorator>();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startLoc, expr);\n\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (\n          this.getPluginOption(\"decorators\", \"allowCallParenthesized\") ===\n            false &&\n          node.expression !== expr\n        ) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\n            at: paramsStartLoc,\n          });\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startLoc);\n          node.object = expr;\n          if (this.match(tt.privateName)) {\n            this.classScope.usePrivateName(\n              this.state.value,\n              this.state.startLoc,\n            );\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(this: Parser, expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: true,\n  ): N.BreakStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: false,\n  ): N.ContinueStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, { at: node, type });\n    }\n  }\n\n  parseDebuggerStatement(\n    node: Undone<N.DebuggerStatement>,\n  ): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(this: Parser): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  // https://tc39.es/ecma262/#prod-DoWhileStatement\n  parseDoWhileStatement(\n    this: Parser,\n    node: Undone<N.DoWhileStatement>,\n  ): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(\n    this: Parser,\n    node: Undone<N.ForStatement | N.ForInOf>,\n  ): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isAwaitAllowed() && this.eatContextual(tt._await)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    const startsWithUsing =\n      this.isContextual(tt._using) && !this.hasFollowingLineBreak();\n    const isLetOrUsing =\n      (startsWithLet && this.hasFollowingBindingAtom()) ||\n      (startsWithUsing &&\n        this.hasFollowingBindingIdentifier() &&\n        this.startsUsingForOf());\n    if (this.match(tt._var) || this.match(tt._const) || isLetOrUsing) {\n      const initNode = this.startNode<N.VariableDeclaration>();\n      const kind = this.state.value;\n      this.next();\n      this.parseVar(initNode, true, kind);\n      const init = this.finishNode(initNode, \"VariableDeclaration\");\n\n      const isForIn = this.match(tt._in);\n      if (isForIn && startsWithUsing) {\n        this.raise(Errors.ForInUsing, { at: init });\n      }\n      if (\n        (isForIn || this.isContextual(tt._of)) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node as Undone<N.ForInOf>, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, { at: init });\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, { at: init });\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { in: { type } });\n      return this.parseForIn(\n        node as Undone<N.ForInStatement | N.ForOfStatement>,\n        // @ts-expect-error init has been transformed to an assignable\n        init,\n        awaitAt,\n      );\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node as Undone<N.ForStatement>, init);\n  }\n\n  // https://tc39.es/ecma262/#prod-HoistableDeclaration\n  parseFunctionStatement(\n    this: Parser,\n    node: Undone<N.FunctionDeclaration>,\n    isAsync: boolean,\n    isHangingDeclaration: boolean,\n  ): N.FunctionDeclaration {\n    this.next(); // eat 'function'\n    return this.parseFunction(\n      node,\n      ParseFunctionFlag.Declaration |\n        (isHangingDeclaration ? ParseFunctionFlag.HangingDeclaration : 0) |\n        (isAsync ? ParseFunctionFlag.Async : 0),\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-IfStatement\n  parseIfStatement(this: Parser, node: Undone<N.IfStatement>) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    // Annex B.3.3\n    // https://tc39.es/ecma262/#sec-functiondeclarations-in-ifstatement-statement-clauses\n    node.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration();\n    node.alternate = this.eat(tt._else)\n      ? this.parseStatementOrSloppyAnnexBFunctionDeclaration()\n      : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(this: Parser, node: Undone<N.ReturnStatement>) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, { at: this.state.startLoc });\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-SwitchStatement\n  parseSwitchStatement(this: Parser, node: Undone<N.SwitchStatement>) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases: N.SwitchStatement[\"cases\"] = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        // @ts-expect-error Fixme\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatementListItem());\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(this: Parser, node: Undone<N.ThrowStatement>) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, { at: this.state.lastTokEndLoc });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(this: Parser): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    this.scope.enter(\n      this.options.annexB && param.type === \"Identifier\"\n        ? SCOPE_SIMPLE_CATCH\n        : 0,\n    );\n    this.checkLVal(param, {\n      in: { type: \"CatchClause\" },\n      binding: BIND_CATCH_PARAM,\n    });\n\n    return param;\n  }\n\n  parseTryStatement(\n    this: Parser,\n    node: Undone<N.TryStatement>,\n  ): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode<N.CatchClause>();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, { at: node });\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-VariableStatement\n  // https://tc39.es/ecma262/#prod-LexicalDeclaration\n  parseVarStatement(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  // https://tc39.es/ecma262/#prod-WhileStatement\n  parseWhileStatement(\n    this: Parser,\n    node: Undone<N.WhileStatement>,\n  ): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(\n    this: Parser,\n    node: Undone<N.WithStatement>,\n  ): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, { at: this.state.startLoc });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: Undone<N.EmptyStatement>): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-LabelledStatement\n  parseLabeledStatement(\n    this: Parser,\n    node: Undone<N.LabeledStatement>,\n    maybeName: string,\n    expr: N.Identifier,\n    flags: ParseStatementFlag,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    // https://tc39.es/ecma262/#prod-LabelledItem\n    node.body =\n      flags & ParseStatementFlag.AllowLabeledFunction\n        ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(true)\n        : this.parseStatement();\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: Undone<N.ExpressionStatement>,\n    expr: N.Expression,\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    decorators: N.Decorator[] | null,\n  ) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    this: Parser,\n    allowDirectives: boolean = false,\n    createNewLexicalScope: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode<N.BlockStatement>();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    this: Parser,\n    node: Undone<N.BlockStatementLike>,\n    allowDirectives: boolean | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body: N.BlockStatementLike[\"body\"] = (node.body = []);\n    const directives: N.BlockStatementLike[\"directives\"] = (node.directives =\n      []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    this: Parser,\n    body: N.Statement[],\n    directives: N.Directive[] | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = topLevel\n        ? this.parseModuleItem()\n        : this.parseStatementListItem();\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    this: Parser,\n    node: Undone<N.ForStatement>,\n    init?: N.VariableDeclaration | N.Expression | null,\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    this: Parser,\n    node: Undone<N.ForInOf>,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt?: Position | null,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        !this.options.annexB ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\" | \"using\",\n    allowMissingInitializer: boolean = false,\n  ): Undone<N.VariableDeclaration> {\n    const declarations: N.VariableDeclarator[] = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode<N.VariableDeclarator>();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n        ? this.parseMaybeAssignDisallowIn()\n        : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\",\n          });\n        } else if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\",\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(\n    this: Parser,\n    decl: Undone<N.VariableDeclarator>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\",\n  ): void {\n    // Unlike \"let\" which must be handled in checkLVal, it suffices to check\n    // await here because `using` must not precede binding patterns.\n    if (kind === \"using\" && !this.inModule && this.match(tt._await)) {\n      this.raise(Errors.AwaitInUsingBinding, { at: this.state.startLoc });\n    }\n    const id = this.parseBindingAtom();\n    this.checkLVal(id, {\n      in: { type: \"VariableDeclarator\" },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n    });\n    decl.id = id;\n  }\n\n  // https://tc39.es/ecma262/#prod-AsyncFunctionExpression\n  parseAsyncFunctionExpression(\n    this: Parser,\n    node: Undone<N.FunctionExpression>,\n  ): N.FunctionExpression {\n    return this.parseFunction(node, ParseFunctionFlag.Async);\n  }\n\n  // Parse a function declaration or expression (depending on the\n  // ParseFunctionFlag.Declaration flag).\n\n  parseFunction<T extends N.NormalFunction>(\n    this: Parser,\n    node: Undone<T>,\n    flags: ParseFunctionFlag = ParseFunctionFlag.Expression,\n  ): T {\n    const hangingDeclaration = flags & ParseFunctionFlag.HangingDeclaration;\n    const isDeclaration = !!(flags & ParseFunctionFlag.Declaration);\n    const requireId = isDeclaration && !(flags & ParseFunctionFlag.NullableId);\n    const isAsync = !!(flags & ParseFunctionFlag.Async);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star)) {\n      if (hangingDeclaration) {\n        this.raise(Errors.GeneratorInSingleStatementContext, {\n          at: this.state.startLoc,\n        });\n      }\n      this.next(); // eat *\n      node.generator = true;\n    }\n\n    if (isDeclaration) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isDeclaration) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* isConstructor */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isDeclaration && !hangingDeclaration) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node as T);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node as T;\n  }\n\n  parseFunctionId(requireId?: boolean): N.Identifier | undefined | null {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(\n    this: Parser,\n    node: Undone<N.Function>,\n    isConstructor?: boolean,\n  ): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      ParseBindingListFlags.IS_FUNCTION_PARAMS |\n        (isConstructor ? ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS : 0),\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      !this.options.annexB || this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T extends N.Class>(\n    this: Parser,\n    node: Undone<T>,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next(); // 'class'\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    this: Parser,\n    hadSuperClass: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody = this.startNode<N.ClassBody>();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc,\n            });\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode<N.ClassMember>();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          // @ts-expect-error Fixme\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          // @ts-expect-error Fixme\n          member.kind === \"constructor\" &&\n          // @ts-expect-error Fixme\n          member.decorators &&\n          // @ts-expect-error Fixme\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, { at: member });\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, { at: this.state.startLoc });\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = member as any;\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = member as any;\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, member as any as N.StaticBlock);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod = member as N.ClassMethod;\n    const privateMethod = member as N.ClassPrivateMethod;\n    const publicProp = member as N.ClassProperty;\n    const privateProp = member as N.ClassPrivateProperty;\n    const accessorProp = member as N.ClassAccessorProperty;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key,\n        });\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, { at: key });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, { at: key });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, { at: publicMethod.key });\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, { at: publicMethod.key });\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (\n      isContextual &&\n      key.name === \"accessor\" &&\n      !this.isLineTerminator()\n    ) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(\n    this: Parser,\n    member: Undone<N.ClassMember>,\n  ): N.Expression | N.Identifier {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, { at: this.state.startLoc });\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc,\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<\n      N.StaticBlock & {\n        decorators?: Array<N.Decorator>;\n      }\n    >,\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body: N.Node[] = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, { at: member });\n    }\n  }\n\n  pushClassProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassProperty,\n  ) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, { at: prop.key });\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: Undone<N.ClassPrivateProperty>,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed) {\n      // Not private, so not node is not a PrivateName and we can safely cast\n      const key = prop.key as N.Expression;\n\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        // Non-computed field, which is either an identifier named \"constructor\"\n        // or a string literal named \"constructor\"\n        this.raise(Errors.ConstructorClassField, { at: key });\n      }\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key),\n        CLASS_ELEMENT_OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassPrivateMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: Undone<\n      N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod\n    >,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    methodOrProp: Undone<N.ClassMethod | N.ClassProperty>,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    this: Parser,\n    node: Undone<N.ClassPrivateProperty>,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(this: Parser, node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    this: Parser,\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    this: Parser,\n    node: Undone<\n      N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty\n    >,\n  ): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: Undone<N.Class>,\n    isStatement: boolean,\n    optionalId?: boolean | null,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, { at: this.state.startLoc });\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(this: Parser, node: Undone<N.Class>): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(\n    this: Parser,\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n    decorators: N.Decorator[] | null,\n  ): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar =\n      parseAfterDefault &&\n      this.eatExportStar(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const hasNamespace =\n      hasStar &&\n      this.maybeParseExportNamespaceSpecifier(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n      this.parseExportFrom(node as Undone<N.ExportNamedDeclaration>, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\n      this.unexpected(null, tt.braceL);\n    }\n\n    if (hasNamespace && parseAfterNamespace) {\n      this.unexpected(null, tt._from);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n      this.parseExportFrom(\n        node as Undone<N.ExportNamedDeclaration>,\n        isFromRequired,\n      );\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(\n        node as Undone<N.ExportNamedDeclaration>,\n      );\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      const node2 = node as Undone<N.ExportNamedDeclaration>;\n      this.checkExport(node2, true, false, !!node2.source);\n      if (node2.declaration?.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      const node2 = node as Undone<N.ExportDefaultDeclaration>;\n      // export default ...\n      const decl = this.parseExportDefaultExpression();\n      node2.declaration = decl;\n\n      if (decl.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, decl as N.ClassDeclaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n\n      this.checkExport(node2, true, true);\n\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\n    }\n\n    this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(tt._as)) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(this.state.lastTokStartLoc);\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n  ): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(this: Parser): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    if (this.match(tt._function)) {\n      this.next();\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration | ParseFunctionFlag.NullableId,\n      );\n    } else if (this.isAsyncFunction()) {\n      this.next(); // eat 'async'\n      this.next(); // eat 'function'\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration |\n          ParseFunctionFlag.NullableId |\n          ParseFunctionFlag.Async,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, { at: this.state.startLoc });\n      }\n      return this.parseClass(\n        this.maybeTakeDecorators(\n          this.parseDecorators(false),\n          this.startNode<N.ClassDeclaration>(),\n        ),\n        true,\n        true,\n      );\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc,\n      });\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n  parseExportDeclaration(\n    this: Parser,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    node: Undone<N.ExportNamedDeclaration>,\n  ): N.Declaration | undefined | null {\n    if (this.match(tt._class)) {\n      const node = this.parseClass(\n        this.startNode<N.ClassDeclaration>(),\n        true,\n        false,\n      );\n      return node;\n    }\n    return this.parseStatementListItem() as N.Declaration;\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n    expect?: boolean,\n  ): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (\n          this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n        ) {\n          this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: Undone<N.ExportNamedDeclaration | N.ExportDefaultDeclaration>,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = (node as any as N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration,\n            });\n          }\n        }\n        // @ts-expect-error node.specifiers may not exist\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        // @ts-expect-error node.specifiers may not exist\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      // @ts-expect-error migrate to Babel types\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node: Undone<\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier\n    >,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, { at: node });\n      } else {\n        this.raise(Errors.DuplicateExport, { at: node, exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkImportReflection(node: Undone<N.ImportDeclaration>) {\n    if (node.module) {\n      if (\n        node.specifiers.length !== 1 ||\n        node.specifiers[0].type !== \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(Errors.ImportReflectionNotBinding, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n      if (node.assertions?.length > 0) {\n        this.raise(Errors.ImportReflectionHasAssertion, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n    }\n  }\n\n  checkJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ) {\n    // @ts-expect-error Fixme: node.type must be undefined because they are undone\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      // @ts-expect-error specifiers may not index node\n      const { specifiers } = node;\n      if (specifiers != null) {\n        // @ts-expect-error refine specifier types\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start,\n          });\n        }\n      }\n    }\n  }\n\n  parseMaybeImportReflection(node: Undone<N.ImportDeclaration>) {\n    let isImportReflection = false;\n    if (this.isContextual(tt._module)) {\n      const lookahead = this.lookahead();\n      const nextType = lookahead.type;\n      if (tokenIsIdentifier(nextType)) {\n        if (nextType !== tt._from) {\n          // import module x\n          isImportReflection = true;\n        } else {\n          const nextNextTokenFirstChar = this.input.charCodeAt(\n            this.nextTokenStartSince(lookahead.end),\n          );\n          if (nextNextTokenFirstChar === charCodes.lowercaseF) {\n            // import module from from ...\n            isImportReflection = true;\n          }\n        }\n      } else if (nextType !== tt.comma) {\n        // import module { x } ...\n        // import module \"foo\"\n        // They are invalid, we will continue parsing and throw\n        // a recoverable error later\n        isImportReflection = true;\n      }\n    }\n    if (isImportReflection) {\n      this.expectPlugin(\"importReflection\");\n      this.next(); // eat tt._module;\n      node.module = true;\n    } else if (this.hasPlugin(\"importReflection\")) {\n      node.module = false;\n    }\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(this: Parser, node: Undone<N.ImportDeclaration>): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      this.parseMaybeImportReflection(node);\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(tt._from);\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        // @ts-expect-error attributes have been deprecated\n        node.attributes = attributes;\n      }\n    }\n    this.checkImportReflection(node);\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(this: Parser): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom() as N.StringLiteral;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldParseDefaultImport(node: Undone<N.ImportDeclaration>): boolean {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    node: Undone<N.ImportDeclaration>,\n    specifier: Undone<T>,\n    type: T[\"type\"],\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(specifier: Undone<T>, type: T[\"type\"], bindingType = BIND_LEXICAL) {\n    this.checkLVal(specifier.local, {\n      in: { type },\n      binding: bindingType,\n    });\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries AssertEntries}\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName,\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key,\n        });\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode<N.ImportDefaultSpecifier>(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode<N.ImportNamespaceSpecifier>();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: Undone<N.ImportDeclaration>) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode<N.ImportSpecifier>();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n        undefined,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: Undone<N.ImportSpecifier>,\n    importedIsString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    bindingType: BindingTypes | undefined,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: (imported as N.StringLiteral).value,\n        });\n      }\n      this.checkReservedWord(\n        (imported as N.Identifier).name,\n        specifier.loc.start,\n        true,\n        true,\n      );\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(\n      specifier,\n      \"ImportSpecifier\",\n      bindingType,\n    );\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n", "import type { Options } from \"../options\";\nimport type * as N from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<\n  string,\n  {\n    [x: string]: any;\n  }\n>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  // todo(flow->ts) - this probably can be removed\n  // abstract jsxParseOpeningElementAfterName(\n  //   node: N.JSXOpeningElement,\n  // ): N.JSXOpeningElement;\n\n  constructor(options: Options | undefined | null, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): {\n    new (...args: any): ScopeHandler;\n  } {\n    return ScopeHandler;\n  }\n\n  parse(): N.File {\n    this.enterInitialScopes();\n    const file = this.startNode() as N.File;\n    const program = this.startNode() as N.Program;\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n", "import { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport type {\n  PluginConfig as ParserPlugin,\n  FlowPluginOptions,\n  RecordAndTuplePluginOptions,\n  PipelineOperatorPluginOptions,\n} from \"./typings\";\nimport Parser from \"./parser\";\n\nimport type { ExportedTokenType } from \"./tokenizer/types\";\nimport {\n  getExportedToken,\n  tt as internalTokenTypes,\n  type InternalTokenTypes,\n} from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(\n  internalTokenTypes: InternalTokenTypes,\n): Record<string, ExportedTokenType> {\n  const tokenTypes: Record<string, ExportedTokenType> = {};\n  for (const typeName of Object.keys(\n    internalTokenTypes,\n  ) as (keyof InternalTokenTypes)[]) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: Options | undefined | null, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: { new (...args: any): Parser } } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): {\n  new (...args: any): Parser;\n} {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      // @ts-expect-error todo(flow->ts)\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n\nexport type {\n  FlowPluginOptions,\n  ParserPlugin,\n  PipelineOperatorPluginOptions,\n  RecordAndTuplePluginOptions,\n};\nexport type ParserOptions = Partial<Options>;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nvar MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  var cache = [];\n\n  return function(input) {\n    for (var i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        var temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    var result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nvar normalize = lruMemoize(function normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  var parts = [];\n  var start = 0;\n  var i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   \u201Csources\u201D entry.  This value is prepended to the individual\n    //   entries in the \u201Csource\u201D field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   \u201CsourceRoot\u201D, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\nfunction SortTemplate(comparator) {\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot, false) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n  return doQuickSort;\n}\n\nfunction cloneSort(comparator) {\n  let template = SortTemplate.toString();\n  let templateFn = new Function(`return ${template}`)();\n  return templateFn(comparator);\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\n\nlet sortCache = new WeakMap();\nexports.quickSort = function (ary, comparator, start = 0) {\n  let doQuickSort = sortCache.get(comparator);\n  if (doQuickSort === void 0) {\n    doQuickSort = cloneSort(comparator);\n    sortCache.set(comparator, doQuickSort);\n  }\n  doQuickSort(ary, comparator, start, ary.length - 1);\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    var boundCallback = aCallback.bind(context);\n    var names = this._names;\n    var sources = this._sources;\n    var sourceMapURL = this._sourceMapURL;\n\n    for (var i = 0, n = mappings.length; i < n; i++) {\n      var mapping = mappings[i];\n      var source = mapping.source === null ? null : sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, sourceMapURL);\n      boundCallback({\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : names.at(mapping.name)\n      });\n    }\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\n\nconst compareGenerated = util.compareByGeneratedPositionsDeflatedNoLine;\nfunction sortGenerated(array, start) {\n  let l = array.length;\n  let n = array.length - start;\n  if (n <= 1) {\n    return;\n  } else if (n == 2) {\n    let a = array[start];\n    let b = array[start + 1];\n    if (compareGenerated(a, b) > 0) {\n      array[start] = b;\n      array[start + 1] = a;\n    }\n  } else if (n < 20) {\n    for (let i = start; i < l; i++) {\n      for (let j = i; j > start; j--) {\n        let a = array[j - 1];\n        let b = array[j];\n        if (compareGenerated(a, b) <= 0) {\n          break;\n        }\n        array[j - 1] = b;\n        array[j] = a;\n      }\n    }\n  } else {\n    quickSort(array, compareGenerated, start);\n  }\n}\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    let subarrayStart = 0;\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n\n        sortGenerated(generatedMappings, subarrayStart);\n        subarrayStart = generatedMappings.length;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = [];\n        while (index < end) {\n          base64VLQ.decode(aStr, index, temp);\n          value = temp.value;\n          index = temp.rest;\n          segment.push(value);\n        }\n\n        if (segment.length === 2) {\n          throw new Error('Found a source, but no line and column');\n        }\n\n        if (segment.length === 3) {\n          throw new Error('Found a source and line, but no column');\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          let currentSource = mapping.source;\n          while (originalMappings.length <= currentSource) {\n            originalMappings.push(null);\n          }\n          if (originalMappings[currentSource] === null) {\n            originalMappings[currentSource] = [];\n          }\n          originalMappings[currentSource].push(mapping);\n        }\n      }\n    }\n\n    sortGenerated(generatedMappings, subarrayStart);\n    this.__generatedMappings = generatedMappings;\n\n    for (var i = 0; i < originalMappings.length; i++) {\n      if (originalMappings[i] != null) {\n        quickSort(originalMappings[i], util.compareByOriginalPositionsNoSource);\n      }\n    }\n    this.__originalMappings = [].concat(...originalMappings);\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n", "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n", "// This entry is the \"full-build\" that includes both the runtime\n// and the compiler, and supports on-the-fly compilation of the template option.\nimport { initDev } from './dev'\nimport { compile, CompilerOptions, CompilerError } from '@vue/compiler-dom'\nimport { registerRuntimeCompiler, RenderFunction, warn } from '@vue/runtime-dom'\nimport * as runtimeDom from '@vue/runtime-dom'\nimport { isString, NOOP, generateCodeFrame, extend } from '@vue/shared'\nimport { InternalRenderFunction } from 'packages/runtime-core/src/component'\n\nif (__DEV__) {\n  initDev()\n}\n\nconst compileCache: Record<string, RenderFunction> = Object.create(null)\n\nfunction compileToFunction(\n  template: string | HTMLElement,\n  options?: CompilerOptions\n): RenderFunction {\n  if (!isString(template)) {\n    if (template.nodeType) {\n      template = template.innerHTML\n    } else {\n      __DEV__ && warn(`invalid template option: `, template)\n      return NOOP\n    }\n  }\n\n  const key = template\n  const cached = compileCache[key]\n  if (cached) {\n    return cached\n  }\n\n  if (template[0] === '#') {\n    const el = document.querySelector(template)\n    if (__DEV__ && !el) {\n      warn(`Template element not found or is empty: ${template}`)\n    }\n    // __UNSAFE__\n    // Reason: potential execution of JS expressions in in-DOM template.\n    // The user must make sure the in-DOM template is trusted. If it's rendered\n    // by the server, the template should not contain any user data.\n    template = el ? el.innerHTML : ``\n  }\n\n  const opts = extend(\n    {\n      hoistStatic: true,\n      onError: __DEV__ ? onError : undefined,\n      onWarn: __DEV__ ? e => onError(e, true) : NOOP\n    } as CompilerOptions,\n    options\n  )\n\n  if (!opts.isCustomElement && typeof customElements !== 'undefined') {\n    opts.isCustomElement = tag => !!customElements.get(tag)\n  }\n\n  const { code } = compile(template, opts)\n\n  function onError(err: CompilerError, asWarning = false) {\n    const message = asWarning\n      ? err.message\n      : `Template compilation error: ${err.message}`\n    const codeFrame =\n      err.loc &&\n      generateCodeFrame(\n        template as string,\n        err.loc.start.offset,\n        err.loc.end.offset\n      )\n    warn(codeFrame ? `${message}\\n${codeFrame}` : message)\n  }\n\n  // The wildcard import results in a huge object with every export\n  // with keys that cannot be mangled, and can be quite heavy size-wise.\n  // In the global build we know `Vue` is available globally so we can avoid\n  // the wildcard object.\n  const render = (\n    __GLOBAL__ ? new Function(code)() : new Function('Vue', code)(runtimeDom)\n  ) as RenderFunction\n\n  // mark the function as runtime compiled\n  ;(render as InternalRenderFunction)._rc = true\n\n  return (compileCache[key] = render)\n}\n\nregisterRuntimeCompiler(compileToFunction)\n\nexport { compileToFunction as compile }\nexport * from '@vue/runtime-dom'\n", "// using literal strings instead of numbers so that it's easier to inspect\n// debugger events\n\nexport const enum TrackOpTypes {\n  GET = 'get',\n  HAS = 'has',\n  ITERATE = 'iterate'\n}\n\nexport const enum TriggerOpTypes {\n  SET = 'set',\n  ADD = 'add',\n  DELETE = 'delete',\n  CLEAR = 'clear'\n}\n", "/**\n * Make a map and return a function for checking if a key\n * is in that map.\n * IMPORTANT: all calls of this function must be prefixed with\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\n * So that rollup can tree-shake them if necessary.\n */\nexport function makeMap(\n  str: string,\n  expectsLowerCase?: boolean\n): (key: string) => boolean {\n  const map: Record<string, boolean> = Object.create(null)\n  const list: Array<string> = str.split(',')\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true\n  }\n  return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val]\n}\n", "import { makeMap } from './makeMap'\n\nexport const EMPTY_OBJ: { readonly [key: string]: any } = __DEV__\n  ? Object.freeze({})\n  : {}\nexport const EMPTY_ARR = __DEV__ ? Object.freeze([]) : []\n\nexport const NOOP = () => {}\n\n/**\n * Always return false.\n */\nexport const NO = () => false\n\nconst onRE = /^on[^a-z]/\nexport const isOn = (key: string) => onRE.test(key)\n\nexport const isModelListener = (key: string) => key.startsWith('onUpdate:')\n\nexport const extend = Object.assign\n\nexport const remove = <T>(arr: T[], el: T) => {\n  const i = arr.indexOf(el)\n  if (i > -1) {\n    arr.splice(i, 1)\n  }\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport const hasOwn = (\n  val: object,\n  key: string | symbol\n): key is keyof typeof val => hasOwnProperty.call(val, key)\n\nexport const isArray = Array.isArray\nexport const isMap = (val: unknown): val is Map<any, any> =>\n  toTypeString(val) === '[object Map]'\nexport const isSet = (val: unknown): val is Set<any> =>\n  toTypeString(val) === '[object Set]'\n\nexport const isDate = (val: unknown): val is Date =>\n  toTypeString(val) === '[object Date]'\nexport const isRegExp = (val: unknown): val is RegExp =>\n  toTypeString(val) === '[object RegExp]'\nexport const isFunction = (val: unknown): val is Function =>\n  typeof val === 'function'\nexport const isString = (val: unknown): val is string => typeof val === 'string'\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\nexport const isObject = (val: unknown): val is Record<any, any> =>\n  val !== null && typeof val === 'object'\n\nexport const isPromise = <T = any>(val: unknown): val is Promise<T> => {\n  return (\n    (isObject(val) || isFunction(val)) &&\n    isFunction((val as any).then) &&\n    isFunction((val as any).catch)\n  )\n}\n\nexport const objectToString = Object.prototype.toString\nexport const toTypeString = (value: unknown): string =>\n  objectToString.call(value)\n\nexport const toRawType = (value: unknown): string => {\n  // extract \"RawType\" from strings like \"[object RawType]\"\n  return toTypeString(value).slice(8, -1)\n}\n\nexport const isPlainObject = (val: unknown): val is object =>\n  toTypeString(val) === '[object Object]'\n\nexport const isIntegerKey = (key: unknown) =>\n  isString(key) &&\n  key !== 'NaN' &&\n  key[0] !== '-' &&\n  '' + parseInt(key, 10) === key\n\nexport const isReservedProp = /*#__PURE__*/ makeMap(\n  // the leading comma is intentional so empty string \"\" is also included\n  ',key,ref,ref_for,ref_key,' +\n    'onVnodeBeforeMount,onVnodeMounted,' +\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\n    'onVnodeBeforeUnmount,onVnodeUnmounted'\n)\n\nexport const isBuiltInDirective = /*#__PURE__*/ makeMap(\n  'bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo'\n)\n\nconst cacheStringFunction = <T extends (str: string) => string>(fn: T): T => {\n  const cache: Record<string, string> = Object.create(null)\n  return ((str: string) => {\n    const hit = cache[str]\n    return hit || (cache[str] = fn(str))\n  }) as T\n}\n\nconst camelizeRE = /-(\\w)/g\n/**\n * @private\n */\nexport const camelize = cacheStringFunction((str: string): string => {\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\n})\n\nconst hyphenateRE = /\\B([A-Z])/g\n/**\n * @private\n */\nexport const hyphenate = cacheStringFunction((str: string) =>\n  str.replace(hyphenateRE, '-$1').toLowerCase()\n)\n\n/**\n * @private\n */\nexport const capitalize = cacheStringFunction(<T extends string>(str: T) => {\n  return (str.charAt(0).toUpperCase() + str.slice(1)) as Capitalize<T>\n})\n\n/**\n * @private\n */\nexport const toHandlerKey = cacheStringFunction(<T extends string>(str: T) => {\n  const s = str ? `on${capitalize(str)}` : ``\n  return s as T extends '' ? '' : `on${Capitalize<T>}`\n})\n\n// compare whether a value has changed, accounting for NaN.\nexport const hasChanged = (value: any, oldValue: any): boolean =>\n  !Object.is(value, oldValue)\n\nexport const invokeArrayFns = (fns: Function[], arg?: any) => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](arg)\n  }\n}\n\nexport const def = (obj: object, key: string | symbol, value: any) => {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: false,\n    value\n  })\n}\n\n/**\n * \"123-foo\" will be parsed to 123\n * This is used for the .number modifier in v-model\n */\nexport const looseToNumber = (val: any): any => {\n  const n = parseFloat(val)\n  return isNaN(n) ? val : n\n}\n\n/**\n * Only concerns number-like strings\n * \"123-foo\" will be returned as-is\n */\nexport const toNumber = (val: any): any => {\n  const n = isString(val) ? Number(val) : NaN\n  return isNaN(n) ? val : n\n}\n\nlet _globalThis: any\nexport const getGlobalThis = (): any => {\n  return (\n    _globalThis ||\n    (_globalThis =\n      typeof globalThis !== 'undefined'\n        ? globalThis\n        : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n        ? global\n        : {})\n  )\n}\n\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\nexport function genPropsAccessExp(name: string) {\n  return identRE.test(name)\n    ? `__props.${name}`\n    : `__props[${JSON.stringify(name)}]`\n}\n", "/**\n * Patch flags are optimization hints generated by the compiler.\n * when a block with dynamicChildren is encountered during diff, the algorithm\n * enters \"optimized mode\". In this mode, we know that the vdom is produced by\n * a render function generated by the compiler, so the algorithm only needs to\n * handle updates explicitly marked by these patch flags.\n *\n * Patch flags can be combined using the | bitwise operator and can be checked\n * using the & operator, e.g.\n *\n * ```js\n * const flag = TEXT | CLASS\n * if (flag & TEXT) { ... }\n * ```\n *\n * Check the `patchElement` function in '../../runtime-core/src/renderer.ts' to see how the\n * flags are handled during diff.\n */\nexport const enum PatchFlags {\n  /**\n   * Indicates an element with dynamic textContent (children fast path)\n   */\n  TEXT = 1,\n\n  /**\n   * Indicates an element with dynamic class binding.\n   */\n  CLASS = 1 << 1,\n\n  /**\n   * Indicates an element with dynamic style\n   * The compiler pre-compiles static string styles into static objects\n   * + detects and hoists inline static objects\n   * e.g. `style=\"color: red\"` and `:style=\"{ color: 'red' }\"` both get hoisted\n   * as:\n   * ```js\n   * const style = { color: 'red' }\n   * render() { return e('div', { style }) }\n   * ```\n   */\n  STYLE = 1 << 2,\n\n  /**\n   * Indicates an element that has non-class/style dynamic props.\n   * Can also be on a component that has any dynamic props (includes\n   * class/style). when this flag is present, the vnode also has a dynamicProps\n   * array that contains the keys of the props that may change so the runtime\n   * can diff them faster (without having to worry about removed props)\n   */\n  PROPS = 1 << 3,\n\n  /**\n   * Indicates an element with props with dynamic keys. When keys change, a full\n   * diff is always needed to remove the old key. This flag is mutually\n   * exclusive with CLASS, STYLE and PROPS.\n   */\n  FULL_PROPS = 1 << 4,\n\n  /**\n   * Indicates an element with event listeners (which need to be attached\n   * during hydration)\n   */\n  HYDRATE_EVENTS = 1 << 5,\n\n  /**\n   * Indicates a fragment whose children order doesn't change.\n   */\n  STABLE_FRAGMENT = 1 << 6,\n\n  /**\n   * Indicates a fragment with keyed or partially keyed children\n   */\n  KEYED_FRAGMENT = 1 << 7,\n\n  /**\n   * Indicates a fragment with unkeyed children.\n   */\n  UNKEYED_FRAGMENT = 1 << 8,\n\n  /**\n   * Indicates an element that only needs non-props patching, e.g. ref or\n   * directives (onVnodeXXX hooks). since every patched vnode checks for refs\n   * and onVnodeXXX hooks, it simply marks the vnode so that a parent block\n   * will track it.\n   */\n  NEED_PATCH = 1 << 9,\n\n  /**\n   * Indicates a component with dynamic slots (e.g. slot that references a v-for\n   * iterated value, or dynamic slot names).\n   * Components with this flag are always force updated.\n   */\n  DYNAMIC_SLOTS = 1 << 10,\n\n  /**\n   * Indicates a fragment that was created only because the user has placed\n   * comments at the root level of a template. This is a dev-only flag since\n   * comments are stripped in production.\n   */\n  DEV_ROOT_FRAGMENT = 1 << 11,\n\n  /**\n   * SPECIAL FLAGS -------------------------------------------------------------\n   * Special flags are negative integers. They are never matched against using\n   * bitwise operators (bitwise matching should only happen in branches where\n   * patchFlag > 0), and are mutually exclusive. When checking for a special\n   * flag, simply check patchFlag === FLAG.\n   */\n\n  /**\n   * Indicates a hoisted static vnode. This is a hint for hydration to skip\n   * the entire sub tree since static content never needs to be updated.\n   */\n  HOISTED = -1,\n  /**\n   * A special flag that indicates that the diffing algorithm should bail out\n   * of optimized mode. For example, on block fragments created by renderSlot()\n   * when encountering non-compiler generated slots (i.e. manually written\n   * render functions, which should always be fully diffed)\n   * OR manually cloneVNodes\n   */\n  BAIL = -2\n}\n\n/**\n * dev only flag -> name mapping\n */\nexport const PatchFlagNames: Record<PatchFlags, string> = {\n  [PatchFlags.TEXT]: `TEXT`,\n  [PatchFlags.CLASS]: `CLASS`,\n  [PatchFlags.STYLE]: `STYLE`,\n  [PatchFlags.PROPS]: `PROPS`,\n  [PatchFlags.FULL_PROPS]: `FULL_PROPS`,\n  [PatchFlags.HYDRATE_EVENTS]: `HYDRATE_EVENTS`,\n  [PatchFlags.STABLE_FRAGMENT]: `STABLE_FRAGMENT`,\n  [PatchFlags.KEYED_FRAGMENT]: `KEYED_FRAGMENT`,\n  [PatchFlags.UNKEYED_FRAGMENT]: `UNKEYED_FRAGMENT`,\n  [PatchFlags.NEED_PATCH]: `NEED_PATCH`,\n  [PatchFlags.DYNAMIC_SLOTS]: `DYNAMIC_SLOTS`,\n  [PatchFlags.DEV_ROOT_FRAGMENT]: `DEV_ROOT_FRAGMENT`,\n  [PatchFlags.HOISTED]: `HOISTED`,\n  [PatchFlags.BAIL]: `BAIL`\n}\n", "export const enum SlotFlags {\n  /**\n   * Stable slots that only reference slot props or context state. The slot\n   * can fully capture its own dependencies so when passed down the parent won't\n   * need to force the child to update.\n   */\n  STABLE = 1,\n  /**\n   * Slots that reference scope variables (v-for or an outer slot prop), or\n   * has conditional structure (v-if, v-for). The parent will need to force\n   * the child to update because the slot does not fully capture its dependencies.\n   */\n  DYNAMIC = 2,\n  /**\n   * `<slot/>` being forwarded into a child component. Whether the parent needs\n   * to update the child is dependent on what kind of slots the parent itself\n   * received. This has to be refined at runtime, when the child's vnode\n   * is being created (in `normalizeChildren`)\n   */\n  FORWARDED = 3\n}\n\n/**\n * Dev only\n */\nexport const slotFlagsText = {\n  [SlotFlags.STABLE]: 'STABLE',\n  [SlotFlags.DYNAMIC]: 'DYNAMIC',\n  [SlotFlags.FORWARDED]: 'FORWARDED'\n}\n", "import { makeMap } from './makeMap'\n\nconst GLOBALS_ALLOWED =\n  'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\n  'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\n  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console'\n\nexport const isGloballyAllowed = /*#__PURE__*/ makeMap(GLOBALS_ALLOWED)\n\n/** @deprecated use `isGloballyAllowed` instead */\nexport const isGloballyWhitelisted = isGloballyAllowed\n", "const range: number = 2\n\nexport function generateCodeFrame(\n  source: string,\n  start = 0,\n  end = source.length\n): string {\n  // Split the content into individual lines but capture the newline sequence\n  // that separated each line. This is important because the actual sequence is\n  // needed to properly take into account the full line length for offset\n  // comparison\n  let lines = source.split(/(\\r?\\n)/)\n\n  // Separate the lines and newline sequences into separate arrays for easier referencing\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1)\n  lines = lines.filter((_, idx) => idx % 2 === 0)\n\n  let count = 0\n  const res: string[] = []\n  for (let i = 0; i < lines.length; i++) {\n    count +=\n      lines[i].length +\n      ((newlineSequences[i] && newlineSequences[i].length) || 0)\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) continue\n        const line = j + 1\n        res.push(\n          `${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${\n            lines[j]\n          }`\n        )\n        const lineLength = lines[j].length\n        const newLineSeqLength =\n          (newlineSequences[j] && newlineSequences[j].length) || 0\n\n        if (j === i) {\n          // push underline\n          const pad = start - (count - (lineLength + newLineSeqLength))\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start\n          )\n          res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length))\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1)\n            res.push(`   |  ` + '^'.repeat(length))\n          }\n\n          count += lineLength + newLineSeqLength\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n", "import { isArray, isString, isObject, hyphenate } from './general'\n\nexport type NormalizedStyle = Record<string, string | number>\n\nexport function normalizeStyle(\n  value: unknown\n): NormalizedStyle | string | undefined {\n  if (isArray(value)) {\n    const res: NormalizedStyle = {}\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i]\n      const normalized = isString(item)\n        ? parseStringStyle(item)\n        : (normalizeStyle(item) as NormalizedStyle)\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key]\n        }\n      }\n    }\n    return res\n  } else if (isString(value) || isObject(value)) {\n    return value\n  }\n}\n\nconst listDelimiterRE = /;(?![^(]*\\))/g\nconst propertyDelimiterRE = /:([^]+)/\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g\n\nexport function parseStringStyle(cssText: string): NormalizedStyle {\n  const ret: NormalizedStyle = {}\n  cssText\n    .replace(styleCommentRE, '')\n    .split(listDelimiterRE)\n    .forEach(item => {\n      if (item) {\n        const tmp = item.split(propertyDelimiterRE)\n        tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim())\n      }\n    })\n  return ret\n}\n\nexport function stringifyStyle(\n  styles: NormalizedStyle | string | undefined\n): string {\n  let ret = ''\n  if (!styles || isString(styles)) {\n    return ret\n  }\n  for (const key in styles) {\n    const value = styles[key]\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key)\n    if (isString(value) || typeof value === 'number') {\n      // only render valid values\n      ret += `${normalizedKey}:${value};`\n    }\n  }\n  return ret\n}\n\nexport function normalizeClass(value: unknown): string {\n  let res = ''\n  if (isString(value)) {\n    res = value\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i])\n      if (normalized) {\n        res += normalized + ' '\n      }\n    }\n  } else if (isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + ' '\n      }\n    }\n  }\n  return res.trim()\n}\n\nexport function normalizeProps(props: Record<string, any> | null) {\n  if (!props) return null\n  let { class: klass, style } = props\n  if (klass && !isString(klass)) {\n    props.class = normalizeClass(klass)\n  }\n  if (style) {\n    props.style = normalizeStyle(style)\n  }\n  return props\n}\n", "// These tag configs are shared between compiler-dom and runtime-dom, so they\n// must be extracted in shared to avoid creating a dependency between the two.\nimport { makeMap } from './makeMap'\n\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\nconst HTML_TAGS =\n  'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\n  'header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\n  'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\n  'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\n  'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\n  'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\n  'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\n  'option,output,progress,select,textarea,details,dialog,menu,' +\n  'summary,template,blockquote,iframe,tfoot'\n\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\nconst SVG_TAGS =\n  'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\n  'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\n  'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\n  'feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\n  'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\n  'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\n  'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\n  'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\n  'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\n  'text,textPath,title,tspan,unknown,use,view'\n\nconst VOID_TAGS =\n  'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr'\n\n/**\n * Compiler only.\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\n */\nexport const isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS)\n/**\n * Compiler only.\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\n */\nexport const isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS)\n/**\n * Compiler only.\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\n */\nexport const isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS)\n", "import { makeMap } from './makeMap'\n\n/**\n * On the client we only need to offer special cases for boolean attributes that\n * have different names from their corresponding dom properties:\n * - itemscope -> N/A\n * - allowfullscreen -> allowFullscreen\n * - formnovalidate -> formNoValidate\n * - ismap -> isMap\n * - nomodule -> noModule\n * - novalidate -> noValidate\n * - readonly -> readOnly\n */\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`\nexport const isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs)\n\n/**\n * The full list is needed during SSR to produce the correct initial markup.\n */\nexport const isBooleanAttr = /*#__PURE__*/ makeMap(\n  specialBooleanAttrs +\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\n    `inert,loop,open,required,reversed,scoped,seamless,` +\n    `checked,muted,multiple,selected`\n)\n\n/**\n * Boolean attributes should be included if the value is truthy or ''.\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\n */\nexport function includeBooleanAttr(value: unknown): boolean {\n  return !!value || value === ''\n}\n\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/\nconst attrValidationCache: Record<string, boolean> = {}\n\nexport function isSSRSafeAttrName(name: string): boolean {\n  if (attrValidationCache.hasOwnProperty(name)) {\n    return attrValidationCache[name]\n  }\n  const isUnsafe = unsafeAttrCharRE.test(name)\n  if (isUnsafe) {\n    console.error(`unsafe attribute name: ${name}`)\n  }\n  return (attrValidationCache[name] = !isUnsafe)\n}\n\nexport const propsToAttrMap: Record<string, string | undefined> = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv'\n}\n\n/**\n * Known attributes, this is used for stringification of runtime static nodes\n * so that we don't stringify bindings that cannot be set from HTML.\n * Don't also forget to allow `data-*` and `aria-*`!\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\n */\nexport const isKnownHtmlAttr = /*#__PURE__*/ makeMap(\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,` +\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,` +\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\n    `value,width,wrap`\n)\n\n/**\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\n */\nexport const isKnownSvgAttr = /*#__PURE__*/ makeMap(\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\n    `color-interpolation-filters,color-profile,color-rendering,` +\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\n)\n", "import { isArray, isDate, isObject, isSymbol } from './general'\n\nfunction looseCompareArrays(a: any[], b: any[]) {\n  if (a.length !== b.length) return false\n  let equal = true\n  for (let i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i])\n  }\n  return equal\n}\n\nexport function looseEqual(a: any, b: any): boolean {\n  if (a === b) return true\n  let aValidType = isDate(a)\n  let bValidType = isDate(b)\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false\n  }\n  aValidType = isSymbol(a)\n  bValidType = isSymbol(b)\n  if (aValidType || bValidType) {\n    return a === b\n  }\n  aValidType = isArray(a)\n  bValidType = isArray(b)\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false\n  }\n  aValidType = isObject(a)\n  bValidType = isObject(b)\n  if (aValidType || bValidType) {\n    /* istanbul ignore if: this if will probably never be called */\n    if (!aValidType || !bValidType) {\n      return false\n    }\n    const aKeysCount = Object.keys(a).length\n    const bKeysCount = Object.keys(b).length\n    if (aKeysCount !== bKeysCount) {\n      return false\n    }\n    for (const key in a) {\n      const aHasKey = a.hasOwnProperty(key)\n      const bHasKey = b.hasOwnProperty(key)\n      if (\n        (aHasKey && !bHasKey) ||\n        (!aHasKey && bHasKey) ||\n        !looseEqual(a[key], b[key])\n      ) {\n        return false\n      }\n    }\n  }\n  return String(a) === String(b)\n}\n\nexport function looseIndexOf(arr: any[], val: any): number {\n  return arr.findIndex(item => looseEqual(item, val))\n}\n", "import {\n  isArray,\n  isMap,\n  isObject,\n  isFunction,\n  isPlainObject,\n  isSet,\n  objectToString,\n  isString\n} from './general'\n\n/**\n * For converting {{ interpolation }} values to displayed strings.\n * @private\n */\nexport const toDisplayString = (val: unknown): string => {\n  return isString(val)\n    ? val\n    : val == null\n    ? ''\n    : isArray(val) ||\n      (isObject(val) &&\n        (val.toString === objectToString || !isFunction(val.toString)))\n    ? JSON.stringify(val, replacer, 2)\n    : String(val)\n}\n\nconst replacer = (_key: string, val: any): any => {\n  // can't use isRef here since @vue/shared has no deps\n  if (val && val.__v_isRef) {\n    return replacer(_key, val.value)\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\n        ;(entries as any)[`${key} =>`] = val\n        return entries\n      }, {})\n    }\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()]\n    }\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n    return String(val)\n  }\n  return val\n}\n", "export function warn(msg: string, ...args: any[]) {\n  console.warn(`[Vue warn] ${msg}`, ...args)\n}\n", "import { ReactiveEffect } from './effect'\nimport { warn } from './warning'\n\nlet activeEffectScope: EffectScope | undefined\n\nexport class EffectScope {\n  /**\n   * @internal\n   */\n  private _active = true\n  /**\n   * @internal\n   */\n  effects: ReactiveEffect[] = []\n  /**\n   * @internal\n   */\n  cleanups: (() => void)[] = []\n\n  /**\n   * only assigned by undetached scope\n   * @internal\n   */\n  parent: EffectScope | undefined\n  /**\n   * record undetached scopes\n   * @internal\n   */\n  scopes: EffectScope[] | undefined\n  /**\n   * track a child scope's index in its parent's scopes array for optimized\n   * removal\n   * @internal\n   */\n  private index: number | undefined\n\n  constructor(public detached = false) {\n    this.parent = activeEffectScope\n    if (!detached && activeEffectScope) {\n      this.index =\n        (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\n          this\n        ) - 1\n    }\n  }\n\n  get active() {\n    return this._active\n  }\n\n  run<T>(fn: () => T): T | undefined {\n    if (this._active) {\n      const currentEffectScope = activeEffectScope\n      try {\n        activeEffectScope = this\n        return fn()\n      } finally {\n        activeEffectScope = currentEffectScope\n      }\n    } else if (__DEV__) {\n      warn(`cannot run an inactive effect scope.`)\n    }\n  }\n\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  on() {\n    activeEffectScope = this\n  }\n\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  off() {\n    activeEffectScope = this.parent\n  }\n\n  stop(fromParent?: boolean) {\n    if (this._active) {\n      let i, l\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop()\n      }\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]()\n      }\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true)\n        }\n      }\n      // nested scope, dereference from parent to avoid memory leaks\n      if (!this.detached && this.parent && !fromParent) {\n        // optimized O(1) removal\n        const last = this.parent.scopes!.pop()\n        if (last && last !== this) {\n          this.parent.scopes![this.index!] = last\n          last.index = this.index!\n        }\n      }\n      this.parent = undefined\n      this._active = false\n    }\n  }\n}\n\n/**\n * Creates an effect scope object which can capture the reactive effects (i.e.\n * computed and watchers) created within it so that these effects can be\n * disposed together. For detailed use cases of this API, please consult its\n * corresponding {@link https://github.com/vuejs/rfcs/blob/master/active-rfcs/0041-reactivity-effect-scope.md | RFC}.\n *\n * @param detached - Can be used to create a \"detached\" effect scope.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#effectscope}\n */\nexport function effectScope(detached?: boolean) {\n  return new EffectScope(detached)\n}\n\nexport function recordEffectScope(\n  effect: ReactiveEffect,\n  scope: EffectScope | undefined = activeEffectScope\n) {\n  if (scope && scope.active) {\n    scope.effects.push(effect)\n  }\n}\n\n/**\n * Returns the current active effect scope if there is one.\n *\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#getcurrentscope}\n */\nexport function getCurrentScope() {\n  return activeEffectScope\n}\n\n/**\n * Registers a dispose callback on the current active effect scope. The\n * callback will be invoked when the associated effect scope is stopped.\n *\n * @param fn - The callback function to attach to the scope's cleanup.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#onscopedispose}\n */\nexport function onScopeDispose(fn: () => void) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn)\n  } else if (__DEV__) {\n    warn(\n      `onScopeDispose() is called when there is no active effect scope` +\n        ` to be associated with.`\n    )\n  }\n}\n", "import { ReactiveEffect, trackOpBit } from './effect'\n\nexport type Dep = Set<ReactiveEffect> & TrackedMarkers\n\n/**\n * wasTracked and newTracked maintain the status for several levels of effect\n * tracking recursion. One bit per level is used to define whether the dependency\n * was/is tracked.\n */\ntype TrackedMarkers = {\n  /**\n   * wasTracked\n   */\n  w: number\n  /**\n   * newTracked\n   */\n  n: number\n}\n\nexport const createDep = (effects?: ReactiveEffect[]): Dep => {\n  const dep = new Set<ReactiveEffect>(effects) as Dep\n  dep.w = 0\n  dep.n = 0\n  return dep\n}\n\nexport const wasTracked = (dep: Dep): boolean => (dep.w & trackOpBit) > 0\n\nexport const newTracked = (dep: Dep): boolean => (dep.n & trackOpBit) > 0\n\nexport const initDepMarkers = ({ deps }: ReactiveEffect) => {\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].w |= trackOpBit // set was tracked\n    }\n  }\n}\n\nexport const finalizeDepMarkers = (effect: ReactiveEffect) => {\n  const { deps } = effect\n  if (deps.length) {\n    let ptr = 0\n    for (let i = 0; i < deps.length; i++) {\n      const dep = deps[i]\n      if (wasTracked(dep) && !newTracked(dep)) {\n        dep.delete(effect)\n      } else {\n        deps[ptr++] = dep\n      }\n      // clear bits\n      dep.w &= ~trackOpBit\n      dep.n &= ~trackOpBit\n    }\n    deps.length = ptr\n  }\n}\n", "import { TrackOpTypes, TriggerOpTypes } from './operations'\nimport { extend, isArray, isIntegerKey, isMap } from '@vue/shared'\nimport { EffectScope, recordEffectScope } from './effectScope'\nimport {\n  createDep,\n  Dep,\n  finalizeDepMarkers,\n  initDepMarkers,\n  newTracked,\n  wasTracked\n} from './dep'\nimport { ComputedRefImpl } from './computed'\n\n// The main WeakMap that stores {target -> key -> dep} connections.\n// Conceptually, it's easier to think of a dependency as a Dep class\n// which maintains a Set of subscribers, but we simply store them as\n// raw Sets to reduce memory overhead.\ntype KeyToDepMap = Map<any, Dep>\nconst targetMap = new WeakMap<any, KeyToDepMap>()\n\n// The number of effects currently being tracked recursively.\nlet effectTrackDepth = 0\n\nexport let trackOpBit = 1\n\n/**\n * The bitwise track markers support at most 30 levels of recursion.\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\n * When recursion depth is greater, fall back to using a full cleanup.\n */\nconst maxMarkerBits = 30\n\nexport type EffectScheduler = (...args: any[]) => any\n\nexport type DebuggerEvent = {\n  effect: ReactiveEffect\n} & DebuggerEventExtraInfo\n\nexport type DebuggerEventExtraInfo = {\n  target: object\n  type: TrackOpTypes | TriggerOpTypes\n  key: any\n  newValue?: any\n  oldValue?: any\n  oldTarget?: Map<any, any> | Set<any>\n}\n\nexport let activeEffect: ReactiveEffect | undefined\n\nexport const ITERATE_KEY = Symbol(__DEV__ ? 'iterate' : '')\nexport const MAP_KEY_ITERATE_KEY = Symbol(__DEV__ ? 'Map key iterate' : '')\n\nexport class ReactiveEffect<T = any> {\n  active = true\n  deps: Dep[] = []\n  parent: ReactiveEffect | undefined = undefined\n\n  /**\n   * Can be attached after creation\n   * @internal\n   */\n  computed?: ComputedRefImpl<T>\n  /**\n   * @internal\n   */\n  allowRecurse?: boolean\n  /**\n   * @internal\n   */\n  private deferStop?: boolean\n\n  onStop?: () => void\n  // dev only\n  onTrack?: (event: DebuggerEvent) => void\n  // dev only\n  onTrigger?: (event: DebuggerEvent) => void\n\n  constructor(\n    public fn: () => T,\n    public scheduler: EffectScheduler | null = null,\n    scope?: EffectScope\n  ) {\n    recordEffectScope(this, scope)\n  }\n\n  run() {\n    if (!this.active) {\n      return this.fn()\n    }\n    let parent: ReactiveEffect | undefined = activeEffect\n    let lastShouldTrack = shouldTrack\n    while (parent) {\n      if (parent === this) {\n        return\n      }\n      parent = parent.parent\n    }\n    try {\n      this.parent = activeEffect\n      activeEffect = this\n      shouldTrack = true\n\n      trackOpBit = 1 << ++effectTrackDepth\n\n      if (effectTrackDepth <= maxMarkerBits) {\n        initDepMarkers(this)\n      } else {\n        cleanupEffect(this)\n      }\n      return this.fn()\n    } finally {\n      if (effectTrackDepth <= maxMarkerBits) {\n        finalizeDepMarkers(this)\n      }\n\n      trackOpBit = 1 << --effectTrackDepth\n\n      activeEffect = this.parent\n      shouldTrack = lastShouldTrack\n      this.parent = undefined\n\n      if (this.deferStop) {\n        this.stop()\n      }\n    }\n  }\n\n  stop() {\n    // stopped while running itself - defer the cleanup\n    if (activeEffect === this) {\n      this.deferStop = true\n    } else if (this.active) {\n      cleanupEffect(this)\n      if (this.onStop) {\n        this.onStop()\n      }\n      this.active = false\n    }\n  }\n}\n\nfunction cleanupEffect(effect: ReactiveEffect) {\n  const { deps } = effect\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].delete(effect)\n    }\n    deps.length = 0\n  }\n}\n\nexport interface DebuggerOptions {\n  onTrack?: (event: DebuggerEvent) => void\n  onTrigger?: (event: DebuggerEvent) => void\n}\n\nexport interface ReactiveEffectOptions extends DebuggerOptions {\n  lazy?: boolean\n  scheduler?: EffectScheduler\n  scope?: EffectScope\n  allowRecurse?: boolean\n  onStop?: () => void\n}\n\nexport interface ReactiveEffectRunner<T = any> {\n  (): T\n  effect: ReactiveEffect\n}\n\n/**\n * Registers the given function to track reactive updates.\n *\n * The given function will be run once immediately. Every time any reactive\n * property that's accessed within it gets updated, the function will run again.\n *\n * @param fn - The function that will track reactive updates.\n * @param options - Allows to control the effect's behaviour.\n * @returns A runner that can be used to control the effect after creation.\n */\nexport function effect<T = any>(\n  fn: () => T,\n  options?: ReactiveEffectOptions\n): ReactiveEffectRunner {\n  if ((fn as ReactiveEffectRunner).effect) {\n    fn = (fn as ReactiveEffectRunner).effect.fn\n  }\n\n  const _effect = new ReactiveEffect(fn)\n  if (options) {\n    extend(_effect, options)\n    if (options.scope) recordEffectScope(_effect, options.scope)\n  }\n  if (!options || !options.lazy) {\n    _effect.run()\n  }\n  const runner = _effect.run.bind(_effect) as ReactiveEffectRunner\n  runner.effect = _effect\n  return runner\n}\n\n/**\n * Stops the effect associated with the given runner.\n *\n * @param runner - Association with the effect to stop tracking.\n */\nexport function stop(runner: ReactiveEffectRunner) {\n  runner.effect.stop()\n}\n\nexport let shouldTrack = true\nconst trackStack: boolean[] = []\n\n/**\n * Temporarily pauses tracking.\n */\nexport function pauseTracking() {\n  trackStack.push(shouldTrack)\n  shouldTrack = false\n}\n\n/**\n * Re-enables effect tracking (if it was paused).\n */\nexport function enableTracking() {\n  trackStack.push(shouldTrack)\n  shouldTrack = true\n}\n\n/**\n * Resets the previous global effect tracking state.\n */\nexport function resetTracking() {\n  const last = trackStack.pop()\n  shouldTrack = last === undefined ? true : last\n}\n\n/**\n * Tracks access to a reactive property.\n *\n * This will check which effect is running at the moment and record it as dep\n * which records all effects that depend on the reactive property.\n *\n * @param target - Object holding the reactive property.\n * @param type - Defines the type of access to the reactive property.\n * @param key - Identifier of the reactive property to track.\n */\nexport function track(target: object, type: TrackOpTypes, key: unknown) {\n  if (shouldTrack && activeEffect) {\n    let depsMap = targetMap.get(target)\n    if (!depsMap) {\n      targetMap.set(target, (depsMap = new Map()))\n    }\n    let dep = depsMap.get(key)\n    if (!dep) {\n      depsMap.set(key, (dep = createDep()))\n    }\n\n    const eventInfo = __DEV__\n      ? { effect: activeEffect, target, type, key }\n      : undefined\n\n    trackEffects(dep, eventInfo)\n  }\n}\n\nexport function trackEffects(\n  dep: Dep,\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\n) {\n  let shouldTrack = false\n  if (effectTrackDepth <= maxMarkerBits) {\n    if (!newTracked(dep)) {\n      dep.n |= trackOpBit // set newly tracked\n      shouldTrack = !wasTracked(dep)\n    }\n  } else {\n    // Full cleanup mode.\n    shouldTrack = !dep.has(activeEffect!)\n  }\n\n  if (shouldTrack) {\n    dep.add(activeEffect!)\n    activeEffect!.deps.push(dep)\n    if (__DEV__ && activeEffect!.onTrack) {\n      activeEffect!.onTrack(\n        extend(\n          {\n            effect: activeEffect!\n          },\n          debuggerEventExtraInfo!\n        )\n      )\n    }\n  }\n}\n\n/**\n * Finds all deps associated with the target (or a specific property) and\n * triggers the effects stored within.\n *\n * @param target - The reactive object.\n * @param type - Defines the type of the operation that needs to trigger effects.\n * @param key - Can be used to target a specific reactive property in the target object.\n */\nexport function trigger(\n  target: object,\n  type: TriggerOpTypes,\n  key?: unknown,\n  newValue?: unknown,\n  oldValue?: unknown,\n  oldTarget?: Map<unknown, unknown> | Set<unknown>\n) {\n  const depsMap = targetMap.get(target)\n  if (!depsMap) {\n    // never been tracked\n    return\n  }\n\n  let deps: (Dep | undefined)[] = []\n  if (type === TriggerOpTypes.CLEAR) {\n    // collection being cleared\n    // trigger all effects for target\n    deps = [...depsMap.values()]\n  } else if (key === 'length' && isArray(target)) {\n    const newLength = Number(newValue)\n    depsMap.forEach((dep, key) => {\n      if (key === 'length' || key >= newLength) {\n        deps.push(dep)\n      }\n    })\n  } else {\n    // schedule runs for SET | ADD | DELETE\n    if (key !== void 0) {\n      deps.push(depsMap.get(key))\n    }\n\n    // also run for iteration key on ADD | DELETE | Map.SET\n    switch (type) {\n      case TriggerOpTypes.ADD:\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY))\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\n          }\n        } else if (isIntegerKey(key)) {\n          // new index added to array -> length changes\n          deps.push(depsMap.get('length'))\n        }\n        break\n      case TriggerOpTypes.DELETE:\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY))\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\n          }\n        }\n        break\n      case TriggerOpTypes.SET:\n        if (isMap(target)) {\n          deps.push(depsMap.get(ITERATE_KEY))\n        }\n        break\n    }\n  }\n\n  const eventInfo = __DEV__\n    ? { target, type, key, newValue, oldValue, oldTarget }\n    : undefined\n\n  if (deps.length === 1) {\n    if (deps[0]) {\n      if (__DEV__) {\n        triggerEffects(deps[0], eventInfo)\n      } else {\n        triggerEffects(deps[0])\n      }\n    }\n  } else {\n    const effects: ReactiveEffect[] = []\n    for (const dep of deps) {\n      if (dep) {\n        effects.push(...dep)\n      }\n    }\n    if (__DEV__) {\n      triggerEffects(createDep(effects), eventInfo)\n    } else {\n      triggerEffects(createDep(effects))\n    }\n  }\n}\n\nexport function triggerEffects(\n  dep: Dep | ReactiveEffect[],\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\n) {\n  // spread into array for stabilization\n  const effects = isArray(dep) ? dep : [...dep]\n  for (const effect of effects) {\n    if (effect.computed) {\n      triggerEffect(effect, debuggerEventExtraInfo)\n    }\n  }\n  for (const effect of effects) {\n    if (!effect.computed) {\n      triggerEffect(effect, debuggerEventExtraInfo)\n    }\n  }\n}\n\nfunction triggerEffect(\n  effect: ReactiveEffect,\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\n) {\n  if (effect !== activeEffect || effect.allowRecurse) {\n    if (__DEV__ && effect.onTrigger) {\n      effect.onTrigger(extend({ effect }, debuggerEventExtraInfo))\n    }\n    if (effect.scheduler) {\n      effect.scheduler()\n    } else {\n      effect.run()\n    }\n  }\n}\n\nexport function getDepFromReactive(object: any, key: string | number | symbol) {\n  return targetMap.get(object)?.get(key)\n}\n", "import {\n  reactive,\n  readonly,\n  toRaw,\n  ReactiveFlags,\n  Target,\n  readonlyMap,\n  reactiveMap,\n  shallowReactiveMap,\n  shallowReadonlyMap,\n  isReadonly,\n  isShallow\n} from './reactive'\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\nimport {\n  track,\n  trigger,\n  ITERATE_KEY,\n  pauseTracking,\n  resetTracking\n} from './effect'\nimport {\n  isObject,\n  hasOwn,\n  isSymbol,\n  hasChanged,\n  isArray,\n  isIntegerKey,\n  makeMap\n} from '@vue/shared'\nimport { isRef } from './ref'\nimport { warn } from './warning'\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`)\n\nconst builtInSymbols = new Set(\n  /*#__PURE__*/\n  Object.getOwnPropertyNames(Symbol)\n    // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\n    // but accessing them on Symbol leads to TypeError because Symbol is a strict mode\n    // function\n    .filter(key => key !== 'arguments' && key !== 'caller')\n    .map(key => (Symbol as any)[key])\n    .filter(isSymbol)\n)\n\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations()\n\nfunction createArrayInstrumentations() {\n  const instrumentations: Record<string, Function> = {}\n  // instrument identity-sensitive Array methods to account for possible reactive\n  // values\n  ;(['includes', 'indexOf', 'lastIndexOf'] as const).forEach(key => {\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\n      const arr = toRaw(this) as any\n      for (let i = 0, l = this.length; i < l; i++) {\n        track(arr, TrackOpTypes.GET, i + '')\n      }\n      // we run the method using the original args first (which may be reactive)\n      const res = arr[key](...args)\n      if (res === -1 || res === false) {\n        // if that didn't work, run it again using raw values.\n        return arr[key](...args.map(toRaw))\n      } else {\n        return res\n      }\n    }\n  })\n  // instrument length-altering mutation methods to avoid length being tracked\n  // which leads to infinite loops in some cases (#2137)\n  ;(['push', 'pop', 'shift', 'unshift', 'splice'] as const).forEach(key => {\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\n      pauseTracking()\n      const res = (toRaw(this) as any)[key].apply(this, args)\n      resetTracking()\n      return res\n    }\n  })\n  return instrumentations\n}\n\nfunction hasOwnProperty(this: object, key: string) {\n  const obj = toRaw(this)\n  track(obj, TrackOpTypes.HAS, key)\n  return obj.hasOwnProperty(key)\n}\n\nclass BaseReactiveHandler implements ProxyHandler<Target> {\n  constructor(\n    protected readonly _isReadonly = false,\n    protected readonly _shallow = false\n  ) {}\n\n  get(target: Target, key: string | symbol, receiver: object) {\n    const isReadonly = this._isReadonly,\n      shallow = this._shallow\n    if (key === ReactiveFlags.IS_REACTIVE) {\n      return !isReadonly\n    } else if (key === ReactiveFlags.IS_READONLY) {\n      return isReadonly\n    } else if (key === ReactiveFlags.IS_SHALLOW) {\n      return shallow\n    } else if (\n      key === ReactiveFlags.RAW &&\n      receiver ===\n        (isReadonly\n          ? shallow\n            ? shallowReadonlyMap\n            : readonlyMap\n          : shallow\n          ? shallowReactiveMap\n          : reactiveMap\n        ).get(target)\n    ) {\n      return target\n    }\n\n    const targetIsArray = isArray(target)\n\n    if (!isReadonly) {\n      if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\n        return Reflect.get(arrayInstrumentations, key, receiver)\n      }\n      if (key === 'hasOwnProperty') {\n        return hasOwnProperty\n      }\n    }\n\n    const res = Reflect.get(target, key, receiver)\n\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res\n    }\n\n    if (!isReadonly) {\n      track(target, TrackOpTypes.GET, key)\n    }\n\n    if (shallow) {\n      return res\n    }\n\n    if (isRef(res)) {\n      // ref unwrapping - skip unwrap for Array + integer key.\n      return targetIsArray && isIntegerKey(key) ? res : res.value\n    }\n\n    if (isObject(res)) {\n      // Convert returned value into a proxy as well. we do the isObject check\n      // here to avoid invalid value warning. Also need to lazy access readonly\n      // and reactive here to avoid circular dependency.\n      return isReadonly ? readonly(res) : reactive(res)\n    }\n\n    return res\n  }\n}\n\nclass MutableReactiveHandler extends BaseReactiveHandler {\n  constructor(shallow = false) {\n    super(false, shallow)\n  }\n\n  set(\n    target: object,\n    key: string | symbol,\n    value: unknown,\n    receiver: object\n  ): boolean {\n    let oldValue = (target as any)[key]\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n      return false\n    }\n    if (!this._shallow) {\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue)\n        value = toRaw(value)\n      }\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n        oldValue.value = value\n        return true\n      }\n    } else {\n      // in shallow mode, objects are set as-is regardless of reactive or not\n    }\n\n    const hadKey =\n      isArray(target) && isIntegerKey(key)\n        ? Number(key) < target.length\n        : hasOwn(target, key)\n    const result = Reflect.set(target, key, value, receiver)\n    // don't trigger if target is something up in the prototype chain of original\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, TriggerOpTypes.ADD, key, value)\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, TriggerOpTypes.SET, key, value, oldValue)\n      }\n    }\n    return result\n  }\n\n  deleteProperty(target: object, key: string | symbol): boolean {\n    const hadKey = hasOwn(target, key)\n    const oldValue = (target as any)[key]\n    const result = Reflect.deleteProperty(target, key)\n    if (result && hadKey) {\n      trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\n    }\n    return result\n  }\n\n  has(target: object, key: string | symbol): boolean {\n    const result = Reflect.has(target, key)\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\n      track(target, TrackOpTypes.HAS, key)\n    }\n    return result\n  }\n  ownKeys(target: object): (string | symbol)[] {\n    track(\n      target,\n      TrackOpTypes.ITERATE,\n      isArray(target) ? 'length' : ITERATE_KEY\n    )\n    return Reflect.ownKeys(target)\n  }\n}\n\nclass ReadonlyReactiveHandler extends BaseReactiveHandler {\n  constructor(shallow = false) {\n    super(true, shallow)\n  }\n\n  set(target: object, key: string | symbol) {\n    if (__DEV__) {\n      warn(\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      )\n    }\n    return true\n  }\n\n  deleteProperty(target: object, key: string | symbol) {\n    if (__DEV__) {\n      warn(\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      )\n    }\n    return true\n  }\n}\n\nexport const mutableHandlers: ProxyHandler<object> =\n  /*#__PURE__*/ new MutableReactiveHandler()\n\nexport const readonlyHandlers: ProxyHandler<object> =\n  /*#__PURE__*/ new ReadonlyReactiveHandler()\n\nexport const shallowReactiveHandlers = /*#__PURE__*/ new MutableReactiveHandler(\n  true\n)\n\n// Props handlers are special in the sense that it should not unwrap top-level\n// refs (in order to allow refs to be explicitly passed down), but should\n// retain the reactivity of the normal readonly object.\nexport const shallowReadonlyHandlers =\n  /*#__PURE__*/ new ReadonlyReactiveHandler(true)\n", "import { toRaw, ReactiveFlags, toReactive, toReadonly } from './reactive'\nimport { track, trigger, ITERATE_KEY, MAP_KEY_ITERATE_KEY } from './effect'\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\nimport { capitalize, hasOwn, hasChanged, toRawType, isMap } from '@vue/shared'\n\nexport type CollectionTypes = IterableCollections | WeakCollections\n\ntype IterableCollections = Map<any, any> | Set<any>\ntype WeakCollections = WeakMap<any, any> | WeakSet<any>\ntype MapTypes = Map<any, any> | WeakMap<any, any>\ntype SetTypes = Set<any> | WeakSet<any>\n\nconst toShallow = <T extends unknown>(value: T): T => value\n\nconst getProto = <T extends CollectionTypes>(v: T): any =>\n  Reflect.getPrototypeOf(v)\n\nfunction get(\n  target: MapTypes,\n  key: unknown,\n  isReadonly = false,\n  isShallow = false\n) {\n  // #1772: readonly(reactive(Map)) should return readonly + reactive version\n  // of the value\n  target = (target as any)[ReactiveFlags.RAW]\n  const rawTarget = toRaw(target)\n  const rawKey = toRaw(key)\n  if (!isReadonly) {\n    if (hasChanged(key, rawKey)) {\n      track(rawTarget, TrackOpTypes.GET, key)\n    }\n    track(rawTarget, TrackOpTypes.GET, rawKey)\n  }\n  const { has } = getProto(rawTarget)\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\n  if (has.call(rawTarget, key)) {\n    return wrap(target.get(key))\n  } else if (has.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey))\n  } else if (target !== rawTarget) {\n    // #3602 readonly(reactive(Map))\n    // ensure that the nested reactive `Map` can do tracking for itself\n    target.get(key)\n  }\n}\n\nfunction has(this: CollectionTypes, key: unknown, isReadonly = false): boolean {\n  const target = (this as any)[ReactiveFlags.RAW]\n  const rawTarget = toRaw(target)\n  const rawKey = toRaw(key)\n  if (!isReadonly) {\n    if (hasChanged(key, rawKey)) {\n      track(rawTarget, TrackOpTypes.HAS, key)\n    }\n    track(rawTarget, TrackOpTypes.HAS, rawKey)\n  }\n  return key === rawKey\n    ? target.has(key)\n    : target.has(key) || target.has(rawKey)\n}\n\nfunction size(target: IterableCollections, isReadonly = false) {\n  target = (target as any)[ReactiveFlags.RAW]\n  !isReadonly && track(toRaw(target), TrackOpTypes.ITERATE, ITERATE_KEY)\n  return Reflect.get(target, 'size', target)\n}\n\nfunction add(this: SetTypes, value: unknown) {\n  value = toRaw(value)\n  const target = toRaw(this)\n  const proto = getProto(target)\n  const hadKey = proto.has.call(target, value)\n  if (!hadKey) {\n    target.add(value)\n    trigger(target, TriggerOpTypes.ADD, value, value)\n  }\n  return this\n}\n\nfunction set(this: MapTypes, key: unknown, value: unknown) {\n  value = toRaw(value)\n  const target = toRaw(this)\n  const { has, get } = getProto(target)\n\n  let hadKey = has.call(target, key)\n  if (!hadKey) {\n    key = toRaw(key)\n    hadKey = has.call(target, key)\n  } else if (__DEV__) {\n    checkIdentityKeys(target, has, key)\n  }\n\n  const oldValue = get.call(target, key)\n  target.set(key, value)\n  if (!hadKey) {\n    trigger(target, TriggerOpTypes.ADD, key, value)\n  } else if (hasChanged(value, oldValue)) {\n    trigger(target, TriggerOpTypes.SET, key, value, oldValue)\n  }\n  return this\n}\n\nfunction deleteEntry(this: CollectionTypes, key: unknown) {\n  const target = toRaw(this)\n  const { has, get } = getProto(target)\n  let hadKey = has.call(target, key)\n  if (!hadKey) {\n    key = toRaw(key)\n    hadKey = has.call(target, key)\n  } else if (__DEV__) {\n    checkIdentityKeys(target, has, key)\n  }\n\n  const oldValue = get ? get.call(target, key) : undefined\n  // forward the operation before queueing reactions\n  const result = target.delete(key)\n  if (hadKey) {\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\n  }\n  return result\n}\n\nfunction clear(this: IterableCollections) {\n  const target = toRaw(this)\n  const hadItems = target.size !== 0\n  const oldTarget = __DEV__\n    ? isMap(target)\n      ? new Map(target)\n      : new Set(target)\n    : undefined\n  // forward the operation before queueing reactions\n  const result = target.clear()\n  if (hadItems) {\n    trigger(target, TriggerOpTypes.CLEAR, undefined, undefined, oldTarget)\n  }\n  return result\n}\n\nfunction createForEach(isReadonly: boolean, isShallow: boolean) {\n  return function forEach(\n    this: IterableCollections,\n    callback: Function,\n    thisArg?: unknown\n  ) {\n    const observed = this as any\n    const target = observed[ReactiveFlags.RAW]\n    const rawTarget = toRaw(target)\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\n    !isReadonly && track(rawTarget, TrackOpTypes.ITERATE, ITERATE_KEY)\n    return target.forEach((value: unknown, key: unknown) => {\n      // important: make sure the callback is\n      // 1. invoked with the reactive map as `this` and 3rd arg\n      // 2. the value received should be a corresponding reactive/readonly.\n      return callback.call(thisArg, wrap(value), wrap(key), observed)\n    })\n  }\n}\n\ninterface Iterable {\n  [Symbol.iterator](): Iterator\n}\n\ninterface Iterator {\n  next(value?: any): IterationResult\n}\n\ninterface IterationResult {\n  value: any\n  done: boolean\n}\n\nfunction createIterableMethod(\n  method: string | symbol,\n  isReadonly: boolean,\n  isShallow: boolean\n) {\n  return function (\n    this: IterableCollections,\n    ...args: unknown[]\n  ): Iterable & Iterator {\n    const target = (this as any)[ReactiveFlags.RAW]\n    const rawTarget = toRaw(target)\n    const targetIsMap = isMap(rawTarget)\n    const isPair =\n      method === 'entries' || (method === Symbol.iterator && targetIsMap)\n    const isKeyOnly = method === 'keys' && targetIsMap\n    const innerIterator = target[method](...args)\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\n    !isReadonly &&\n      track(\n        rawTarget,\n        TrackOpTypes.ITERATE,\n        isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\n      )\n    // return a wrapped iterator which returns observed versions of the\n    // values emitted from the real iterator\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next()\n        return done\n          ? { value, done }\n          : {\n              value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n              done\n            }\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this\n      }\n    }\n  }\n}\n\nfunction createReadonlyMethod(type: TriggerOpTypes): Function {\n  return function (this: CollectionTypes, ...args: unknown[]) {\n    if (__DEV__) {\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``\n      console.warn(\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\n        toRaw(this)\n      )\n    }\n    return type === TriggerOpTypes.DELETE ? false : this\n  }\n}\n\nfunction createInstrumentations() {\n  const mutableInstrumentations: Record<string, Function | number> = {\n    get(this: MapTypes, key: unknown) {\n      return get(this, key)\n    },\n    get size() {\n      return size(this as unknown as IterableCollections)\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  }\n\n  const shallowInstrumentations: Record<string, Function | number> = {\n    get(this: MapTypes, key: unknown) {\n      return get(this, key, false, true)\n    },\n    get size() {\n      return size(this as unknown as IterableCollections)\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  }\n\n  const readonlyInstrumentations: Record<string, Function | number> = {\n    get(this: MapTypes, key: unknown) {\n      return get(this, key, true)\n    },\n    get size() {\n      return size(this as unknown as IterableCollections, true)\n    },\n    has(this: MapTypes, key: unknown) {\n      return has.call(this, key, true)\n    },\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\n    set: createReadonlyMethod(TriggerOpTypes.SET),\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\n    forEach: createForEach(true, false)\n  }\n\n  const shallowReadonlyInstrumentations: Record<string, Function | number> = {\n    get(this: MapTypes, key: unknown) {\n      return get(this, key, true, true)\n    },\n    get size() {\n      return size(this as unknown as IterableCollections, true)\n    },\n    has(this: MapTypes, key: unknown) {\n      return has.call(this, key, true)\n    },\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\n    set: createReadonlyMethod(TriggerOpTypes.SET),\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\n    forEach: createForEach(true, true)\n  }\n\n  const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator]\n  iteratorMethods.forEach(method => {\n    mutableInstrumentations[method as string] = createIterableMethod(\n      method,\n      false,\n      false\n    )\n    readonlyInstrumentations[method as string] = createIterableMethod(\n      method,\n      true,\n      false\n    )\n    shallowInstrumentations[method as string] = createIterableMethod(\n      method,\n      false,\n      true\n    )\n    shallowReadonlyInstrumentations[method as string] = createIterableMethod(\n      method,\n      true,\n      true\n    )\n  })\n\n  return [\n    mutableInstrumentations,\n    readonlyInstrumentations,\n    shallowInstrumentations,\n    shallowReadonlyInstrumentations\n  ]\n}\n\nconst [\n  mutableInstrumentations,\n  readonlyInstrumentations,\n  shallowInstrumentations,\n  shallowReadonlyInstrumentations\n] = /* #__PURE__*/ createInstrumentations()\n\nfunction createInstrumentationGetter(isReadonly: boolean, shallow: boolean) {\n  const instrumentations = shallow\n    ? isReadonly\n      ? shallowReadonlyInstrumentations\n      : shallowInstrumentations\n    : isReadonly\n    ? readonlyInstrumentations\n    : mutableInstrumentations\n\n  return (\n    target: CollectionTypes,\n    key: string | symbol,\n    receiver: CollectionTypes\n  ) => {\n    if (key === ReactiveFlags.IS_REACTIVE) {\n      return !isReadonly\n    } else if (key === ReactiveFlags.IS_READONLY) {\n      return isReadonly\n    } else if (key === ReactiveFlags.RAW) {\n      return target\n    }\n\n    return Reflect.get(\n      hasOwn(instrumentations, key) && key in target\n        ? instrumentations\n        : target,\n      key,\n      receiver\n    )\n  }\n}\n\nexport const mutableCollectionHandlers: ProxyHandler<CollectionTypes> = {\n  get: /*#__PURE__*/ createInstrumentationGetter(false, false)\n}\n\nexport const shallowCollectionHandlers: ProxyHandler<CollectionTypes> = {\n  get: /*#__PURE__*/ createInstrumentationGetter(false, true)\n}\n\nexport const readonlyCollectionHandlers: ProxyHandler<CollectionTypes> = {\n  get: /*#__PURE__*/ createInstrumentationGetter(true, false)\n}\n\nexport const shallowReadonlyCollectionHandlers: ProxyHandler<CollectionTypes> =\n  {\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\n  }\n\nfunction checkIdentityKeys(\n  target: CollectionTypes,\n  has: (key: unknown) => boolean,\n  key: unknown\n) {\n  const rawKey = toRaw(key)\n  if (rawKey !== key && has.call(target, rawKey)) {\n    const type = toRawType(target)\n    console.warn(\n      `Reactive ${type} contains both the raw and reactive ` +\n        `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\n        `which can lead to inconsistencies. ` +\n        `Avoid differentiating between the raw and reactive versions ` +\n        `of an object and only use the reactive version if possible.`\n    )\n  }\n}\n", "import { isObject, toRawType, def } from '@vue/shared'\nimport {\n  mutableHandlers,\n  readonlyHandlers,\n  shallowReactiveHandlers,\n  shallowReadonlyHandlers\n} from './baseHandlers'\nimport {\n  mutableCollectionHandlers,\n  readonlyCollectionHandlers,\n  shallowCollectionHandlers,\n  shallowReadonlyCollectionHandlers\n} from './collectionHandlers'\nimport type { UnwrapRefSimple, Ref, RawSymbol } from './ref'\n\nexport const enum ReactiveFlags {\n  SKIP = '__v_skip',\n  IS_REACTIVE = '__v_isReactive',\n  IS_READONLY = '__v_isReadonly',\n  IS_SHALLOW = '__v_isShallow',\n  RAW = '__v_raw'\n}\n\nexport interface Target {\n  [ReactiveFlags.SKIP]?: boolean\n  [ReactiveFlags.IS_REACTIVE]?: boolean\n  [ReactiveFlags.IS_READONLY]?: boolean\n  [ReactiveFlags.IS_SHALLOW]?: boolean\n  [ReactiveFlags.RAW]?: any\n}\n\nexport const reactiveMap = new WeakMap<Target, any>()\nexport const shallowReactiveMap = new WeakMap<Target, any>()\nexport const readonlyMap = new WeakMap<Target, any>()\nexport const shallowReadonlyMap = new WeakMap<Target, any>()\n\nconst enum TargetType {\n  INVALID = 0,\n  COMMON = 1,\n  COLLECTION = 2\n}\n\nfunction targetTypeMap(rawType: string) {\n  switch (rawType) {\n    case 'Object':\n    case 'Array':\n      return TargetType.COMMON\n    case 'Map':\n    case 'Set':\n    case 'WeakMap':\n    case 'WeakSet':\n      return TargetType.COLLECTION\n    default:\n      return TargetType.INVALID\n  }\n}\n\nfunction getTargetType(value: Target) {\n  return value[ReactiveFlags.SKIP] || !Object.isExtensible(value)\n    ? TargetType.INVALID\n    : targetTypeMap(toRawType(value))\n}\n\n// only unwrap nested ref\nexport type UnwrapNestedRefs<T> = T extends Ref ? T : UnwrapRefSimple<T>\n\n/**\n * Returns a reactive proxy of the object.\n *\n * The reactive conversion is \"deep\": it affects all nested properties. A\n * reactive object also deeply unwraps any properties that are refs while\n * maintaining reactivity.\n *\n * @example\n * ```js\n * const obj = reactive({ count: 0 })\n * ```\n *\n * @param target - The source object.\n * @see {@link https://vuejs.org/api/reactivity-core.html#reactive}\n */\nexport function reactive<T extends object>(target: T): UnwrapNestedRefs<T>\nexport function reactive(target: object) {\n  // if trying to observe a readonly proxy, return the readonly version.\n  if (isReadonly(target)) {\n    return target\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers,\n    reactiveMap\n  )\n}\n\nexport declare const ShallowReactiveMarker: unique symbol\n\nexport type ShallowReactive<T> = T & { [ShallowReactiveMarker]?: true }\n\n/**\n * Shallow version of {@link reactive()}.\n *\n * Unlike {@link reactive()}, there is no deep conversion: only root-level\n * properties are reactive for a shallow reactive object. Property values are\n * stored and exposed as-is - this also means properties with ref values will\n * not be automatically unwrapped.\n *\n * @example\n * ```js\n * const state = shallowReactive({\n *   foo: 1,\n *   nested: {\n *     bar: 2\n *   }\n * })\n *\n * // mutating state's own properties is reactive\n * state.foo++\n *\n * // ...but does not convert nested objects\n * isReactive(state.nested) // false\n *\n * // NOT reactive\n * state.nested.bar++\n * ```\n *\n * @param target - The source object.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#shallowreactive}\n */\nexport function shallowReactive<T extends object>(\n  target: T\n): ShallowReactive<T> {\n  return createReactiveObject(\n    target,\n    false,\n    shallowReactiveHandlers,\n    shallowCollectionHandlers,\n    shallowReactiveMap\n  )\n}\n\ntype Primitive = string | number | boolean | bigint | symbol | undefined | null\ntype Builtin = Primitive | Function | Date | Error | RegExp\nexport type DeepReadonly<T> = T extends Builtin\n  ? T\n  : T extends Map<infer K, infer V>\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\n  : T extends ReadonlyMap<infer K, infer V>\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\n  : T extends WeakMap<infer K, infer V>\n  ? WeakMap<DeepReadonly<K>, DeepReadonly<V>>\n  : T extends Set<infer U>\n  ? ReadonlySet<DeepReadonly<U>>\n  : T extends ReadonlySet<infer U>\n  ? ReadonlySet<DeepReadonly<U>>\n  : T extends WeakSet<infer U>\n  ? WeakSet<DeepReadonly<U>>\n  : T extends Promise<infer U>\n  ? Promise<DeepReadonly<U>>\n  : T extends Ref<infer U>\n  ? Readonly<Ref<DeepReadonly<U>>>\n  : T extends {}\n  ? { readonly [K in keyof T]: DeepReadonly<T[K]> }\n  : Readonly<T>\n\n/**\n * Takes an object (reactive or plain) or a ref and returns a readonly proxy to\n * the original.\n *\n * A readonly proxy is deep: any nested property accessed will be readonly as\n * well. It also has the same ref-unwrapping behavior as {@link reactive()},\n * except the unwrapped values will also be made readonly.\n *\n * @example\n * ```js\n * const original = reactive({ count: 0 })\n *\n * const copy = readonly(original)\n *\n * watchEffect(() => {\n *   // works for reactivity tracking\n *   console.log(copy.count)\n * })\n *\n * // mutating original will trigger watchers relying on the copy\n * original.count++\n *\n * // mutating the copy will fail and result in a warning\n * copy.count++ // warning!\n * ```\n *\n * @param target - The source object.\n * @see {@link https://vuejs.org/api/reactivity-core.html#readonly}\n */\nexport function readonly<T extends object>(\n  target: T\n): DeepReadonly<UnwrapNestedRefs<T>> {\n  return createReactiveObject(\n    target,\n    true,\n    readonlyHandlers,\n    readonlyCollectionHandlers,\n    readonlyMap\n  )\n}\n\n/**\n * Shallow version of {@link readonly()}.\n *\n * Unlike {@link readonly()}, there is no deep conversion: only root-level\n * properties are made readonly. Property values are stored and exposed as-is -\n * this also means properties with ref values will not be automatically\n * unwrapped.\n *\n * @example\n * ```js\n * const state = shallowReadonly({\n *   foo: 1,\n *   nested: {\n *     bar: 2\n *   }\n * })\n *\n * // mutating state's own properties will fail\n * state.foo++\n *\n * // ...but works on nested objects\n * isReadonly(state.nested) // false\n *\n * // works\n * state.nested.bar++\n * ```\n *\n * @param target - The source object.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#shallowreadonly}\n */\nexport function shallowReadonly<T extends object>(target: T): Readonly<T> {\n  return createReactiveObject(\n    target,\n    true,\n    shallowReadonlyHandlers,\n    shallowReadonlyCollectionHandlers,\n    shallowReadonlyMap\n  )\n}\n\nfunction createReactiveObject(\n  target: Target,\n  isReadonly: boolean,\n  baseHandlers: ProxyHandler<any>,\n  collectionHandlers: ProxyHandler<any>,\n  proxyMap: WeakMap<Target, any>\n) {\n  if (!isObject(target)) {\n    if (__DEV__) {\n      console.warn(`value cannot be made reactive: ${String(target)}`)\n    }\n    return target\n  }\n  // target is already a Proxy, return it.\n  // exception: calling readonly() on a reactive object\n  if (\n    target[ReactiveFlags.RAW] &&\n    !(isReadonly && target[ReactiveFlags.IS_REACTIVE])\n  ) {\n    return target\n  }\n  // target already has corresponding Proxy\n  const existingProxy = proxyMap.get(target)\n  if (existingProxy) {\n    return existingProxy\n  }\n  // only specific value types can be observed.\n  const targetType = getTargetType(target)\n  if (targetType === TargetType.INVALID) {\n    return target\n  }\n  const proxy = new Proxy(\n    target,\n    targetType === TargetType.COLLECTION ? collectionHandlers : baseHandlers\n  )\n  proxyMap.set(target, proxy)\n  return proxy\n}\n\n/**\n * Checks if an object is a proxy created by {@link reactive()} or\n * {@link shallowReactive()} (or {@link ref()} in some cases).\n *\n * @example\n * ```js\n * isReactive(reactive({}))            // => true\n * isReactive(readonly(reactive({})))  // => true\n * isReactive(ref({}).value)           // => true\n * isReactive(readonly(ref({})).value) // => true\n * isReactive(ref(true))               // => false\n * isReactive(shallowRef({}).value)    // => false\n * isReactive(shallowReactive({}))     // => true\n * ```\n *\n * @param value - The value to check.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#isreactive}\n */\nexport function isReactive(value: unknown): boolean {\n  if (isReadonly(value)) {\n    return isReactive((value as Target)[ReactiveFlags.RAW])\n  }\n  return !!(value && (value as Target)[ReactiveFlags.IS_REACTIVE])\n}\n\n/**\n * Checks whether the passed value is a readonly object. The properties of a\n * readonly object can change, but they can't be assigned directly via the\n * passed object.\n *\n * The proxies created by {@link readonly()} and {@link shallowReadonly()} are\n * both considered readonly, as is a computed ref without a set function.\n *\n * @param value - The value to check.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#isreadonly}\n */\nexport function isReadonly(value: unknown): boolean {\n  return !!(value && (value as Target)[ReactiveFlags.IS_READONLY])\n}\n\nexport function isShallow(value: unknown): boolean {\n  return !!(value && (value as Target)[ReactiveFlags.IS_SHALLOW])\n}\n\n/**\n * Checks if an object is a proxy created by {@link reactive},\n * {@link readonly}, {@link shallowReactive} or {@link shallowReadonly()}.\n *\n * @param value - The value to check.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#isproxy}\n */\nexport function isProxy(value: unknown): boolean {\n  return isReactive(value) || isReadonly(value)\n}\n\n/**\n * Returns the raw, original object of a Vue-created proxy.\n *\n * `toRaw()` can return the original object from proxies created by\n * {@link reactive()}, {@link readonly()}, {@link shallowReactive()} or\n * {@link shallowReadonly()}.\n *\n * This is an escape hatch that can be used to temporarily read without\n * incurring proxy access / tracking overhead or write without triggering\n * changes. It is **not** recommended to hold a persistent reference to the\n * original object. Use with caution.\n *\n * @example\n * ```js\n * const foo = {}\n * const reactiveFoo = reactive(foo)\n *\n * console.log(toRaw(reactiveFoo) === foo) // true\n * ```\n *\n * @param observed - The object for which the \"raw\" value is requested.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#toraw}\n */\nexport function toRaw<T>(observed: T): T {\n  const raw = observed && (observed as Target)[ReactiveFlags.RAW]\n  return raw ? toRaw(raw) : observed\n}\n\nexport type Raw<T> = T & { [RawSymbol]?: true }\n\n/**\n * Marks an object so that it will never be converted to a proxy. Returns the\n * object itself.\n *\n * @example\n * ```js\n * const foo = markRaw({})\n * console.log(isReactive(reactive(foo))) // false\n *\n * // also works when nested inside other reactive objects\n * const bar = reactive({ foo })\n * console.log(isReactive(bar.foo)) // false\n * ```\n *\n * **Warning:** `markRaw()` together with the shallow APIs such as\n * {@link shallowReactive()} allow you to selectively opt-out of the default\n * deep reactive/readonly conversion and embed raw, non-proxied objects in your\n * state graph.\n *\n * @param value - The object to be marked as \"raw\".\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#markraw}\n */\nexport function markRaw<T extends object>(value: T): Raw<T> {\n  def(value, ReactiveFlags.SKIP, true)\n  return value\n}\n\n/**\n * Returns a reactive proxy of the given value (if possible).\n *\n * If the given value is not an object, the original value itself is returned.\n *\n * @param value - The value for which a reactive proxy shall be created.\n */\nexport const toReactive = <T extends unknown>(value: T): T =>\n  isObject(value) ? reactive(value) : value\n\n/**\n * Returns a readonly proxy of the given value (if possible).\n *\n * If the given value is not an object, the original value itself is returned.\n *\n * @param value - The value for which a readonly proxy shall be created.\n */\nexport const toReadonly = <T extends unknown>(value: T): T =>\n  isObject(value) ? readonly(value) : value\n", "import {\n  activeEffect,\n  getDepFromReactive,\n  shouldTrack,\n  trackEffects,\n  triggerEffects\n} from './effect'\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\nimport { isArray, hasChanged, IfAny, isFunction, isObject } from '@vue/shared'\nimport {\n  isProxy,\n  toRaw,\n  isReactive,\n  toReactive,\n  isReadonly,\n  isShallow\n} from './reactive'\nimport type { ShallowReactiveMarker } from './reactive'\nimport { CollectionTypes } from './collectionHandlers'\nimport { createDep, Dep } from './dep'\n\ndeclare const RefSymbol: unique symbol\nexport declare const RawSymbol: unique symbol\n\nexport interface Ref<T = any> {\n  value: T\n  /**\n   * Type differentiator only.\n   * We need this to be in public d.ts but don't want it to show up in IDE\n   * autocomplete, so we use a private Symbol instead.\n   */\n  [RefSymbol]: true\n}\n\ntype RefBase<T> = {\n  dep?: Dep\n  value: T\n}\n\nexport function trackRefValue(ref: RefBase<any>) {\n  if (shouldTrack && activeEffect) {\n    ref = toRaw(ref)\n    if (__DEV__) {\n      trackEffects(ref.dep || (ref.dep = createDep()), {\n        target: ref,\n        type: TrackOpTypes.GET,\n        key: 'value'\n      })\n    } else {\n      trackEffects(ref.dep || (ref.dep = createDep()))\n    }\n  }\n}\n\nexport function triggerRefValue(ref: RefBase<any>, newVal?: any) {\n  ref = toRaw(ref)\n  const dep = ref.dep\n  if (dep) {\n    if (__DEV__) {\n      triggerEffects(dep, {\n        target: ref,\n        type: TriggerOpTypes.SET,\n        key: 'value',\n        newValue: newVal\n      })\n    } else {\n      triggerEffects(dep)\n    }\n  }\n}\n\n/**\n * Checks if a value is a ref object.\n *\n * @param r - The value to inspect.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#isref}\n */\nexport function isRef<T>(r: Ref<T> | unknown): r is Ref<T>\nexport function isRef(r: any): r is Ref {\n  return !!(r && r.__v_isRef === true)\n}\n\n/**\n * Takes an inner value and returns a reactive and mutable ref object, which\n * has a single property `.value` that points to the inner value.\n *\n * @param value - The object to wrap in the ref.\n * @see {@link https://vuejs.org/api/reactivity-core.html#ref}\n */\nexport function ref<T extends Ref>(value: T): T\nexport function ref<T>(value: T): Ref<UnwrapRef<T>>\nexport function ref<T = any>(): Ref<T | undefined>\nexport function ref(value?: unknown) {\n  return createRef(value, false)\n}\n\ndeclare const ShallowRefMarker: unique symbol\n\nexport type ShallowRef<T = any> = Ref<T> & { [ShallowRefMarker]?: true }\n\n/**\n * Shallow version of {@link ref()}.\n *\n * @example\n * ```js\n * const state = shallowRef({ count: 1 })\n *\n * // does NOT trigger change\n * state.value.count = 2\n *\n * // does trigger change\n * state.value = { count: 2 }\n * ```\n *\n * @param value - The \"inner value\" for the shallow ref.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#shallowref}\n */\nexport function shallowRef<T extends object>(\n  value: T\n): T extends Ref ? T : ShallowRef<T>\nexport function shallowRef<T>(value: T): ShallowRef<T>\nexport function shallowRef<T = any>(): ShallowRef<T | undefined>\nexport function shallowRef(value?: unknown) {\n  return createRef(value, true)\n}\n\nfunction createRef(rawValue: unknown, shallow: boolean) {\n  if (isRef(rawValue)) {\n    return rawValue\n  }\n  return new RefImpl(rawValue, shallow)\n}\n\nclass RefImpl<T> {\n  private _value: T\n  private _rawValue: T\n\n  public dep?: Dep = undefined\n  public readonly __v_isRef = true\n\n  constructor(\n    value: T,\n    public readonly __v_isShallow: boolean\n  ) {\n    this._rawValue = __v_isShallow ? value : toRaw(value)\n    this._value = __v_isShallow ? value : toReactive(value)\n  }\n\n  get value() {\n    trackRefValue(this)\n    return this._value\n  }\n\n  set value(newVal) {\n    const useDirectValue =\n      this.__v_isShallow || isShallow(newVal) || isReadonly(newVal)\n    newVal = useDirectValue ? newVal : toRaw(newVal)\n    if (hasChanged(newVal, this._rawValue)) {\n      this._rawValue = newVal\n      this._value = useDirectValue ? newVal : toReactive(newVal)\n      triggerRefValue(this, newVal)\n    }\n  }\n}\n\n/**\n * Force trigger effects that depends on a shallow ref. This is typically used\n * after making deep mutations to the inner value of a shallow ref.\n *\n * @example\n * ```js\n * const shallow = shallowRef({\n *   greet: 'Hello, world'\n * })\n *\n * // Logs \"Hello, world\" once for the first run-through\n * watchEffect(() => {\n *   console.log(shallow.value.greet)\n * })\n *\n * // This won't trigger the effect because the ref is shallow\n * shallow.value.greet = 'Hello, universe'\n *\n * // Logs \"Hello, universe\"\n * triggerRef(shallow)\n * ```\n *\n * @param ref - The ref whose tied effects shall be executed.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#triggerref}\n */\nexport function triggerRef(ref: Ref) {\n  triggerRefValue(ref, __DEV__ ? ref.value : void 0)\n}\n\nexport type MaybeRef<T = any> = T | Ref<T>\nexport type MaybeRefOrGetter<T = any> = MaybeRef<T> | (() => T)\n\n/**\n * Returns the inner value if the argument is a ref, otherwise return the\n * argument itself. This is a sugar function for\n * `val = isRef(val) ? val.value : val`.\n *\n * @example\n * ```js\n * function useFoo(x: number | Ref<number>) {\n *   const unwrapped = unref(x)\n *   // unwrapped is guaranteed to be number now\n * }\n * ```\n *\n * @param ref - Ref or plain value to be converted into the plain value.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#unref}\n */\nexport function unref<T>(ref: MaybeRef<T>): T {\n  return isRef(ref) ? ref.value : ref\n}\n\n/**\n * Normalizes values / refs / getters to values.\n * This is similar to {@link unref()}, except that it also normalizes getters.\n * If the argument is a getter, it will be invoked and its return value will\n * be returned.\n *\n * @example\n * ```js\n * toValue(1) // 1\n * toValue(ref(1)) // 1\n * toValue(() => 1) // 1\n * ```\n *\n * @param source - A getter, an existing ref, or a non-function value.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#tovalue}\n */\nexport function toValue<T>(source: MaybeRefOrGetter<T>): T {\n  return isFunction(source) ? source() : unref(source)\n}\n\nconst shallowUnwrapHandlers: ProxyHandler<any> = {\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key]\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value\n      return true\n    } else {\n      return Reflect.set(target, key, value, receiver)\n    }\n  }\n}\n\n/**\n * Returns a reactive proxy for the given object.\n *\n * If the object already is reactive, it's returned as-is. If not, a new\n * reactive proxy is created. Direct child properties that are refs are properly\n * handled, as well.\n *\n * @param objectWithRefs - Either an already-reactive object or a simple object\n * that contains refs.\n */\nexport function proxyRefs<T extends object>(\n  objectWithRefs: T\n): ShallowUnwrapRef<T> {\n  return isReactive(objectWithRefs)\n    ? objectWithRefs\n    : new Proxy(objectWithRefs, shallowUnwrapHandlers)\n}\n\nexport type CustomRefFactory<T> = (\n  track: () => void,\n  trigger: () => void\n) => {\n  get: () => T\n  set: (value: T) => void\n}\n\nclass CustomRefImpl<T> {\n  public dep?: Dep = undefined\n\n  private readonly _get: ReturnType<CustomRefFactory<T>>['get']\n  private readonly _set: ReturnType<CustomRefFactory<T>>['set']\n\n  public readonly __v_isRef = true\n\n  constructor(factory: CustomRefFactory<T>) {\n    const { get, set } = factory(\n      () => trackRefValue(this),\n      () => triggerRefValue(this)\n    )\n    this._get = get\n    this._set = set\n  }\n\n  get value() {\n    return this._get()\n  }\n\n  set value(newVal) {\n    this._set(newVal)\n  }\n}\n\n/**\n * Creates a customized ref with explicit control over its dependency tracking\n * and updates triggering.\n *\n * @param factory - The function that receives the `track` and `trigger` callbacks.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#customref}\n */\nexport function customRef<T>(factory: CustomRefFactory<T>): Ref<T> {\n  return new CustomRefImpl(factory) as any\n}\n\nexport type ToRefs<T = any> = {\n  [K in keyof T]: ToRef<T[K]>\n}\n\n/**\n * Converts a reactive object to a plain object where each property of the\n * resulting object is a ref pointing to the corresponding property of the\n * original object. Each individual ref is created using {@link toRef()}.\n *\n * @param object - Reactive object to be made into an object of linked refs.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#torefs}\n */\nexport function toRefs<T extends object>(object: T): ToRefs<T> {\n  if (__DEV__ && !isProxy(object)) {\n    console.warn(`toRefs() expects a reactive object but received a plain one.`)\n  }\n  const ret: any = isArray(object) ? new Array(object.length) : {}\n  for (const key in object) {\n    ret[key] = propertyToRef(object, key)\n  }\n  return ret\n}\n\nclass ObjectRefImpl<T extends object, K extends keyof T> {\n  public readonly __v_isRef = true\n\n  constructor(\n    private readonly _object: T,\n    private readonly _key: K,\n    private readonly _defaultValue?: T[K]\n  ) {}\n\n  get value() {\n    const val = this._object[this._key]\n    return val === undefined ? this._defaultValue! : val\n  }\n\n  set value(newVal) {\n    this._object[this._key] = newVal\n  }\n\n  get dep(): Dep | undefined {\n    return getDepFromReactive(toRaw(this._object), this._key)\n  }\n}\n\nclass GetterRefImpl<T> {\n  public readonly __v_isRef = true\n  public readonly __v_isReadonly = true\n  constructor(private readonly _getter: () => T) {}\n  get value() {\n    return this._getter()\n  }\n}\n\nexport type ToRef<T> = IfAny<T, Ref<T>, [T] extends [Ref] ? T : Ref<T>>\n\n/**\n * Used to normalize values / refs / getters into refs.\n *\n * @example\n * ```js\n * // returns existing refs as-is\n * toRef(existingRef)\n *\n * // creates a ref that calls the getter on .value access\n * toRef(() => props.foo)\n *\n * // creates normal refs from non-function values\n * // equivalent to ref(1)\n * toRef(1)\n * ```\n *\n * Can also be used to create a ref for a property on a source reactive object.\n * The created ref is synced with its source property: mutating the source\n * property will update the ref, and vice-versa.\n *\n * @example\n * ```js\n * const state = reactive({\n *   foo: 1,\n *   bar: 2\n * })\n *\n * const fooRef = toRef(state, 'foo')\n *\n * // mutating the ref updates the original\n * fooRef.value++\n * console.log(state.foo) // 2\n *\n * // mutating the original also updates the ref\n * state.foo++\n * console.log(fooRef.value) // 3\n * ```\n *\n * @param source - A getter, an existing ref, a non-function value, or a\n *                 reactive object to create a property ref from.\n * @param [key] - (optional) Name of the property in the reactive object.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#toref}\n */\nexport function toRef<T>(\n  value: T\n): T extends () => infer R\n  ? Readonly<Ref<R>>\n  : T extends Ref\n  ? T\n  : Ref<UnwrapRef<T>>\nexport function toRef<T extends object, K extends keyof T>(\n  object: T,\n  key: K\n): ToRef<T[K]>\nexport function toRef<T extends object, K extends keyof T>(\n  object: T,\n  key: K,\n  defaultValue: T[K]\n): ToRef<Exclude<T[K], undefined>>\nexport function toRef(\n  source: Record<string, any> | MaybeRef,\n  key?: string,\n  defaultValue?: unknown\n): Ref {\n  if (isRef(source)) {\n    return source\n  } else if (isFunction(source)) {\n    return new GetterRefImpl(source) as any\n  } else if (isObject(source) && arguments.length > 1) {\n    return propertyToRef(source, key!, defaultValue)\n  } else {\n    return ref(source)\n  }\n}\n\nfunction propertyToRef(\n  source: Record<string, any>,\n  key: string,\n  defaultValue?: unknown\n) {\n  const val = source[key]\n  return isRef(val)\n    ? val\n    : (new ObjectRefImpl(source, key, defaultValue) as any)\n}\n\n// corner case when use narrows type\n// Ex. type RelativePath = string & { __brand: unknown }\n// RelativePath extends object -> true\ntype BaseTypes = string | number | boolean\n\n/**\n * This is a special exported interface for other packages to declare\n * additional types that should bail out for ref unwrapping. For example\n * \\@vue/runtime-dom can declare it like so in its d.ts:\n *\n * ``` ts\n * declare module '@vue/reactivity' {\n *   export interface RefUnwrapBailTypes {\n *     runtimeDOMBailTypes: Node | Window\n *   }\n * }\n * ```\n */\nexport interface RefUnwrapBailTypes {}\n\nexport type ShallowUnwrapRef<T> = {\n  [K in keyof T]: T[K] extends Ref<infer V>\n    ? V // if `V` is `unknown` that means it does not extend `Ref` and is undefined\n    : T[K] extends Ref<infer V> | undefined\n    ? unknown extends V\n      ? undefined\n      : V | undefined\n    : T[K]\n}\n\nexport type UnwrapRef<T> = T extends ShallowRef<infer V>\n  ? V\n  : T extends Ref<infer V>\n  ? UnwrapRefSimple<V>\n  : UnwrapRefSimple<T>\n\nexport type UnwrapRefSimple<T> = T extends\n  | Function\n  | CollectionTypes\n  | BaseTypes\n  | Ref\n  | RefUnwrapBailTypes[keyof RefUnwrapBailTypes]\n  | { [RawSymbol]?: true }\n  ? T\n  : T extends ReadonlyArray<any>\n  ? { [K in keyof T]: UnwrapRefSimple<T[K]> }\n  : T extends object & { [ShallowReactiveMarker]?: never }\n  ? {\n      [P in keyof T]: P extends symbol ? T[P] : UnwrapRef<T[P]>\n    }\n  : T\n", "import { DebuggerOptions, ReactiveEffect } from './effect'\nimport { Ref, trackRefValue, triggerRefValue } from './ref'\nimport { isFunction, NOOP } from '@vue/shared'\nimport { ReactiveFlags, toRaw } from './reactive'\nimport { Dep } from './dep'\n\ndeclare const ComputedRefSymbol: unique symbol\n\nexport interface ComputedRef<T = any> extends WritableComputedRef<T> {\n  readonly value: T\n  [ComputedRefSymbol]: true\n}\n\nexport interface WritableComputedRef<T> extends Ref<T> {\n  readonly effect: ReactiveEffect<T>\n}\n\nexport type ComputedGetter<T> = (...args: any[]) => T\nexport type ComputedSetter<T> = (v: T) => void\n\nexport interface WritableComputedOptions<T> {\n  get: ComputedGetter<T>\n  set: ComputedSetter<T>\n}\n\nexport class ComputedRefImpl<T> {\n  public dep?: Dep = undefined\n\n  private _value!: T\n  public readonly effect: ReactiveEffect<T>\n\n  public readonly __v_isRef = true\n  public readonly [ReactiveFlags.IS_READONLY]: boolean = false\n\n  public _dirty = true\n  public _cacheable: boolean\n\n  constructor(\n    getter: ComputedGetter<T>,\n    private readonly _setter: ComputedSetter<T>,\n    isReadonly: boolean,\n    isSSR: boolean\n  ) {\n    this.effect = new ReactiveEffect(getter, () => {\n      if (!this._dirty) {\n        this._dirty = true\n        triggerRefValue(this)\n      }\n    })\n    this.effect.computed = this\n    this.effect.active = this._cacheable = !isSSR\n    this[ReactiveFlags.IS_READONLY] = isReadonly\n  }\n\n  get value() {\n    // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n    const self = toRaw(this)\n    trackRefValue(self)\n    if (self._dirty || !self._cacheable) {\n      self._dirty = false\n      self._value = self.effect.run()!\n    }\n    return self._value\n  }\n\n  set value(newValue: T) {\n    this._setter(newValue)\n  }\n}\n\n/**\n * Takes a getter function and returns a readonly reactive ref object for the\n * returned value from the getter. It can also take an object with get and set\n * functions to create a writable ref object.\n *\n * @example\n * ```js\n * // Creating a readonly computed ref:\n * const count = ref(1)\n * const plusOne = computed(() => count.value + 1)\n *\n * console.log(plusOne.value) // 2\n * plusOne.value++ // error\n * ```\n *\n * ```js\n * // Creating a writable computed ref:\n * const count = ref(1)\n * const plusOne = computed({\n *   get: () => count.value + 1,\n *   set: (val) => {\n *     count.value = val - 1\n *   }\n * })\n *\n * plusOne.value = 1\n * console.log(count.value) // 0\n * ```\n *\n * @param getter - Function that produces the next value.\n * @param debugOptions - For debugging. See {@link https://vuejs.org/guide/extras/reactivity-in-depth.html#computed-debugging}.\n * @see {@link https://vuejs.org/api/reactivity-core.html#computed}\n */\nexport function computed<T>(\n  getter: ComputedGetter<T>,\n  debugOptions?: DebuggerOptions\n): ComputedRef<T>\nexport function computed<T>(\n  options: WritableComputedOptions<T>,\n  debugOptions?: DebuggerOptions\n): WritableComputedRef<T>\nexport function computed<T>(\n  getterOrOptions: ComputedGetter<T> | WritableComputedOptions<T>,\n  debugOptions?: DebuggerOptions,\n  isSSR = false\n) {\n  let getter: ComputedGetter<T>\n  let setter: ComputedSetter<T>\n\n  const onlyGetter = isFunction(getterOrOptions)\n  if (onlyGetter) {\n    getter = getterOrOptions\n    setter = __DEV__\n      ? () => {\n          console.warn('Write operation failed: computed value is readonly')\n        }\n      : NOOP\n  } else {\n    getter = getterOrOptions.get\n    setter = getterOrOptions.set\n  }\n\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR)\n\n  if (__DEV__ && debugOptions && !isSSR) {\n    cRef.effect.onTrack = debugOptions.onTrack\n    cRef.effect.onTrigger = debugOptions.onTrigger\n  }\n\n  return cRef as any\n}\n", "import { VNode } from './vnode'\nimport {\n  Data,\n  ComponentInternalInstance,\n  ConcreteComponent,\n  formatComponentName\n} from './component'\nimport { isString, isFunction } from '@vue/shared'\nimport { toRaw, isRef, pauseTracking, resetTracking } from '@vue/reactivity'\nimport { callWithErrorHandling, ErrorCodes } from './errorHandling'\n\ntype ComponentVNode = VNode & {\n  type: ConcreteComponent\n}\n\nconst stack: VNode[] = []\n\ntype TraceEntry = {\n  vnode: ComponentVNode\n  recurseCount: number\n}\n\ntype ComponentTraceStack = TraceEntry[]\n\nexport function pushWarningContext(vnode: VNode) {\n  stack.push(vnode)\n}\n\nexport function popWarningContext() {\n  stack.pop()\n}\n\nexport function warn(msg: string, ...args: any[]) {\n  if (!__DEV__) return\n\n  // avoid props formatting or warn handler tracking deps that might be mutated\n  // during patch, leading to infinite recursion.\n  pauseTracking()\n\n  const instance = stack.length ? stack[stack.length - 1].component : null\n  const appWarnHandler = instance && instance.appContext.config.warnHandler\n  const trace = getComponentTrace()\n\n  if (appWarnHandler) {\n    callWithErrorHandling(\n      appWarnHandler,\n      instance,\n      ErrorCodes.APP_WARN_HANDLER,\n      [\n        msg + args.join(''),\n        instance && instance.proxy,\n        trace\n          .map(\n            ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\n          )\n          .join('\\n'),\n        trace\n      ]\n    )\n  } else {\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args]\n    /* istanbul ignore if */\n    if (\n      trace.length &&\n      // avoid spamming console during tests\n      !__TEST__\n    ) {\n      warnArgs.push(`\\n`, ...formatTrace(trace))\n    }\n    console.warn(...warnArgs)\n  }\n\n  resetTracking()\n}\n\nexport function getComponentTrace(): ComponentTraceStack {\n  let currentVNode: VNode | null = stack[stack.length - 1]\n  if (!currentVNode) {\n    return []\n  }\n\n  // we can't just use the stack because it will be incomplete during updates\n  // that did not start from the root. Re-construct the parent chain using\n  // instance parent pointers.\n  const normalizedStack: ComponentTraceStack = []\n\n  while (currentVNode) {\n    const last = normalizedStack[0]\n    if (last && last.vnode === currentVNode) {\n      last.recurseCount++\n    } else {\n      normalizedStack.push({\n        vnode: currentVNode as ComponentVNode,\n        recurseCount: 0\n      })\n    }\n    const parentInstance: ComponentInternalInstance | null =\n      currentVNode.component && currentVNode.component.parent\n    currentVNode = parentInstance && parentInstance.vnode\n  }\n\n  return normalizedStack\n}\n\n/* istanbul ignore next */\nfunction formatTrace(trace: ComponentTraceStack): any[] {\n  const logs: any[] = []\n  trace.forEach((entry, i) => {\n    logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry))\n  })\n  return logs\n}\n\nfunction formatTraceEntry({ vnode, recurseCount }: TraceEntry): any[] {\n  const postfix =\n    recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``\n  const isRoot = vnode.component ? vnode.component.parent == null : false\n  const open = ` at <${formatComponentName(\n    vnode.component,\n    vnode.type,\n    isRoot\n  )}`\n  const close = `>` + postfix\n  return vnode.props\n    ? [open, ...formatProps(vnode.props), close]\n    : [open + close]\n}\n\n/* istanbul ignore next */\nfunction formatProps(props: Data): any[] {\n  const res: any[] = []\n  const keys = Object.keys(props)\n  keys.slice(0, 3).forEach(key => {\n    res.push(...formatProp(key, props[key]))\n  })\n  if (keys.length > 3) {\n    res.push(` ...`)\n  }\n  return res\n}\n\nfunction formatProp(key: string, value: unknown): any[]\nfunction formatProp(key: string, value: unknown, raw: true): any\n/* istanbul ignore next */\nfunction formatProp(key: string, value: unknown, raw?: boolean): any {\n  if (isString(value)) {\n    value = JSON.stringify(value)\n    return raw ? value : [`${key}=${value}`]\n  } else if (\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    value == null\n  ) {\n    return raw ? value : [`${key}=${value}`]\n  } else if (isRef(value)) {\n    value = formatProp(key, toRaw(value.value), true)\n    return raw ? value : [`${key}=Ref<`, value, `>`]\n  } else if (isFunction(value)) {\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`]\n  } else {\n    value = toRaw(value)\n    return raw ? value : [`${key}=`, value]\n  }\n}\n\n/**\n * @internal\n */\nexport function assertNumber(val: unknown, type: string) {\n  if (!__DEV__) return\n  if (val === undefined) {\n    return\n  } else if (typeof val !== 'number') {\n    warn(`${type} is not a valid number - ` + `got ${JSON.stringify(val)}.`)\n  } else if (isNaN(val)) {\n    warn(`${type} is NaN - ` + 'the duration expression might be incorrect.')\n  }\n}\n", "import { VNode } from './vnode'\nimport { ComponentInternalInstance } from './component'\nimport { warn, pushWarningContext, popWarningContext } from './warning'\nimport { isPromise, isFunction } from '@vue/shared'\nimport { LifecycleHooks } from './enums'\n\n// contexts where user provided function may be executed, in addition to\n// lifecycle hooks.\nexport const enum ErrorCodes {\n  SETUP_FUNCTION,\n  RENDER_FUNCTION,\n  WATCH_GETTER,\n  WATCH_CALLBACK,\n  WATCH_CLEANUP,\n  NATIVE_EVENT_HANDLER,\n  COMPONENT_EVENT_HANDLER,\n  VNODE_HOOK,\n  DIRECTIVE_HOOK,\n  TRANSITION_HOOK,\n  APP_ERROR_HANDLER,\n  APP_WARN_HANDLER,\n  FUNCTION_REF,\n  ASYNC_COMPONENT_LOADER,\n  SCHEDULER\n}\n\nexport const ErrorTypeStrings: Record<LifecycleHooks | ErrorCodes, string> = {\n  [LifecycleHooks.SERVER_PREFETCH]: 'serverPrefetch hook',\n  [LifecycleHooks.BEFORE_CREATE]: 'beforeCreate hook',\n  [LifecycleHooks.CREATED]: 'created hook',\n  [LifecycleHooks.BEFORE_MOUNT]: 'beforeMount hook',\n  [LifecycleHooks.MOUNTED]: 'mounted hook',\n  [LifecycleHooks.BEFORE_UPDATE]: 'beforeUpdate hook',\n  [LifecycleHooks.UPDATED]: 'updated',\n  [LifecycleHooks.BEFORE_UNMOUNT]: 'beforeUnmount hook',\n  [LifecycleHooks.UNMOUNTED]: 'unmounted hook',\n  [LifecycleHooks.ACTIVATED]: 'activated hook',\n  [LifecycleHooks.DEACTIVATED]: 'deactivated hook',\n  [LifecycleHooks.ERROR_CAPTURED]: 'errorCaptured hook',\n  [LifecycleHooks.RENDER_TRACKED]: 'renderTracked hook',\n  [LifecycleHooks.RENDER_TRIGGERED]: 'renderTriggered hook',\n  [ErrorCodes.SETUP_FUNCTION]: 'setup function',\n  [ErrorCodes.RENDER_FUNCTION]: 'render function',\n  [ErrorCodes.WATCH_GETTER]: 'watcher getter',\n  [ErrorCodes.WATCH_CALLBACK]: 'watcher callback',\n  [ErrorCodes.WATCH_CLEANUP]: 'watcher cleanup function',\n  [ErrorCodes.NATIVE_EVENT_HANDLER]: 'native event handler',\n  [ErrorCodes.COMPONENT_EVENT_HANDLER]: 'component event handler',\n  [ErrorCodes.VNODE_HOOK]: 'vnode hook',\n  [ErrorCodes.DIRECTIVE_HOOK]: 'directive hook',\n  [ErrorCodes.TRANSITION_HOOK]: 'transition hook',\n  [ErrorCodes.APP_ERROR_HANDLER]: 'app errorHandler',\n  [ErrorCodes.APP_WARN_HANDLER]: 'app warnHandler',\n  [ErrorCodes.FUNCTION_REF]: 'ref function',\n  [ErrorCodes.ASYNC_COMPONENT_LOADER]: 'async component loader',\n  [ErrorCodes.SCHEDULER]:\n    'scheduler flush. This is likely a Vue internals bug. ' +\n    'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core'\n}\n\nexport type ErrorTypes = LifecycleHooks | ErrorCodes\n\nexport function callWithErrorHandling(\n  fn: Function,\n  instance: ComponentInternalInstance | null,\n  type: ErrorTypes,\n  args?: unknown[]\n) {\n  let res\n  try {\n    res = args ? fn(...args) : fn()\n  } catch (err) {\n    handleError(err, instance, type)\n  }\n  return res\n}\n\nexport function callWithAsyncErrorHandling(\n  fn: Function | Function[],\n  instance: ComponentInternalInstance | null,\n  type: ErrorTypes,\n  args?: unknown[]\n): any[] {\n  if (isFunction(fn)) {\n    const res = callWithErrorHandling(fn, instance, type, args)\n    if (res && isPromise(res)) {\n      res.catch(err => {\n        handleError(err, instance, type)\n      })\n    }\n    return res\n  }\n\n  const values = []\n  for (let i = 0; i < fn.length; i++) {\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args))\n  }\n  return values\n}\n\nexport function handleError(\n  err: unknown,\n  instance: ComponentInternalInstance | null,\n  type: ErrorTypes,\n  throwInDev = true\n) {\n  const contextVNode = instance ? instance.vnode : null\n  if (instance) {\n    let cur = instance.parent\n    // the exposed instance is the render proxy to keep it consistent with 2.x\n    const exposedInstance = instance.proxy\n    // in production the hook receives only the error code\n    const errorInfo = __DEV__ ? ErrorTypeStrings[type] : type\n    while (cur) {\n      const errorCapturedHooks = cur.ec\n      if (errorCapturedHooks) {\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\n          if (\n            errorCapturedHooks[i](err, exposedInstance, errorInfo) === false\n          ) {\n            return\n          }\n        }\n      }\n      cur = cur.parent\n    }\n    // app-level handling\n    const appErrorHandler = instance.appContext.config.errorHandler\n    if (appErrorHandler) {\n      callWithErrorHandling(\n        appErrorHandler,\n        null,\n        ErrorCodes.APP_ERROR_HANDLER,\n        [err, exposedInstance, errorInfo]\n      )\n      return\n    }\n  }\n  logError(err, type, contextVNode, throwInDev)\n}\n\nfunction logError(\n  err: unknown,\n  type: ErrorTypes,\n  contextVNode: VNode | null,\n  throwInDev = true\n) {\n  if (__DEV__) {\n    const info = ErrorTypeStrings[type]\n    if (contextVNode) {\n      pushWarningContext(contextVNode)\n    }\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`)\n    if (contextVNode) {\n      popWarningContext()\n    }\n    // crash in dev by default so it's more noticeable\n    if (throwInDev) {\n      throw err\n    } else if (!__TEST__) {\n      console.error(err)\n    }\n  } else {\n    // recover in prod to reduce the impact on end-user\n    console.error(err)\n  }\n}\n", "import { ErrorCodes, callWithErrorHandling } from './errorHandling'\nimport { Awaited, isArray, NOOP } from '@vue/shared'\nimport { ComponentInternalInstance, getComponentName } from './component'\nimport { warn } from './warning'\n\nexport interface SchedulerJob extends Function {\n  id?: number\n  pre?: boolean\n  active?: boolean\n  computed?: boolean\n  /**\n   * Indicates whether the effect is allowed to recursively trigger itself\n   * when managed by the scheduler.\n   *\n   * By default, a job cannot trigger itself because some built-in method calls,\n   * e.g. Array.prototype.push actually performs reads as well (#1740) which\n   * can lead to confusing infinite loops.\n   * The allowed cases are component update functions and watch callbacks.\n   * Component update functions may update child component props, which in turn\n   * trigger flush: \"pre\" watch callbacks that mutates state that the parent\n   * relies on (#1801). Watch callbacks doesn't track its dependencies so if it\n   * triggers itself again, it's likely intentional and it is the user's\n   * responsibility to perform recursive state mutation that eventually\n   * stabilizes (#1727).\n   */\n  allowRecurse?: boolean\n  /**\n   * Attached by renderer.ts when setting up a component's render effect\n   * Used to obtain component information when reporting max recursive updates.\n   * dev only.\n   */\n  ownerInstance?: ComponentInternalInstance\n}\n\nexport type SchedulerJobs = SchedulerJob | SchedulerJob[]\n\nlet isFlushing = false\nlet isFlushPending = false\n\nconst queue: SchedulerJob[] = []\nlet flushIndex = 0\n\nconst pendingPostFlushCbs: SchedulerJob[] = []\nlet activePostFlushCbs: SchedulerJob[] | null = null\nlet postFlushIndex = 0\n\nconst resolvedPromise = /*#__PURE__*/ Promise.resolve() as Promise<any>\nlet currentFlushPromise: Promise<void> | null = null\n\nconst RECURSION_LIMIT = 100\ntype CountMap = Map<SchedulerJob, number>\n\nexport function nextTick<T = void, R = void>(\n  this: T,\n  fn?: (this: T) => R\n): Promise<Awaited<R>> {\n  const p = currentFlushPromise || resolvedPromise\n  return fn ? p.then(this ? fn.bind(this) : fn) : p\n}\n\n// #2768\n// Use binary-search to find a suitable position in the queue,\n// so that the queue maintains the increasing order of job's id,\n// which can prevent the job from being skipped and also can avoid repeated patching.\nfunction findInsertionIndex(id: number) {\n  // the start index should be `flushIndex + 1`\n  let start = flushIndex + 1\n  let end = queue.length\n\n  while (start < end) {\n    const middle = (start + end) >>> 1\n    const middleJobId = getId(queue[middle])\n    middleJobId < id ? (start = middle + 1) : (end = middle)\n  }\n\n  return start\n}\n\nexport function queueJob(job: SchedulerJob) {\n  // the dedupe search uses the startIndex argument of Array.includes()\n  // by default the search index includes the current job that is being run\n  // so it cannot recursively trigger itself again.\n  // if the job is a watch() callback, the search will start with a +1 index to\n  // allow it recursively trigger itself - it is the user's responsibility to\n  // ensure it doesn't end up in an infinite loop.\n  if (\n    !queue.length ||\n    !queue.includes(\n      job,\n      isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex\n    )\n  ) {\n    if (job.id == null) {\n      queue.push(job)\n    } else {\n      queue.splice(findInsertionIndex(job.id), 0, job)\n    }\n    queueFlush()\n  }\n}\n\nfunction queueFlush() {\n  if (!isFlushing && !isFlushPending) {\n    isFlushPending = true\n    currentFlushPromise = resolvedPromise.then(flushJobs)\n  }\n}\n\nexport function invalidateJob(job: SchedulerJob) {\n  const i = queue.indexOf(job)\n  if (i > flushIndex) {\n    queue.splice(i, 1)\n  }\n}\n\nexport function queuePostFlushCb(cb: SchedulerJobs) {\n  if (!isArray(cb)) {\n    if (\n      !activePostFlushCbs ||\n      !activePostFlushCbs.includes(\n        cb,\n        cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex\n      )\n    ) {\n      pendingPostFlushCbs.push(cb)\n    }\n  } else {\n    // if cb is an array, it is a component lifecycle hook which can only be\n    // triggered by a job, which is already deduped in the main queue, so\n    // we can skip duplicate check here to improve perf\n    pendingPostFlushCbs.push(...cb)\n  }\n  queueFlush()\n}\n\nexport function flushPreFlushCbs(\n  seen?: CountMap,\n  // if currently flushing, skip the current job itself\n  i = isFlushing ? flushIndex + 1 : 0\n) {\n  if (__DEV__) {\n    seen = seen || new Map()\n  }\n  for (; i < queue.length; i++) {\n    const cb = queue[i]\n    if (cb && cb.pre) {\n      if (__DEV__ && checkRecursiveUpdates(seen!, cb)) {\n        continue\n      }\n      queue.splice(i, 1)\n      i--\n      cb()\n    }\n  }\n}\n\nexport function flushPostFlushCbs(seen?: CountMap) {\n  if (pendingPostFlushCbs.length) {\n    const deduped = [...new Set(pendingPostFlushCbs)]\n    pendingPostFlushCbs.length = 0\n\n    // #1947 already has active queue, nested flushPostFlushCbs call\n    if (activePostFlushCbs) {\n      activePostFlushCbs.push(...deduped)\n      return\n    }\n\n    activePostFlushCbs = deduped\n    if (__DEV__) {\n      seen = seen || new Map()\n    }\n\n    activePostFlushCbs.sort((a, b) => getId(a) - getId(b))\n\n    for (\n      postFlushIndex = 0;\n      postFlushIndex < activePostFlushCbs.length;\n      postFlushIndex++\n    ) {\n      if (\n        __DEV__ &&\n        checkRecursiveUpdates(seen!, activePostFlushCbs[postFlushIndex])\n      ) {\n        continue\n      }\n      activePostFlushCbs[postFlushIndex]()\n    }\n    activePostFlushCbs = null\n    postFlushIndex = 0\n  }\n}\n\nconst getId = (job: SchedulerJob): number =>\n  job.id == null ? Infinity : job.id\n\nconst comparator = (a: SchedulerJob, b: SchedulerJob): number => {\n  const diff = getId(a) - getId(b)\n  if (diff === 0) {\n    if (a.pre && !b.pre) return -1\n    if (b.pre && !a.pre) return 1\n  }\n  return diff\n}\n\nfunction flushJobs(seen?: CountMap) {\n  isFlushPending = false\n  isFlushing = true\n  if (__DEV__) {\n    seen = seen || new Map()\n  }\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child so its render effect will have smaller\n  //    priority number)\n  // 2. If a component is unmounted during a parent component's update,\n  //    its update can be skipped.\n  queue.sort(comparator)\n\n  // conditional usage of checkRecursiveUpdate must be determined out of\n  // try ... catch block since Rollup by default de-optimizes treeshaking\n  // inside try-catch. This can leave all warning code unshaked. Although\n  // they would get eventually shaken by a minifier like terser, some minifiers\n  // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\n  const check = __DEV__\n    ? (job: SchedulerJob) => checkRecursiveUpdates(seen!, job)\n    : NOOP\n\n  try {\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex]\n      if (job && job.active !== false) {\n        if (__DEV__ && check(job)) {\n          continue\n        }\n        // console.log(`running:`, job.id)\n        callWithErrorHandling(job, null, ErrorCodes.SCHEDULER)\n      }\n    }\n  } finally {\n    flushIndex = 0\n    queue.length = 0\n\n    flushPostFlushCbs(seen)\n\n    isFlushing = false\n    currentFlushPromise = null\n    // some postFlushCb queued jobs!\n    // keep flushing until it drains.\n    if (queue.length || pendingPostFlushCbs.length) {\n      flushJobs(seen)\n    }\n  }\n}\n\nfunction checkRecursiveUpdates(seen: CountMap, fn: SchedulerJob) {\n  if (!seen.has(fn)) {\n    seen.set(fn, 1)\n  } else {\n    const count = seen.get(fn)!\n    if (count > RECURSION_LIMIT) {\n      const instance = fn.ownerInstance\n      const componentName = instance && getComponentName(instance.type)\n      warn(\n        `Maximum recursive updates exceeded${\n          componentName ? ` in component <${componentName}>` : ``\n        }. ` +\n          `This means you have a reactive effect that is mutating its own ` +\n          `dependencies and thus recursively triggering itself. Possible sources ` +\n          `include component template, render function, updated hook or ` +\n          `watcher source function.`\n      )\n      return true\n    } else {\n      seen.set(fn, count + 1)\n    }\n  }\n}\n", "/* eslint-disable no-restricted-globals */\nimport {\n  ConcreteComponent,\n  ComponentInternalInstance,\n  ComponentOptions,\n  InternalRenderFunction,\n  ClassComponent,\n  isClassComponent\n} from './component'\nimport { queueJob, queuePostFlushCb } from './scheduler'\nimport { extend, getGlobalThis } from '@vue/shared'\n\ntype HMRComponent = ComponentOptions | ClassComponent\n\nexport let isHmrUpdating = false\n\nexport const hmrDirtyComponents = new Set<ConcreteComponent>()\n\nexport interface HMRRuntime {\n  createRecord: typeof createRecord\n  rerender: typeof rerender\n  reload: typeof reload\n}\n\n// Expose the HMR runtime on the global object\n// This makes it entirely tree-shakable without polluting the exports and makes\n// it easier to be used in toolings like vue-loader\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\n// to be set so that its instances can be registered / removed.\nif (__DEV__) {\n  getGlobalThis().__VUE_HMR_RUNTIME__ = {\n    createRecord: tryWrap(createRecord),\n    rerender: tryWrap(rerender),\n    reload: tryWrap(reload)\n  } as HMRRuntime\n}\n\nconst map: Map<\n  string,\n  {\n    // the initial component definition is recorded on import - this allows us\n    // to apply hot updates to the component even when there are no actively\n    // rendered instance.\n    initialDef: ComponentOptions\n    instances: Set<ComponentInternalInstance>\n  }\n> = new Map()\n\nexport function registerHMR(instance: ComponentInternalInstance) {\n  const id = instance.type.__hmrId!\n  let record = map.get(id)\n  if (!record) {\n    createRecord(id, instance.type as HMRComponent)\n    record = map.get(id)!\n  }\n  record.instances.add(instance)\n}\n\nexport function unregisterHMR(instance: ComponentInternalInstance) {\n  map.get(instance.type.__hmrId!)!.instances.delete(instance)\n}\n\nfunction createRecord(id: string, initialDef: HMRComponent): boolean {\n  if (map.has(id)) {\n    return false\n  }\n  map.set(id, {\n    initialDef: normalizeClassComponent(initialDef),\n    instances: new Set()\n  })\n  return true\n}\n\nfunction normalizeClassComponent(component: HMRComponent): ComponentOptions {\n  return isClassComponent(component) ? component.__vccOpts : component\n}\n\nfunction rerender(id: string, newRender?: Function) {\n  const record = map.get(id)\n  if (!record) {\n    return\n  }\n\n  // update initial record (for not-yet-rendered component)\n  record.initialDef.render = newRender\n\n  // Create a snapshot which avoids the set being mutated during updates\n  ;[...record.instances].forEach(instance => {\n    if (newRender) {\n      instance.render = newRender as InternalRenderFunction\n      normalizeClassComponent(instance.type as HMRComponent).render = newRender\n    }\n    instance.renderCache = []\n    // this flag forces child components with slot content to update\n    isHmrUpdating = true\n    instance.update()\n    isHmrUpdating = false\n  })\n}\n\nfunction reload(id: string, newComp: HMRComponent) {\n  const record = map.get(id)\n  if (!record) return\n\n  newComp = normalizeClassComponent(newComp)\n  // update initial def (for not-yet-rendered components)\n  updateComponentDef(record.initialDef, newComp)\n\n  // create a snapshot which avoids the set being mutated during updates\n  const instances = [...record.instances]\n\n  for (const instance of instances) {\n    const oldComp = normalizeClassComponent(instance.type as HMRComponent)\n\n    if (!hmrDirtyComponents.has(oldComp)) {\n      // 1. Update existing comp definition to match new one\n      if (oldComp !== record.initialDef) {\n        updateComponentDef(oldComp, newComp)\n      }\n      // 2. mark definition dirty. This forces the renderer to replace the\n      // component on patch.\n      hmrDirtyComponents.add(oldComp)\n    }\n\n    // 3. invalidate options resolution cache\n    instance.appContext.propsCache.delete(instance.type as any)\n    instance.appContext.emitsCache.delete(instance.type as any)\n    instance.appContext.optionsCache.delete(instance.type as any)\n\n    // 4. actually update\n    if (instance.ceReload) {\n      // custom element\n      hmrDirtyComponents.add(oldComp)\n      instance.ceReload((newComp as any).styles)\n      hmrDirtyComponents.delete(oldComp)\n    } else if (instance.parent) {\n      // 4. Force the parent instance to re-render. This will cause all updated\n      // components to be unmounted and re-mounted. Queue the update so that we\n      // don't end up forcing the same parent to re-render multiple times.\n      queueJob(instance.parent.update)\n    } else if (instance.appContext.reload) {\n      // root instance mounted via createApp() has a reload method\n      instance.appContext.reload()\n    } else if (typeof window !== 'undefined') {\n      // root instance inside tree created via raw render(). Force reload.\n      window.location.reload()\n    } else {\n      console.warn(\n        '[HMR] Root or manually mounted instance modified. Full reload required.'\n      )\n    }\n  }\n\n  // 5. make sure to cleanup dirty hmr components after update\n  queuePostFlushCb(() => {\n    for (const instance of instances) {\n      hmrDirtyComponents.delete(\n        normalizeClassComponent(instance.type as HMRComponent)\n      )\n    }\n  })\n}\n\nfunction updateComponentDef(\n  oldComp: ComponentOptions,\n  newComp: ComponentOptions\n) {\n  extend(oldComp, newComp)\n  for (const key in oldComp) {\n    if (key !== '__file' && !(key in newComp)) {\n      delete oldComp[key]\n    }\n  }\n}\n\nfunction tryWrap(fn: (id: string, arg: any) => any): Function {\n  return (id: string, arg: any) => {\n    try {\n      return fn(id, arg)\n    } catch (e: any) {\n      console.error(e)\n      console.warn(\n        `[HMR] Something went wrong during Vue component hot-reload. ` +\n          `Full reload required.`\n      )\n    }\n  }\n}\n", "/* eslint-disable no-restricted-globals */\nimport { App } from './apiCreateApp'\nimport { Fragment, Text, Comment, Static } from './vnode'\nimport { ComponentInternalInstance } from './component'\n\ninterface AppRecord {\n  id: number\n  app: App\n  version: string\n  types: Record<string, string | Symbol>\n}\n\nconst enum DevtoolsHooks {\n  APP_INIT = 'app:init',\n  APP_UNMOUNT = 'app:unmount',\n  COMPONENT_UPDATED = 'component:updated',\n  COMPONENT_ADDED = 'component:added',\n  COMPONENT_REMOVED = 'component:removed',\n  COMPONENT_EMIT = 'component:emit',\n  PERFORMANCE_START = 'perf:start',\n  PERFORMANCE_END = 'perf:end'\n}\n\ninterface DevtoolsHook {\n  enabled?: boolean\n  emit: (event: string, ...payload: any[]) => void\n  on: (event: string, handler: Function) => void\n  once: (event: string, handler: Function) => void\n  off: (event: string, handler: Function) => void\n  appRecords: AppRecord[]\n  /**\n   * Added at https://github.com/vuejs/devtools/commit/f2ad51eea789006ab66942e5a27c0f0986a257f9\n   * Returns whether the arg was buffered or not\n   */\n  cleanupBuffer?: (matchArg: unknown) => boolean\n}\n\nexport let devtools: DevtoolsHook\n\nlet buffer: { event: string; args: any[] }[] = []\n\nlet devtoolsNotInstalled = false\n\nfunction emit(event: string, ...args: any[]) {\n  if (devtools) {\n    devtools.emit(event, ...args)\n  } else if (!devtoolsNotInstalled) {\n    buffer.push({ event, args })\n  }\n}\n\nexport function setDevtoolsHook(hook: DevtoolsHook, target: any) {\n  devtools = hook\n  if (devtools) {\n    devtools.enabled = true\n    buffer.forEach(({ event, args }) => devtools.emit(event, ...args))\n    buffer = []\n  } else if (\n    // handle late devtools injection - only do this if we are in an actual\n    // browser environment to avoid the timer handle stalling test runner exit\n    // (#4815)\n    typeof window !== 'undefined' &&\n    // some envs mock window but not fully\n    window.HTMLElement &&\n    // also exclude jsdom\n    !window.navigator?.userAgent?.includes('jsdom')\n  ) {\n    const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\n      target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [])\n    replay.push((newHook: DevtoolsHook) => {\n      setDevtoolsHook(newHook, target)\n    })\n    // clear buffer after 3s - the user probably doesn't have devtools installed\n    // at all, and keeping the buffer will cause memory leaks (#4738)\n    setTimeout(() => {\n      if (!devtools) {\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null\n        devtoolsNotInstalled = true\n        buffer = []\n      }\n    }, 3000)\n  } else {\n    // non-browser env, assume not installed\n    devtoolsNotInstalled = true\n    buffer = []\n  }\n}\n\nexport function devtoolsInitApp(app: App, version: string) {\n  emit(DevtoolsHooks.APP_INIT, app, version, {\n    Fragment,\n    Text,\n    Comment,\n    Static\n  })\n}\n\nexport function devtoolsUnmountApp(app: App) {\n  emit(DevtoolsHooks.APP_UNMOUNT, app)\n}\n\nexport const devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\n  DevtoolsHooks.COMPONENT_ADDED\n)\n\nexport const devtoolsComponentUpdated =\n  /*#__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_UPDATED)\n\nconst _devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\n  DevtoolsHooks.COMPONENT_REMOVED\n)\n\nexport const devtoolsComponentRemoved = (\n  component: ComponentInternalInstance\n) => {\n  if (\n    devtools &&\n    typeof devtools.cleanupBuffer === 'function' &&\n    // remove the component if it wasn't buffered\n    !devtools.cleanupBuffer(component)\n  ) {\n    _devtoolsComponentRemoved(component)\n  }\n}\n\nfunction createDevtoolsComponentHook(hook: DevtoolsHooks) {\n  return (component: ComponentInternalInstance) => {\n    emit(\n      hook,\n      component.appContext.app,\n      component.uid,\n      component.parent ? component.parent.uid : undefined,\n      component\n    )\n  }\n}\n\nexport const devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\n  DevtoolsHooks.PERFORMANCE_START\n)\n\nexport const devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\n  DevtoolsHooks.PERFORMANCE_END\n)\n\nfunction createDevtoolsPerformanceHook(hook: DevtoolsHooks) {\n  return (component: ComponentInternalInstance, type: string, time: number) => {\n    emit(hook, component.appContext.app, component.uid, component, type, time)\n  }\n}\n\nexport function devtoolsComponentEmit(\n  component: ComponentInternalInstance,\n  event: string,\n  params: any[]\n) {\n  emit(\n    DevtoolsHooks.COMPONENT_EMIT,\n    component.appContext.app,\n    component,\n    event,\n    params\n  )\n}\n", "import { extend, hasOwn, isArray, isFunction } from '@vue/shared'\nimport {\n  Component,\n  ComponentInternalInstance,\n  ComponentOptions,\n  formatComponentName,\n  getComponentName,\n  getCurrentInstance,\n  isRuntimeOnly\n} from '../component'\nimport { warn } from '../warning'\n\nexport const enum DeprecationTypes {\n  GLOBAL_MOUNT = 'GLOBAL_MOUNT',\n  GLOBAL_MOUNT_CONTAINER = 'GLOBAL_MOUNT_CONTAINER',\n  GLOBAL_EXTEND = 'GLOBAL_EXTEND',\n  GLOBAL_PROTOTYPE = 'GLOBAL_PROTOTYPE',\n  GLOBAL_SET = 'GLOBAL_SET',\n  GLOBAL_DELETE = 'GLOBAL_DELETE',\n  GLOBAL_OBSERVABLE = 'GLOBAL_OBSERVABLE',\n  GLOBAL_PRIVATE_UTIL = 'GLOBAL_PRIVATE_UTIL',\n\n  CONFIG_SILENT = 'CONFIG_SILENT',\n  CONFIG_DEVTOOLS = 'CONFIG_DEVTOOLS',\n  CONFIG_KEY_CODES = 'CONFIG_KEY_CODES',\n  CONFIG_PRODUCTION_TIP = 'CONFIG_PRODUCTION_TIP',\n  CONFIG_IGNORED_ELEMENTS = 'CONFIG_IGNORED_ELEMENTS',\n  CONFIG_WHITESPACE = 'CONFIG_WHITESPACE',\n  CONFIG_OPTION_MERGE_STRATS = 'CONFIG_OPTION_MERGE_STRATS',\n\n  INSTANCE_SET = 'INSTANCE_SET',\n  INSTANCE_DELETE = 'INSTANCE_DELETE',\n  INSTANCE_DESTROY = 'INSTANCE_DESTROY',\n  INSTANCE_EVENT_EMITTER = 'INSTANCE_EVENT_EMITTER',\n  INSTANCE_EVENT_HOOKS = 'INSTANCE_EVENT_HOOKS',\n  INSTANCE_CHILDREN = 'INSTANCE_CHILDREN',\n  INSTANCE_LISTENERS = 'INSTANCE_LISTENERS',\n  INSTANCE_SCOPED_SLOTS = 'INSTANCE_SCOPED_SLOTS',\n  INSTANCE_ATTRS_CLASS_STYLE = 'INSTANCE_ATTRS_CLASS_STYLE',\n\n  OPTIONS_DATA_FN = 'OPTIONS_DATA_FN',\n  OPTIONS_DATA_MERGE = 'OPTIONS_DATA_MERGE',\n  OPTIONS_BEFORE_DESTROY = 'OPTIONS_BEFORE_DESTROY',\n  OPTIONS_DESTROYED = 'OPTIONS_DESTROYED',\n\n  WATCH_ARRAY = 'WATCH_ARRAY',\n  PROPS_DEFAULT_THIS = 'PROPS_DEFAULT_THIS',\n\n  V_ON_KEYCODE_MODIFIER = 'V_ON_KEYCODE_MODIFIER',\n  CUSTOM_DIR = 'CUSTOM_DIR',\n\n  ATTR_FALSE_VALUE = 'ATTR_FALSE_VALUE',\n  ATTR_ENUMERATED_COERCION = 'ATTR_ENUMERATED_COERCION',\n\n  TRANSITION_CLASSES = 'TRANSITION_CLASSES',\n  TRANSITION_GROUP_ROOT = 'TRANSITION_GROUP_ROOT',\n\n  COMPONENT_ASYNC = 'COMPONENT_ASYNC',\n  COMPONENT_FUNCTIONAL = 'COMPONENT_FUNCTIONAL',\n  COMPONENT_V_MODEL = 'COMPONENT_V_MODEL',\n\n  RENDER_FUNCTION = 'RENDER_FUNCTION',\n\n  FILTERS = 'FILTERS',\n\n  PRIVATE_APIS = 'PRIVATE_APIS'\n}\n\ntype DeprecationData = {\n  message: string | ((...args: any[]) => string)\n  link?: string\n}\n\nexport const deprecationData: Record<DeprecationTypes, DeprecationData> = {\n  [DeprecationTypes.GLOBAL_MOUNT]: {\n    message:\n      `The global app bootstrapping API has changed: vm.$mount() and the \"el\" ` +\n      `option have been removed. Use createApp(RootComponent).mount() instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/global-api.html#mounting-app-instance`\n  },\n\n  [DeprecationTypes.GLOBAL_MOUNT_CONTAINER]: {\n    message:\n      `Vue detected directives on the mount container. ` +\n      `In Vue 3, the container is no longer considered part of the template ` +\n      `and will not be processed/replaced.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/mount-changes.html`\n  },\n\n  [DeprecationTypes.GLOBAL_EXTEND]: {\n    message:\n      `Vue.extend() has been removed in Vue 3. ` +\n      `Use defineComponent() instead.`,\n    link: `https://vuejs.org/api/general.html#definecomponent`\n  },\n\n  [DeprecationTypes.GLOBAL_PROTOTYPE]: {\n    message:\n      `Vue.prototype is no longer available in Vue 3. ` +\n      `Use app.config.globalProperties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/global-api.html#vue-prototype-replaced-by-config-globalproperties`\n  },\n\n  [DeprecationTypes.GLOBAL_SET]: {\n    message:\n      `Vue.set() has been removed as it is no longer needed in Vue 3. ` +\n      `Simply use native JavaScript mutations.`\n  },\n\n  [DeprecationTypes.GLOBAL_DELETE]: {\n    message:\n      `Vue.delete() has been removed as it is no longer needed in Vue 3. ` +\n      `Simply use native JavaScript mutations.`\n  },\n\n  [DeprecationTypes.GLOBAL_OBSERVABLE]: {\n    message:\n      `Vue.observable() has been removed. ` +\n      `Use \\`import { reactive } from \"vue\"\\` from Composition API instead.`,\n    link: `https://vuejs.org/api/reactivity-core.html#reactive`\n  },\n\n  [DeprecationTypes.GLOBAL_PRIVATE_UTIL]: {\n    message:\n      `Vue.util has been removed. Please refactor to avoid its usage ` +\n      `since it was an internal API even in Vue 2.`\n  },\n\n  [DeprecationTypes.CONFIG_SILENT]: {\n    message:\n      `config.silent has been removed because it is not good practice to ` +\n      `intentionally suppress warnings. You can use your browser console's ` +\n      `filter features to focus on relevant messages.`\n  },\n\n  [DeprecationTypes.CONFIG_DEVTOOLS]: {\n    message:\n      `config.devtools has been removed. To enable devtools for ` +\n      `production, configure the __VUE_PROD_DEVTOOLS__ compile-time flag.`,\n    link: `https://github.com/vuejs/core/tree/main/packages/vue#bundler-build-feature-flags`\n  },\n\n  [DeprecationTypes.CONFIG_KEY_CODES]: {\n    message:\n      `config.keyCodes has been removed. ` +\n      `In Vue 3, you can directly use the kebab-case key names as v-on modifiers.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/keycode-modifiers.html`\n  },\n\n  [DeprecationTypes.CONFIG_PRODUCTION_TIP]: {\n    message: `config.productionTip has been removed.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/global-api.html#config-productiontip-removed`\n  },\n\n  [DeprecationTypes.CONFIG_IGNORED_ELEMENTS]: {\n    message: () => {\n      let msg = `config.ignoredElements has been removed.`\n      if (isRuntimeOnly()) {\n        msg += ` Pass the \"isCustomElement\" option to @vue/compiler-dom instead.`\n      } else {\n        msg += ` Use config.isCustomElement instead.`\n      }\n      return msg\n    },\n    link: `https://v3-migration.vuejs.org/breaking-changes/global-api.html#config-ignoredelements-is-now-config-iscustomelement`\n  },\n\n  [DeprecationTypes.CONFIG_WHITESPACE]: {\n    // this warning is only relevant in the full build when using runtime\n    // compilation, so it's put in the runtime compatConfig list.\n    message:\n      `Vue 3 compiler's whitespace option will default to \"condense\" instead of ` +\n      `\"preserve\". To suppress this warning, provide an explicit value for ` +\n      `\\`config.compilerOptions.whitespace\\`.`\n  },\n\n  [DeprecationTypes.CONFIG_OPTION_MERGE_STRATS]: {\n    message:\n      `config.optionMergeStrategies no longer exposes internal strategies. ` +\n      `Use custom merge functions instead.`\n  },\n\n  [DeprecationTypes.INSTANCE_SET]: {\n    message:\n      `vm.$set() has been removed as it is no longer needed in Vue 3. ` +\n      `Simply use native JavaScript mutations.`\n  },\n\n  [DeprecationTypes.INSTANCE_DELETE]: {\n    message:\n      `vm.$delete() has been removed as it is no longer needed in Vue 3. ` +\n      `Simply use native JavaScript mutations.`\n  },\n\n  [DeprecationTypes.INSTANCE_DESTROY]: {\n    message: `vm.$destroy() has been removed. Use app.unmount() instead.`,\n    link: `https://vuejs.org/api/application.html#app-unmount`\n  },\n\n  [DeprecationTypes.INSTANCE_EVENT_EMITTER]: {\n    message:\n      `vm.$on/$once/$off() have been removed. ` +\n      `Use an external event emitter library instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/events-api.html`\n  },\n\n  [DeprecationTypes.INSTANCE_EVENT_HOOKS]: {\n    message: event =>\n      `\"${event}\" lifecycle events are no longer supported. From templates, ` +\n      `use the \"vue:\" prefix instead of \"hook:\". For example, @${event} ` +\n      `should be changed to @vue:${event.slice(5)}. ` +\n      `From JavaScript, use Composition API to dynamically register lifecycle ` +\n      `hooks.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/vnode-lifecycle-events.html`\n  },\n\n  [DeprecationTypes.INSTANCE_CHILDREN]: {\n    message:\n      `vm.$children has been removed. Consider refactoring your logic ` +\n      `to avoid relying on direct access to child components.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/children.html`\n  },\n\n  [DeprecationTypes.INSTANCE_LISTENERS]: {\n    message:\n      `vm.$listeners has been removed. In Vue 3, parent v-on listeners are ` +\n      `included in vm.$attrs and it is no longer necessary to separately use ` +\n      `v-on=\"$listeners\" if you are already using v-bind=\"$attrs\". ` +\n      `(Note: the Vue 3 behavior only applies if this compat config is disabled)`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/listeners-removed.html`\n  },\n\n  [DeprecationTypes.INSTANCE_SCOPED_SLOTS]: {\n    message: `vm.$scopedSlots has been removed. Use vm.$slots instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/slots-unification.html`\n  },\n\n  [DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE]: {\n    message: componentName =>\n      `Component <${\n        componentName || 'Anonymous'\n      }> has \\`inheritAttrs: false\\` but is ` +\n      `relying on class/style fallthrough from parent. In Vue 3, class/style ` +\n      `are now included in $attrs and will no longer fallthrough when ` +\n      `inheritAttrs is false. If you are already using v-bind=\"$attrs\" on ` +\n      `component root it should render the same end result. ` +\n      `If you are binding $attrs to a non-root element and expecting ` +\n      `class/style to fallthrough on root, you will need to now manually bind ` +\n      `them on root via :class=\"$attrs.class\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/attrs-includes-class-style.html`\n  },\n\n  [DeprecationTypes.OPTIONS_DATA_FN]: {\n    message:\n      `The \"data\" option can no longer be a plain object. ` +\n      `Always use a function.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/data-option.html`\n  },\n\n  [DeprecationTypes.OPTIONS_DATA_MERGE]: {\n    message: (key: string) =>\n      `Detected conflicting key \"${key}\" when merging data option values. ` +\n      `In Vue 3, data keys are merged shallowly and will override one another.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/data-option.html#mixin-merge-behavior-change`\n  },\n\n  [DeprecationTypes.OPTIONS_BEFORE_DESTROY]: {\n    message: `\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`\n  },\n\n  [DeprecationTypes.OPTIONS_DESTROYED]: {\n    message: `\\`destroyed\\` has been renamed to \\`unmounted\\`.`\n  },\n\n  [DeprecationTypes.WATCH_ARRAY]: {\n    message:\n      `\"watch\" option or vm.$watch on an array value will no longer ` +\n      `trigger on array mutation unless the \"deep\" option is specified. ` +\n      `If current usage is intended, you can disable the compat behavior and ` +\n      `suppress this warning with:` +\n      `\\n\\n  configureCompat({ ${DeprecationTypes.WATCH_ARRAY}: false })\\n`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/watch.html`\n  },\n\n  [DeprecationTypes.PROPS_DEFAULT_THIS]: {\n    message: (key: string) =>\n      `props default value function no longer has access to \"this\". The compat ` +\n      `build only offers access to this.$options.` +\n      `(found in prop \"${key}\")`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/props-default-this.html`\n  },\n\n  [DeprecationTypes.CUSTOM_DIR]: {\n    message: (legacyHook: string, newHook: string) =>\n      `Custom directive hook \"${legacyHook}\" has been removed. ` +\n      `Use \"${newHook}\" instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-directives.html`\n  },\n\n  [DeprecationTypes.V_ON_KEYCODE_MODIFIER]: {\n    message:\n      `Using keyCode as v-on modifier is no longer supported. ` +\n      `Use kebab-case key name modifiers instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/keycode-modifiers.html`\n  },\n\n  [DeprecationTypes.ATTR_FALSE_VALUE]: {\n    message: (name: string) =>\n      `Attribute \"${name}\" with v-bind value \\`false\\` will render ` +\n      `${name}=\"false\" instead of removing it in Vue 3. To remove the attribute, ` +\n      `use \\`null\\` or \\`undefined\\` instead. If the usage is intended, ` +\n      `you can disable the compat behavior and suppress this warning with:` +\n      `\\n\\n  configureCompat({ ${DeprecationTypes.ATTR_FALSE_VALUE}: false })\\n`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html`\n  },\n\n  [DeprecationTypes.ATTR_ENUMERATED_COERCION]: {\n    message: (name: string, value: any, coerced: string) =>\n      `Enumerated attribute \"${name}\" with v-bind value \\`${value}\\` will ` +\n      `${\n        value === null ? `be removed` : `render the value as-is`\n      } instead of coercing the value to \"${coerced}\" in Vue 3. ` +\n      `Always use explicit \"true\" or \"false\" values for enumerated attributes. ` +\n      `If the usage is intended, ` +\n      `you can disable the compat behavior and suppress this warning with:` +\n      `\\n\\n  configureCompat({ ${DeprecationTypes.ATTR_ENUMERATED_COERCION}: false })\\n`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html`\n  },\n\n  [DeprecationTypes.TRANSITION_CLASSES]: {\n    message: `` // this feature cannot be runtime-detected\n  },\n\n  [DeprecationTypes.TRANSITION_GROUP_ROOT]: {\n    message:\n      `<TransitionGroup> no longer renders a root <span> element by ` +\n      `default if no \"tag\" prop is specified. If you do not rely on the span ` +\n      `for styling, you can disable the compat behavior and suppress this ` +\n      `warning with:` +\n      `\\n\\n  configureCompat({ ${DeprecationTypes.TRANSITION_GROUP_ROOT}: false })\\n`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/transition-group.html`\n  },\n\n  [DeprecationTypes.COMPONENT_ASYNC]: {\n    message: (comp: any) => {\n      const name = getComponentName(comp)\n      return (\n        `Async component${\n          name ? ` <${name}>` : `s`\n        } should be explicitly created via \\`defineAsyncComponent()\\` ` +\n        `in Vue 3. Plain functions will be treated as functional components in ` +\n        `non-compat build. If you have already migrated all async component ` +\n        `usage and intend to use plain functions for functional components, ` +\n        `you can disable the compat behavior and suppress this ` +\n        `warning with:` +\n        `\\n\\n  configureCompat({ ${DeprecationTypes.COMPONENT_ASYNC}: false })\\n`\n      )\n    },\n    link: `https://v3-migration.vuejs.org/breaking-changes/async-components.html`\n  },\n\n  [DeprecationTypes.COMPONENT_FUNCTIONAL]: {\n    message: (comp: any) => {\n      const name = getComponentName(comp)\n      return (\n        `Functional component${\n          name ? ` <${name}>` : `s`\n        } should be defined as a plain function in Vue 3. The \"functional\" ` +\n        `option has been removed. NOTE: Before migrating to use plain ` +\n        `functions for functional components, first make sure that all async ` +\n        `components usage have been migrated and its compat behavior has ` +\n        `been disabled.`\n      )\n    },\n    link: `https://v3-migration.vuejs.org/breaking-changes/functional-components.html`\n  },\n\n  [DeprecationTypes.COMPONENT_V_MODEL]: {\n    message: (comp: ComponentOptions) => {\n      const configMsg =\n        `opt-in to ` +\n        `Vue 3 behavior on a per-component basis with \\`compatConfig: { ${DeprecationTypes.COMPONENT_V_MODEL}: false }\\`.`\n      if (\n        comp.props &&\n        (isArray(comp.props)\n          ? comp.props.includes('modelValue')\n          : hasOwn(comp.props, 'modelValue'))\n      ) {\n        return (\n          `Component declares \"modelValue\" prop, which is Vue 3 usage, but ` +\n          `is running under Vue 2 compat v-model behavior. You can ${configMsg}`\n        )\n      }\n      return (\n        `v-model usage on component has changed in Vue 3. Component that expects ` +\n        `to work with v-model should now use the \"modelValue\" prop and emit the ` +\n        `\"update:modelValue\" event. You can update the usage and then ${configMsg}`\n      )\n    },\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n\n  [DeprecationTypes.RENDER_FUNCTION]: {\n    message:\n      `Vue 3's render function API has changed. ` +\n      `You can opt-in to the new API with:` +\n      `\\n\\n  configureCompat({ ${DeprecationTypes.RENDER_FUNCTION}: false })\\n` +\n      `\\n  (This can also be done per-component via the \"compatConfig\" option.)`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/render-function-api.html`\n  },\n\n  [DeprecationTypes.FILTERS]: {\n    message:\n      `filters have been removed in Vue 3. ` +\n      `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\n      `Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  },\n\n  [DeprecationTypes.PRIVATE_APIS]: {\n    message: name =>\n      `\"${name}\" is a Vue 2 private API that no longer exists in Vue 3. ` +\n      `If you are seeing this warning only due to a dependency, you can ` +\n      `suppress this warning via { PRIVATE_APIS: 'suppress-warning' }.`\n  }\n}\n\nconst instanceWarned: Record<string, true> = Object.create(null)\nconst warnCount: Record<string, number> = Object.create(null)\n\n// test only\nlet warningEnabled = true\n\nexport function toggleDeprecationWarning(flag: boolean) {\n  warningEnabled = flag\n}\n\nexport function warnDeprecation(\n  key: DeprecationTypes,\n  instance: ComponentInternalInstance | null,\n  ...args: any[]\n) {\n  if (!__DEV__) {\n    return\n  }\n  if (__TEST__ && !warningEnabled) {\n    return\n  }\n\n  instance = instance || getCurrentInstance()\n\n  // check user config\n  const config = getCompatConfigForKey(key, instance)\n  if (config === 'suppress-warning') {\n    return\n  }\n\n  const dupKey = key + args.join('')\n  let compId: string | number | null =\n    instance && formatComponentName(instance, instance.type)\n  if (compId === 'Anonymous' && instance) {\n    compId = instance.uid\n  }\n\n  // skip if the same warning is emitted for the same component type\n  const componentDupKey = dupKey + compId\n  if (!__TEST__ && componentDupKey in instanceWarned) {\n    return\n  }\n  instanceWarned[componentDupKey] = true\n\n  // same warning, but different component. skip the long message and just\n  // log the key and count.\n  if (!__TEST__ && dupKey in warnCount) {\n    warn(`(deprecation ${key}) (${++warnCount[dupKey] + 1})`)\n    return\n  }\n\n  warnCount[dupKey] = 0\n\n  const { message, link } = deprecationData[key]\n  warn(\n    `(deprecation ${key}) ${\n      typeof message === 'function' ? message(...args) : message\n    }${link ? `\\n  Details: ${link}` : ``}`\n  )\n  if (!isCompatEnabled(key, instance, true)) {\n    console.error(\n      `^ The above deprecation's compat behavior is disabled and will likely ` +\n        `lead to runtime errors.`\n    )\n  }\n}\n\nexport type CompatConfig = Partial<\n  Record<DeprecationTypes, boolean | 'suppress-warning'>\n> & {\n  MODE?: 2 | 3 | ((comp: Component | null) => 2 | 3)\n}\n\nexport const globalCompatConfig: CompatConfig = {\n  MODE: 2\n}\n\nexport function configureCompat(config: CompatConfig) {\n  if (__DEV__) {\n    validateCompatConfig(config)\n  }\n  extend(globalCompatConfig, config)\n}\n\nconst seenConfigObjects = /*#__PURE__*/ new WeakSet<CompatConfig>()\nconst warnedInvalidKeys: Record<string, boolean> = {}\n\n// dev only\nexport function validateCompatConfig(\n  config: CompatConfig,\n  instance?: ComponentInternalInstance\n) {\n  if (seenConfigObjects.has(config)) {\n    return\n  }\n  seenConfigObjects.add(config)\n\n  for (const key of Object.keys(config)) {\n    if (\n      key !== 'MODE' &&\n      !(key in deprecationData) &&\n      !(key in warnedInvalidKeys)\n    ) {\n      if (key.startsWith('COMPILER_')) {\n        if (isRuntimeOnly()) {\n          warn(\n            `Deprecation config \"${key}\" is compiler-specific and you are ` +\n              `running a runtime-only build of Vue. This deprecation should be ` +\n              `configured via compiler options in your build setup instead.\\n` +\n              `Details: https://v3-migration.vuejs.org/breaking-changes/migration-build.html`\n          )\n        }\n      } else {\n        warn(`Invalid deprecation config \"${key}\".`)\n      }\n      warnedInvalidKeys[key] = true\n    }\n  }\n\n  if (instance && config[DeprecationTypes.OPTIONS_DATA_MERGE] != null) {\n    warn(\n      `Deprecation config \"${DeprecationTypes.OPTIONS_DATA_MERGE}\" can only be configured globally.`\n    )\n  }\n}\n\nexport function getCompatConfigForKey(\n  key: DeprecationTypes | 'MODE',\n  instance: ComponentInternalInstance | null\n) {\n  const instanceConfig =\n    instance && (instance.type as ComponentOptions).compatConfig\n  if (instanceConfig && key in instanceConfig) {\n    return instanceConfig[key]\n  }\n  return globalCompatConfig[key]\n}\n\nexport function isCompatEnabled(\n  key: DeprecationTypes,\n  instance: ComponentInternalInstance | null,\n  enableForBuiltIn = false\n): boolean {\n  // skip compat for built-in components\n  if (!enableForBuiltIn && instance && instance.type.__isBuiltIn) {\n    return false\n  }\n\n  const rawMode = getCompatConfigForKey('MODE', instance) || 2\n  const val = getCompatConfigForKey(key, instance)\n\n  const mode = isFunction(rawMode)\n    ? rawMode(instance && instance.type)\n    : rawMode\n\n  if (mode === 2) {\n    return val !== false\n  } else {\n    return val === true || val === 'suppress-warning'\n  }\n}\n\n/**\n * Use this for features that are completely removed in non-compat build.\n */\nexport function assertCompatEnabled(\n  key: DeprecationTypes,\n  instance: ComponentInternalInstance | null,\n  ...args: any[]\n) {\n  if (!isCompatEnabled(key, instance)) {\n    throw new Error(`${key} compat has been disabled.`)\n  } else if (__DEV__) {\n    warnDeprecation(key, instance, ...args)\n  }\n}\n\n/**\n * Use this for features where legacy usage is still possible, but will likely\n * lead to runtime error if compat is disabled. (warn in all cases)\n */\nexport function softAssertCompatEnabled(\n  key: DeprecationTypes,\n  instance: ComponentInternalInstance | null,\n  ...args: any[]\n) {\n  if (__DEV__) {\n    warnDeprecation(key, instance, ...args)\n  }\n  return isCompatEnabled(key, instance)\n}\n\n/**\n * Use this for features with the same syntax but with mutually exclusive\n * behavior in 2 vs 3. Only warn if compat is enabled.\n * e.g. render function\n */\nexport function checkCompatEnabled(\n  key: DeprecationTypes,\n  instance: ComponentInternalInstance | null,\n  ...args: any[]\n) {\n  const enabled = isCompatEnabled(key, instance)\n  if (__DEV__ && enabled) {\n    warnDeprecation(key, instance, ...args)\n  }\n  return enabled\n}\n\n// run tests in v3 mode by default\nif (__TEST__) {\n  configureCompat({\n    MODE: 3\n  })\n}\n", "import {\n  camelize,\n  EMPTY_OBJ,\n  toHandlerKey,\n  extend,\n  hasOwn,\n  hyphenate,\n  isArray,\n  isFunction,\n  isObject,\n  isString,\n  isOn,\n  UnionToIntersection,\n  looseToNumber\n} from '@vue/shared'\nimport {\n  ComponentInternalInstance,\n  ComponentOptions,\n  ConcreteComponent,\n  formatComponentName\n} from './component'\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\nimport { warn } from './warning'\nimport { devtoolsComponentEmit } from './devtools'\nimport { AppContext } from './apiCreateApp'\nimport { emit as compatInstanceEmit } from './compat/instanceEventEmitter'\nimport {\n  compatModelEventPrefix,\n  compatModelEmit\n} from './compat/componentVModel'\n\nexport type ObjectEmitsOptions = Record<\n  string,\n  ((...args: any[]) => any) | null\n>\n\nexport type EmitsOptions = ObjectEmitsOptions | string[]\n\nexport type EmitsToProps<T extends EmitsOptions> = T extends string[]\n  ? {\n      [K in string & `on${Capitalize<T[number]>}`]?: (...args: any[]) => any\n    }\n  : T extends ObjectEmitsOptions\n  ? {\n      [K in string &\n        `on${Capitalize<string & keyof T>}`]?: K extends `on${infer C}`\n        ? T[Uncapitalize<C>] extends null\n          ? (...args: any[]) => any\n          : (\n              ...args: T[Uncapitalize<C>] extends (...args: infer P) => any\n                ? P\n                : never\n            ) => any\n        : never\n    }\n  : {}\n\nexport type EmitFn<\n  Options = ObjectEmitsOptions,\n  Event extends keyof Options = keyof Options\n> = Options extends Array<infer V>\n  ? (event: V, ...args: any[]) => void\n  : {} extends Options // if the emit is empty object (usually the default value for emit) should be converted to function\n  ? (event: string, ...args: any[]) => void\n  : UnionToIntersection<\n      {\n        [key in Event]: Options[key] extends (...args: infer Args) => any\n          ? (event: key, ...args: Args) => void\n          : (event: key, ...args: any[]) => void\n      }[Event]\n    >\n\nexport function emit(\n  instance: ComponentInternalInstance,\n  event: string,\n  ...rawArgs: any[]\n) {\n  if (instance.isUnmounted) return\n  const props = instance.vnode.props || EMPTY_OBJ\n\n  if (__DEV__) {\n    const {\n      emitsOptions,\n      propsOptions: [propsOptions]\n    } = instance\n    if (emitsOptions) {\n      if (\n        !(event in emitsOptions) &&\n        !(\n          __COMPAT__ &&\n          (event.startsWith('hook:') ||\n            event.startsWith(compatModelEventPrefix))\n        )\n      ) {\n        if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\n          warn(\n            `Component emitted event \"${event}\" but it is neither declared in ` +\n              `the emits option nor as an \"${toHandlerKey(event)}\" prop.`\n          )\n        }\n      } else {\n        const validator = emitsOptions[event]\n        if (isFunction(validator)) {\n          const isValid = validator(...rawArgs)\n          if (!isValid) {\n            warn(\n              `Invalid event arguments: event validation failed for event \"${event}\".`\n            )\n          }\n        }\n      }\n    }\n  }\n\n  let args = rawArgs\n  const isModelListener = event.startsWith('update:')\n\n  // for v-model update:xxx events, apply modifiers on args\n  const modelArg = isModelListener && event.slice(7)\n  if (modelArg && modelArg in props) {\n    const modifiersKey = `${\n      modelArg === 'modelValue' ? 'model' : modelArg\n    }Modifiers`\n    const { number, trim } = props[modifiersKey] || EMPTY_OBJ\n    if (trim) {\n      args = rawArgs.map(a => (isString(a) ? a.trim() : a))\n    }\n    if (number) {\n      args = rawArgs.map(looseToNumber)\n    }\n  }\n\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n    devtoolsComponentEmit(instance, event, args)\n  }\n\n  if (__DEV__) {\n    const lowerCaseEvent = event.toLowerCase()\n    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\n      warn(\n        `Event \"${lowerCaseEvent}\" is emitted in component ` +\n          `${formatComponentName(\n            instance,\n            instance.type\n          )} but the handler is registered for \"${event}\". ` +\n          `Note that HTML attributes are case-insensitive and you cannot use ` +\n          `v-on to listen to camelCase events when using in-DOM templates. ` +\n          `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`\n      )\n    }\n  }\n\n  let handlerName\n  let handler =\n    props[(handlerName = toHandlerKey(event))] ||\n    // also try camelCase event handler (#2249)\n    props[(handlerName = toHandlerKey(camelize(event)))]\n  // for v-model update:xxx events, also trigger kebab-case equivalent\n  // for props passed via kebab-case\n  if (!handler && isModelListener) {\n    handler = props[(handlerName = toHandlerKey(hyphenate(event)))]\n  }\n\n  if (handler) {\n    callWithAsyncErrorHandling(\n      handler,\n      instance,\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\n      args\n    )\n  }\n\n  const onceHandler = props[handlerName + `Once`]\n  if (onceHandler) {\n    if (!instance.emitted) {\n      instance.emitted = {}\n    } else if (instance.emitted[handlerName]) {\n      return\n    }\n    instance.emitted[handlerName] = true\n    callWithAsyncErrorHandling(\n      onceHandler,\n      instance,\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\n      args\n    )\n  }\n\n  if (__COMPAT__) {\n    compatModelEmit(instance, event, args)\n    return compatInstanceEmit(instance, event, args)\n  }\n}\n\nexport function normalizeEmitsOptions(\n  comp: ConcreteComponent,\n  appContext: AppContext,\n  asMixin = false\n): ObjectEmitsOptions | null {\n  const cache = appContext.emitsCache\n  const cached = cache.get(comp)\n  if (cached !== undefined) {\n    return cached\n  }\n\n  const raw = comp.emits\n  let normalized: ObjectEmitsOptions = {}\n\n  // apply mixin/extends props\n  let hasExtends = false\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendEmits = (raw: ComponentOptions) => {\n      const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true)\n      if (normalizedFromExtend) {\n        hasExtends = true\n        extend(normalized, normalizedFromExtend)\n      }\n    }\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendEmits)\n    }\n    if (comp.extends) {\n      extendEmits(comp.extends)\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendEmits)\n    }\n  }\n\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, null)\n    }\n    return null\n  }\n\n  if (isArray(raw)) {\n    raw.forEach(key => (normalized[key] = null))\n  } else {\n    extend(normalized, raw)\n  }\n\n  if (isObject(comp)) {\n    cache.set(comp, normalized)\n  }\n  return normalized\n}\n\n// Check if an incoming prop key is a declared emit event listener.\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\n// both considered matched listeners.\nexport function isEmitListener(\n  options: ObjectEmitsOptions | null,\n  key: string\n): boolean {\n  if (!options || !isOn(key)) {\n    return false\n  }\n\n  if (__COMPAT__ && key.startsWith(compatModelEventPrefix)) {\n    return true\n  }\n\n  key = key.slice(2).replace(/Once$/, '')\n  return (\n    hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\n    hasOwn(options, hyphenate(key)) ||\n    hasOwn(options, key)\n  )\n}\n", "import { ComponentInternalInstance } from './component'\nimport { devtoolsComponentUpdated } from './devtools'\nimport { setBlockTracking } from './vnode'\n\n/**\n * mark the current rendering instance for asset resolution (e.g.\n * resolveComponent, resolveDirective) during render\n */\nexport let currentRenderingInstance: ComponentInternalInstance | null = null\nexport let currentScopeId: string | null = null\n\n/**\n * Note: rendering calls maybe nested. The function returns the parent rendering\n * instance if present, which should be restored after the render is done:\n *\n * ```js\n * const prev = setCurrentRenderingInstance(i)\n * // ...render\n * setCurrentRenderingInstance(prev)\n * ```\n */\nexport function setCurrentRenderingInstance(\n  instance: ComponentInternalInstance | null\n): ComponentInternalInstance | null {\n  const prev = currentRenderingInstance\n  currentRenderingInstance = instance\n  currentScopeId = (instance && instance.type.__scopeId) || null\n  // v2 pre-compiled components uses _scopeId instead of __scopeId\n  if (__COMPAT__ && !currentScopeId) {\n    currentScopeId = (instance && (instance.type as any)._scopeId) || null\n  }\n  return prev\n}\n\n/**\n * Set scope id when creating hoisted vnodes.\n * @private compiler helper\n */\nexport function pushScopeId(id: string | null) {\n  currentScopeId = id\n}\n\n/**\n * Technically we no longer need this after 3.0.8 but we need to keep the same\n * API for backwards compat w/ code generated by compilers.\n * @private\n */\nexport function popScopeId() {\n  currentScopeId = null\n}\n\n/**\n * Only for backwards compat\n * @private\n */\nexport const withScopeId = (_id: string) => withCtx\n\nexport type ContextualRenderFn = {\n  (...args: any[]): any\n  _n: boolean /* already normalized */\n  _c: boolean /* compiled */\n  _d: boolean /* disableTracking */\n  _ns: boolean /* nonScoped */\n}\n\n/**\n * Wrap a slot function to memoize current rendering instance\n * @private compiler helper\n */\nexport function withCtx(\n  fn: Function,\n  ctx: ComponentInternalInstance | null = currentRenderingInstance,\n  isNonScopedSlot?: boolean // __COMPAT__ only\n) {\n  if (!ctx) return fn\n\n  // already normalized\n  if ((fn as ContextualRenderFn)._n) {\n    return fn\n  }\n\n  const renderFnWithContext: ContextualRenderFn = (...args: any[]) => {\n    // If a user calls a compiled slot inside a template expression (#1745), it\n    // can mess up block tracking, so by default we disable block tracking and\n    // force bail out when invoking a compiled slot (indicated by the ._d flag).\n    // This isn't necessary if rendering a compiled `<slot>`, so we flip the\n    // ._d flag off when invoking the wrapped fn inside `renderSlot`.\n    if (renderFnWithContext._d) {\n      setBlockTracking(-1)\n    }\n    const prevInstance = setCurrentRenderingInstance(ctx)\n    let res\n    try {\n      res = fn(...args)\n    } finally {\n      setCurrentRenderingInstance(prevInstance)\n      if (renderFnWithContext._d) {\n        setBlockTracking(1)\n      }\n    }\n\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n      devtoolsComponentUpdated(ctx)\n    }\n\n    return res\n  }\n\n  // mark normalized to avoid duplicated wrapping\n  renderFnWithContext._n = true\n  // mark this as compiled by default\n  // this is used in vnode.ts -> normalizeChildren() to set the slot\n  // rendering flag.\n  renderFnWithContext._c = true\n  // disable block tracking by default\n  renderFnWithContext._d = true\n  // compat build only flag to distinguish scoped slots from non-scoped ones\n  if (__COMPAT__ && isNonScopedSlot) {\n    renderFnWithContext._ns = true\n  }\n  return renderFnWithContext\n}\n", "import {\n  ComponentInternalInstance,\n  FunctionalComponent,\n  Data,\n  getComponentName\n} from './component'\nimport {\n  VNode,\n  normalizeVNode,\n  createVNode,\n  Comment,\n  cloneVNode,\n  VNodeArrayChildren,\n  isVNode,\n  blockStack\n} from './vnode'\nimport { handleError, ErrorCodes } from './errorHandling'\nimport { PatchFlags, ShapeFlags, isOn, isModelListener } from '@vue/shared'\nimport { warn } from './warning'\nimport { isHmrUpdating } from './hmr'\nimport { NormalizedProps } from './componentProps'\nimport { isEmitListener } from './componentEmits'\nimport { setCurrentRenderingInstance } from './componentRenderContext'\nimport {\n  DeprecationTypes,\n  isCompatEnabled,\n  warnDeprecation\n} from './compat/compatConfig'\n\n/**\n * dev only flag to track whether $attrs was used during render.\n * If $attrs was used during render then the warning for failed attrs\n * fallthrough can be suppressed.\n */\nlet accessedAttrs: boolean = false\n\nexport function markAttrsAccessed() {\n  accessedAttrs = true\n}\n\ntype SetRootFn = ((root: VNode) => void) | undefined\n\nexport function renderComponentRoot(\n  instance: ComponentInternalInstance\n): VNode {\n  const {\n    type: Component,\n    vnode,\n    proxy,\n    withProxy,\n    props,\n    propsOptions: [propsOptions],\n    slots,\n    attrs,\n    emit,\n    render,\n    renderCache,\n    data,\n    setupState,\n    ctx,\n    inheritAttrs\n  } = instance\n\n  let result\n  let fallthroughAttrs\n  const prev = setCurrentRenderingInstance(instance)\n  if (__DEV__) {\n    accessedAttrs = false\n  }\n\n  try {\n    if (vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n      // withProxy is a proxy with a different `has` trap only for\n      // runtime-compiled render functions using `with` block.\n      const proxyToUse = withProxy || proxy\n      result = normalizeVNode(\n        render!.call(\n          proxyToUse,\n          proxyToUse!,\n          renderCache,\n          props,\n          setupState,\n          data,\n          ctx\n        )\n      )\n      fallthroughAttrs = attrs\n    } else {\n      // functional\n      const render = Component as FunctionalComponent\n      // in dev, mark attrs accessed if optional props (attrs === props)\n      if (__DEV__ && attrs === props) {\n        markAttrsAccessed()\n      }\n      result = normalizeVNode(\n        render.length > 1\n          ? render(\n              props,\n              __DEV__\n                ? {\n                    get attrs() {\n                      markAttrsAccessed()\n                      return attrs\n                    },\n                    slots,\n                    emit\n                  }\n                : { attrs, slots, emit }\n            )\n          : render(props, null as any /* we know it doesn't need it */)\n      )\n      fallthroughAttrs = Component.props\n        ? attrs\n        : getFunctionalFallthrough(attrs)\n    }\n  } catch (err) {\n    blockStack.length = 0\n    handleError(err, instance, ErrorCodes.RENDER_FUNCTION)\n    result = createVNode(Comment)\n  }\n\n  // attr merging\n  // in dev mode, comments are preserved, and it's possible for a template\n  // to have comments along side the root element which makes it a fragment\n  let root = result\n  let setRoot: SetRootFn = undefined\n  if (\n    __DEV__ &&\n    result.patchFlag > 0 &&\n    result.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\n  ) {\n    ;[root, setRoot] = getChildRoot(result)\n  }\n\n  if (fallthroughAttrs && inheritAttrs !== false) {\n    const keys = Object.keys(fallthroughAttrs)\n    const { shapeFlag } = root\n    if (keys.length) {\n      if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)) {\n        if (propsOptions && keys.some(isModelListener)) {\n          // If a v-model listener (onUpdate:xxx) has a corresponding declared\n          // prop, it indicates this component expects to handle v-model and\n          // it should not fallthrough.\n          // related: #1543, #1643, #1989\n          fallthroughAttrs = filterModelListeners(\n            fallthroughAttrs,\n            propsOptions\n          )\n        }\n        root = cloneVNode(root, fallthroughAttrs)\n      } else if (__DEV__ && !accessedAttrs && root.type !== Comment) {\n        const allAttrs = Object.keys(attrs)\n        const eventAttrs: string[] = []\n        const extraAttrs: string[] = []\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\n          const key = allAttrs[i]\n          if (isOn(key)) {\n            // ignore v-model handlers when they fail to fallthrough\n            if (!isModelListener(key)) {\n              // remove `on`, lowercase first letter to reflect event casing\n              // accurately\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3))\n            }\n          } else {\n            extraAttrs.push(key)\n          }\n        }\n        if (extraAttrs.length) {\n          warn(\n            `Extraneous non-props attributes (` +\n              `${extraAttrs.join(', ')}) ` +\n              `were passed to component but could not be automatically inherited ` +\n              `because component renders fragment or text root nodes.`\n          )\n        }\n        if (eventAttrs.length) {\n          warn(\n            `Extraneous non-emits event listeners (` +\n              `${eventAttrs.join(', ')}) ` +\n              `were passed to component but could not be automatically inherited ` +\n              `because component renders fragment or text root nodes. ` +\n              `If the listener is intended to be a component custom event listener only, ` +\n              `declare it using the \"emits\" option.`\n          )\n        }\n      }\n    }\n  }\n\n  if (\n    __COMPAT__ &&\n    isCompatEnabled(DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE, instance) &&\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT &&\n    root.shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)\n  ) {\n    const { class: cls, style } = vnode.props || {}\n    if (cls || style) {\n      if (__DEV__ && inheritAttrs === false) {\n        warnDeprecation(\n          DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE,\n          instance,\n          getComponentName(instance.type)\n        )\n      }\n      root = cloneVNode(root, {\n        class: cls,\n        style: style\n      })\n    }\n  }\n\n  // inherit directives\n  if (vnode.dirs) {\n    if (__DEV__ && !isElementRoot(root)) {\n      warn(\n        `Runtime directive used on component with non-element root node. ` +\n          `The directives will not function as intended.`\n      )\n    }\n    // clone before mutating since the root may be a hoisted vnode\n    root = cloneVNode(root)\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs\n  }\n  // inherit transition data\n  if (vnode.transition) {\n    if (__DEV__ && !isElementRoot(root)) {\n      warn(\n        `Component inside <Transition> renders non-element root node ` +\n          `that cannot be animated.`\n      )\n    }\n    root.transition = vnode.transition\n  }\n\n  if (__DEV__ && setRoot) {\n    setRoot(root)\n  } else {\n    result = root\n  }\n\n  setCurrentRenderingInstance(prev)\n  return result\n}\n\n/**\n * dev only\n * In dev mode, template root level comments are rendered, which turns the\n * template into a fragment root, but we need to locate the single element\n * root for attrs and scope id processing.\n */\nconst getChildRoot = (vnode: VNode): [VNode, SetRootFn] => {\n  const rawChildren = vnode.children as VNodeArrayChildren\n  const dynamicChildren = vnode.dynamicChildren\n  const childRoot = filterSingleRoot(rawChildren)\n  if (!childRoot) {\n    return [vnode, undefined]\n  }\n  const index = rawChildren.indexOf(childRoot)\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1\n  const setRoot: SetRootFn = (updatedRoot: VNode) => {\n    rawChildren[index] = updatedRoot\n    if (dynamicChildren) {\n      if (dynamicIndex > -1) {\n        dynamicChildren[dynamicIndex] = updatedRoot\n      } else if (updatedRoot.patchFlag > 0) {\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot]\n      }\n    }\n  }\n  return [normalizeVNode(childRoot), setRoot]\n}\n\nexport function filterSingleRoot(\n  children: VNodeArrayChildren\n): VNode | undefined {\n  let singleRoot\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i]\n    if (isVNode(child)) {\n      // ignore user comment\n      if (child.type !== Comment || child.children === 'v-if') {\n        if (singleRoot) {\n          // has more than 1 non-comment child, return now\n          return\n        } else {\n          singleRoot = child\n        }\n      }\n    } else {\n      return\n    }\n  }\n  return singleRoot\n}\n\nconst getFunctionalFallthrough = (attrs: Data): Data | undefined => {\n  let res: Data | undefined\n  for (const key in attrs) {\n    if (key === 'class' || key === 'style' || isOn(key)) {\n      ;(res || (res = {}))[key] = attrs[key]\n    }\n  }\n  return res\n}\n\nconst filterModelListeners = (attrs: Data, props: NormalizedProps): Data => {\n  const res: Data = {}\n  for (const key in attrs) {\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\n      res[key] = attrs[key]\n    }\n  }\n  return res\n}\n\nconst isElementRoot = (vnode: VNode) => {\n  return (\n    vnode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.ELEMENT) ||\n    vnode.type === Comment // potential v-if branch switch\n  )\n}\n\nexport function shouldUpdateComponent(\n  prevVNode: VNode,\n  nextVNode: VNode,\n  optimized?: boolean\n): boolean {\n  const { props: prevProps, children: prevChildren, component } = prevVNode\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode\n  const emits = component!.emitsOptions\n\n  // Parent component's render function was hot-updated. Since this may have\n  // caused the child component's slots content to have changed, we need to\n  // force the child to update as well.\n  if (__DEV__ && (prevChildren || nextChildren) && isHmrUpdating) {\n    return true\n  }\n\n  // force child update for runtime directive or transition on component vnode.\n  if (nextVNode.dirs || nextVNode.transition) {\n    return true\n  }\n\n  if (optimized && patchFlag >= 0) {\n    if (patchFlag & PatchFlags.DYNAMIC_SLOTS) {\n      // slot content that references values that might have changed,\n      // e.g. in a v-for\n      return true\n    }\n    if (patchFlag & PatchFlags.FULL_PROPS) {\n      if (!prevProps) {\n        return !!nextProps\n      }\n      // presence of this flag indicates props are always non-null\n      return hasPropsChanged(prevProps, nextProps!, emits)\n    } else if (patchFlag & PatchFlags.PROPS) {\n      const dynamicProps = nextVNode.dynamicProps!\n      for (let i = 0; i < dynamicProps.length; i++) {\n        const key = dynamicProps[i]\n        if (\n          nextProps![key] !== prevProps![key] &&\n          !isEmitListener(emits, key)\n        ) {\n          return true\n        }\n      }\n    }\n  } else {\n    // this path is only taken by manually written render functions\n    // so presence of any children leads to a forced update\n    if (prevChildren || nextChildren) {\n      if (!nextChildren || !(nextChildren as any).$stable) {\n        return true\n      }\n    }\n    if (prevProps === nextProps) {\n      return false\n    }\n    if (!prevProps) {\n      return !!nextProps\n    }\n    if (!nextProps) {\n      return true\n    }\n    return hasPropsChanged(prevProps, nextProps, emits)\n  }\n\n  return false\n}\n\nfunction hasPropsChanged(\n  prevProps: Data,\n  nextProps: Data,\n  emitsOptions: ComponentInternalInstance['emitsOptions']\n): boolean {\n  const nextKeys = Object.keys(nextProps)\n  if (nextKeys.length !== Object.keys(prevProps).length) {\n    return true\n  }\n  for (let i = 0; i < nextKeys.length; i++) {\n    const key = nextKeys[i]\n    if (\n      nextProps[key] !== prevProps[key] &&\n      !isEmitListener(emitsOptions, key)\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function updateHOCHostEl(\n  { vnode, parent }: ComponentInternalInstance,\n  el: typeof vnode.el // HostNode\n) {\n  while (parent && parent.subTree === vnode) {\n    ;(vnode = parent.vnode).el = el\n    parent = parent.parent\n  }\n}\n", "import {\n  isRef,\n  isShallow,\n  Ref,\n  ComputedRef,\n  ReactiveEffect,\n  isReactive,\n  ReactiveFlags,\n  EffectScheduler,\n  DebuggerOptions,\n  getCurrentScope\n} from '@vue/reactivity'\nimport { SchedulerJob, queueJob } from './scheduler'\nimport {\n  EMPTY_OBJ,\n  isObject,\n  isArray,\n  isFunction,\n  isString,\n  hasChanged,\n  NOOP,\n  remove,\n  isMap,\n  isSet,\n  isPlainObject,\n  extend\n} from '@vue/shared'\nimport {\n  currentInstance,\n  ComponentInternalInstance,\n  isInSSRComponentSetup,\n  setCurrentInstance,\n  unsetCurrentInstance\n} from './component'\nimport {\n  ErrorCodes,\n  callWithErrorHandling,\n  callWithAsyncErrorHandling\n} from './errorHandling'\nimport { queuePostRenderEffect } from './renderer'\nimport { warn } from './warning'\nimport { DeprecationTypes } from './compat/compatConfig'\nimport { checkCompatEnabled, isCompatEnabled } from './compat/compatConfig'\nimport { ObjectWatchOptionItem } from './componentOptions'\nimport { useSSRContext } from '@vue/runtime-core'\n\nexport type WatchEffect = (onCleanup: OnCleanup) => void\n\nexport type WatchSource<T = any> = Ref<T> | ComputedRef<T> | (() => T)\n\nexport type WatchCallback<V = any, OV = any> = (\n  value: V,\n  oldValue: OV,\n  onCleanup: OnCleanup\n) => any\n\ntype MapSources<T, Immediate> = {\n  [K in keyof T]: T[K] extends WatchSource<infer V>\n    ? Immediate extends true\n      ? V | undefined\n      : V\n    : T[K] extends object\n    ? Immediate extends true\n      ? T[K] | undefined\n      : T[K]\n    : never\n}\n\ntype OnCleanup = (cleanupFn: () => void) => void\n\nexport interface WatchOptionsBase extends DebuggerOptions {\n  flush?: 'pre' | 'post' | 'sync'\n}\n\nexport interface WatchOptions<Immediate = boolean> extends WatchOptionsBase {\n  immediate?: Immediate\n  deep?: boolean\n}\n\nexport type WatchStopHandle = () => void\n\n// Simple effect.\nexport function watchEffect(\n  effect: WatchEffect,\n  options?: WatchOptionsBase\n): WatchStopHandle {\n  return doWatch(effect, null, options)\n}\n\nexport function watchPostEffect(\n  effect: WatchEffect,\n  options?: DebuggerOptions\n) {\n  return doWatch(\n    effect,\n    null,\n    __DEV__ ? extend({}, options as any, { flush: 'post' }) : { flush: 'post' }\n  )\n}\n\nexport function watchSyncEffect(\n  effect: WatchEffect,\n  options?: DebuggerOptions\n) {\n  return doWatch(\n    effect,\n    null,\n    __DEV__ ? extend({}, options as any, { flush: 'sync' }) : { flush: 'sync' }\n  )\n}\n\n// initial value for watchers to trigger on undefined initial values\nconst INITIAL_WATCHER_VALUE = {}\n\ntype MultiWatchSources = (WatchSource<unknown> | object)[]\n\n// overload: array of multiple sources + cb\nexport function watch<\n  T extends MultiWatchSources,\n  Immediate extends Readonly<boolean> = false\n>(\n  sources: [...T],\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\n  options?: WatchOptions<Immediate>\n): WatchStopHandle\n\n// overload: multiple sources w/ `as const`\n// watch([foo, bar] as const, () => {})\n// somehow [...T] breaks when the type is readonly\nexport function watch<\n  T extends Readonly<MultiWatchSources>,\n  Immediate extends Readonly<boolean> = false\n>(\n  source: T,\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\n  options?: WatchOptions<Immediate>\n): WatchStopHandle\n\n// overload: single source + cb\nexport function watch<T, Immediate extends Readonly<boolean> = false>(\n  source: WatchSource<T>,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: WatchOptions<Immediate>\n): WatchStopHandle\n\n// overload: watching reactive object w/ cb\nexport function watch<\n  T extends object,\n  Immediate extends Readonly<boolean> = false\n>(\n  source: T,\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n  options?: WatchOptions<Immediate>\n): WatchStopHandle\n\n// implementation\nexport function watch<T = any, Immediate extends Readonly<boolean> = false>(\n  source: T | WatchSource<T>,\n  cb: any,\n  options?: WatchOptions<Immediate>\n): WatchStopHandle {\n  if (__DEV__ && !isFunction(cb)) {\n    warn(\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\n        `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\n        `supports \\`watch(source, cb, options?) signature.`\n    )\n  }\n  return doWatch(source as any, cb, options)\n}\n\nfunction doWatch(\n  source: WatchSource | WatchSource[] | WatchEffect | object,\n  cb: WatchCallback | null,\n  { immediate, deep, flush, onTrack, onTrigger }: WatchOptions = EMPTY_OBJ\n): WatchStopHandle {\n  if (__DEV__ && !cb) {\n    if (immediate !== undefined) {\n      warn(\n        `watch() \"immediate\" option is only respected when using the ` +\n          `watch(source, callback, options?) signature.`\n      )\n    }\n    if (deep !== undefined) {\n      warn(\n        `watch() \"deep\" option is only respected when using the ` +\n          `watch(source, callback, options?) signature.`\n      )\n    }\n  }\n\n  const warnInvalidSource = (s: unknown) => {\n    warn(\n      `Invalid watch source: `,\n      s,\n      `A watch source can only be a getter/effect function, a ref, ` +\n        `a reactive object, or an array of these types.`\n    )\n  }\n\n  const instance =\n    getCurrentScope() === currentInstance?.scope ? currentInstance : null\n  // const instance = currentInstance\n  let getter: () => any\n  let forceTrigger = false\n  let isMultiSource = false\n\n  if (isRef(source)) {\n    getter = () => source.value\n    forceTrigger = isShallow(source)\n  } else if (isReactive(source)) {\n    getter = () => source\n    deep = true\n  } else if (isArray(source)) {\n    isMultiSource = true\n    forceTrigger = source.some(s => isReactive(s) || isShallow(s))\n    getter = () =>\n      source.map(s => {\n        if (isRef(s)) {\n          return s.value\n        } else if (isReactive(s)) {\n          return traverse(s)\n        } else if (isFunction(s)) {\n          return callWithErrorHandling(s, instance, ErrorCodes.WATCH_GETTER)\n        } else {\n          __DEV__ && warnInvalidSource(s)\n        }\n      })\n  } else if (isFunction(source)) {\n    if (cb) {\n      // getter with cb\n      getter = () =>\n        callWithErrorHandling(source, instance, ErrorCodes.WATCH_GETTER)\n    } else {\n      // no cb -> simple effect\n      getter = () => {\n        if (instance && instance.isUnmounted) {\n          return\n        }\n        if (cleanup) {\n          cleanup()\n        }\n        return callWithAsyncErrorHandling(\n          source,\n          instance,\n          ErrorCodes.WATCH_CALLBACK,\n          [onCleanup]\n        )\n      }\n    }\n  } else {\n    getter = NOOP\n    __DEV__ && warnInvalidSource(source)\n  }\n\n  // 2.x array mutation watch compat\n  if (__COMPAT__ && cb && !deep) {\n    const baseGetter = getter\n    getter = () => {\n      const val = baseGetter()\n      if (\n        isArray(val) &&\n        checkCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance)\n      ) {\n        traverse(val)\n      }\n      return val\n    }\n  }\n\n  if (cb && deep) {\n    const baseGetter = getter\n    getter = () => traverse(baseGetter())\n  }\n\n  let cleanup: () => void\n  let onCleanup: OnCleanup = (fn: () => void) => {\n    cleanup = effect.onStop = () => {\n      callWithErrorHandling(fn, instance, ErrorCodes.WATCH_CLEANUP)\n    }\n  }\n\n  // in SSR there is no need to setup an actual effect, and it should be noop\n  // unless it's eager or sync flush\n  let ssrCleanup: (() => void)[] | undefined\n  if (__SSR__ && isInSSRComponentSetup) {\n    // we will also not call the invalidate callback (+ runner is not set up)\n    onCleanup = NOOP\n    if (!cb) {\n      getter()\n    } else if (immediate) {\n      callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\n        getter(),\n        isMultiSource ? [] : undefined,\n        onCleanup\n      ])\n    }\n    if (flush === 'sync') {\n      const ctx = useSSRContext()!\n      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = [])\n    } else {\n      return NOOP\n    }\n  }\n\n  let oldValue: any = isMultiSource\n    ? new Array((source as []).length).fill(INITIAL_WATCHER_VALUE)\n    : INITIAL_WATCHER_VALUE\n  const job: SchedulerJob = () => {\n    if (!effect.active) {\n      return\n    }\n    if (cb) {\n      // watch(source, cb)\n      const newValue = effect.run()\n      if (\n        deep ||\n        forceTrigger ||\n        (isMultiSource\n          ? (newValue as any[]).some((v, i) => hasChanged(v, oldValue[i]))\n          : hasChanged(newValue, oldValue)) ||\n        (__COMPAT__ &&\n          isArray(newValue) &&\n          isCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance))\n      ) {\n        // cleanup before running cb again\n        if (cleanup) {\n          cleanup()\n        }\n        callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\n          newValue,\n          // pass undefined as the old value when it's changed for the first time\n          oldValue === INITIAL_WATCHER_VALUE\n            ? undefined\n            : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE\n            ? []\n            : oldValue,\n          onCleanup\n        ])\n        oldValue = newValue\n      }\n    } else {\n      // watchEffect\n      effect.run()\n    }\n  }\n\n  // important: mark the job as a watcher callback so that scheduler knows\n  // it is allowed to self-trigger (#1727)\n  job.allowRecurse = !!cb\n\n  let scheduler: EffectScheduler\n  if (flush === 'sync') {\n    scheduler = job as any // the scheduler function gets called directly\n  } else if (flush === 'post') {\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense)\n  } else {\n    // default: 'pre'\n    job.pre = true\n    if (instance) job.id = instance.uid\n    scheduler = () => queueJob(job)\n  }\n\n  const effect = new ReactiveEffect(getter, scheduler)\n\n  if (__DEV__) {\n    effect.onTrack = onTrack\n    effect.onTrigger = onTrigger\n  }\n\n  // initial run\n  if (cb) {\n    if (immediate) {\n      job()\n    } else {\n      oldValue = effect.run()\n    }\n  } else if (flush === 'post') {\n    queuePostRenderEffect(\n      effect.run.bind(effect),\n      instance && instance.suspense\n    )\n  } else {\n    effect.run()\n  }\n\n  const unwatch = () => {\n    effect.stop()\n    if (instance && instance.scope) {\n      remove(instance.scope.effects!, effect)\n    }\n  }\n\n  if (__SSR__ && ssrCleanup) ssrCleanup.push(unwatch)\n  return unwatch\n}\n\n// this.$watch\nexport function instanceWatch(\n  this: ComponentInternalInstance,\n  source: string | Function,\n  value: WatchCallback | ObjectWatchOptionItem,\n  options?: WatchOptions\n): WatchStopHandle {\n  const publicThis = this.proxy as any\n  const getter = isString(source)\n    ? source.includes('.')\n      ? createPathGetter(publicThis, source)\n      : () => publicThis[source]\n    : source.bind(publicThis, publicThis)\n  let cb\n  if (isFunction(value)) {\n    cb = value\n  } else {\n    cb = value.handler as Function\n    options = value\n  }\n  const cur = currentInstance\n  setCurrentInstance(this)\n  const res = doWatch(getter, cb.bind(publicThis), options)\n  if (cur) {\n    setCurrentInstance(cur)\n  } else {\n    unsetCurrentInstance()\n  }\n  return res\n}\n\nexport function createPathGetter(ctx: any, path: string) {\n  const segments = path.split('.')\n  return () => {\n    let cur = ctx\n    for (let i = 0; i < segments.length && cur; i++) {\n      cur = cur[segments[i]]\n    }\n    return cur\n  }\n}\n\nexport function traverse(value: unknown, seen?: Set<unknown>) {\n  if (!isObject(value) || (value as any)[ReactiveFlags.SKIP]) {\n    return value\n  }\n  seen = seen || new Set()\n  if (seen.has(value)) {\n    return value\n  }\n  seen.add(value)\n  if (isRef(value)) {\n    traverse(value.value, seen)\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], seen)\n    }\n  } else if (isSet(value) || isMap(value)) {\n    value.forEach((v: any) => {\n      traverse(v, seen)\n    })\n  } else if (isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], seen)\n    }\n  }\n  return value\n}\n", "/**\nRuntime helper for applying directives to a vnode. Example usage:\n\nconst comp = resolveComponent('comp')\nconst foo = resolveDirective('foo')\nconst bar = resolveDirective('bar')\n\nreturn withDirectives(h(comp), [\n  [foo, this.x],\n  [bar, this.y]\n])\n*/\n\nimport { VNode } from './vnode'\nimport { isFunction, EMPTY_OBJ, isBuiltInDirective } from '@vue/shared'\nimport { warn } from './warning'\nimport { ComponentInternalInstance, Data, getExposeProxy } from './component'\nimport { currentRenderingInstance } from './componentRenderContext'\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\nimport { ComponentPublicInstance } from './componentPublicInstance'\nimport { mapCompatDirectiveHook } from './compat/customDirective'\nimport { pauseTracking, resetTracking } from '@vue/reactivity'\nimport { traverse } from './apiWatch'\n\nexport interface DirectiveBinding<V = any> {\n  instance: ComponentPublicInstance | null\n  value: V\n  oldValue: V | null\n  arg?: string\n  modifiers: DirectiveModifiers\n  dir: ObjectDirective<any, V>\n}\n\nexport type DirectiveHook<T = any, Prev = VNode<any, T> | null, V = any> = (\n  el: T,\n  binding: DirectiveBinding<V>,\n  vnode: VNode<any, T>,\n  prevVNode: Prev\n) => void\n\nexport type SSRDirectiveHook = (\n  binding: DirectiveBinding,\n  vnode: VNode\n) => Data | undefined\n\nexport interface ObjectDirective<T = any, V = any> {\n  created?: DirectiveHook<T, null, V>\n  beforeMount?: DirectiveHook<T, null, V>\n  mounted?: DirectiveHook<T, null, V>\n  beforeUpdate?: DirectiveHook<T, VNode<any, T>, V>\n  updated?: DirectiveHook<T, VNode<any, T>, V>\n  beforeUnmount?: DirectiveHook<T, null, V>\n  unmounted?: DirectiveHook<T, null, V>\n  getSSRProps?: SSRDirectiveHook\n  deep?: boolean\n}\n\nexport type FunctionDirective<T = any, V = any> = DirectiveHook<T, any, V>\n\nexport type Directive<T = any, V = any> =\n  | ObjectDirective<T, V>\n  | FunctionDirective<T, V>\n\nexport type DirectiveModifiers = Record<string, boolean>\n\nexport function validateDirectiveName(name: string) {\n  if (isBuiltInDirective(name)) {\n    warn('Do not use built-in directive ids as custom directive id: ' + name)\n  }\n}\n\n// Directive, value, argument, modifiers\nexport type DirectiveArguments = Array<\n  | [Directive | undefined]\n  | [Directive | undefined, any]\n  | [Directive | undefined, any, string]\n  | [Directive | undefined, any, string, DirectiveModifiers]\n>\n\n/**\n * Adds directives to a VNode.\n */\nexport function withDirectives<T extends VNode>(\n  vnode: T,\n  directives: DirectiveArguments\n): T {\n  const internalInstance = currentRenderingInstance\n  if (internalInstance === null) {\n    __DEV__ && warn(`withDirectives can only be used inside render functions.`)\n    return vnode\n  }\n  const instance =\n    (getExposeProxy(internalInstance) as ComponentPublicInstance) ||\n    internalInstance.proxy\n  const bindings: DirectiveBinding[] = vnode.dirs || (vnode.dirs = [])\n  for (let i = 0; i < directives.length; i++) {\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i]\n    if (dir) {\n      if (isFunction(dir)) {\n        dir = {\n          mounted: dir,\n          updated: dir\n        } as ObjectDirective\n      }\n      if (dir.deep) {\n        traverse(value)\n      }\n      bindings.push({\n        dir,\n        instance,\n        value,\n        oldValue: void 0,\n        arg,\n        modifiers\n      })\n    }\n  }\n  return vnode\n}\n\nexport function invokeDirectiveHook(\n  vnode: VNode,\n  prevVNode: VNode | null,\n  instance: ComponentInternalInstance | null,\n  name: keyof ObjectDirective\n) {\n  const bindings = vnode.dirs!\n  const oldBindings = prevVNode && prevVNode.dirs!\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i]\n    if (oldBindings) {\n      binding.oldValue = oldBindings[i].value\n    }\n    let hook = binding.dir[name] as DirectiveHook | DirectiveHook[] | undefined\n    if (__COMPAT__ && !hook) {\n      hook = mapCompatDirectiveHook(name, binding.dir, instance)\n    }\n    if (hook) {\n      // disable tracking inside all lifecycle hooks\n      // since they can potentially be called inside effects.\n      pauseTracking()\n      callWithAsyncErrorHandling(hook, instance, ErrorCodes.DIRECTIVE_HOOK, [\n        vnode.el,\n        binding,\n        vnode,\n        prevVNode\n      ])\n      resetTracking()\n    }\n  }\n}\n", "import {\n  getCurrentInstance,\n  SetupContext,\n  ComponentInternalInstance,\n  ComponentOptions\n} from '../component'\nimport {\n  cloneVNode,\n  Comment,\n  isSameVNodeType,\n  VNode,\n  VNodeArrayChildren,\n  Fragment\n} from '../vnode'\nimport { warn } from '../warning'\nimport { isKeepAlive } from './KeepAlive'\nimport { toRaw } from '@vue/reactivity'\nimport { callWithAsyncErrorHandling, ErrorCodes } from '../errorHandling'\nimport { ShapeFlags, PatchFlags, isArray } from '@vue/shared'\nimport { onBeforeUnmount, onMounted } from '../apiLifecycle'\nimport { RendererElement } from '../renderer'\n\ntype Hook<T = () => void> = T | T[]\n\nconst leaveCbKey = Symbol('_leaveCb')\nconst enterCbKey = Symbol('_enterCb')\n\nexport interface BaseTransitionProps<HostElement = RendererElement> {\n  mode?: 'in-out' | 'out-in' | 'default'\n  appear?: boolean\n\n  // If true, indicates this is a transition that doesn't actually insert/remove\n  // the element, but toggles the show / hidden status instead.\n  // The transition hooks are injected, but will be skipped by the renderer.\n  // Instead, a custom directive can control the transition by calling the\n  // injected hooks (e.g. v-show).\n  persisted?: boolean\n\n  // Hooks. Using camel case for easier usage in render functions & JSX.\n  // In templates these can be written as @before-enter=\"xxx\" as prop names\n  // are camelized.\n  onBeforeEnter?: Hook<(el: HostElement) => void>\n  onEnter?: Hook<(el: HostElement, done: () => void) => void>\n  onAfterEnter?: Hook<(el: HostElement) => void>\n  onEnterCancelled?: Hook<(el: HostElement) => void>\n  // leave\n  onBeforeLeave?: Hook<(el: HostElement) => void>\n  onLeave?: Hook<(el: HostElement, done: () => void) => void>\n  onAfterLeave?: Hook<(el: HostElement) => void>\n  onLeaveCancelled?: Hook<(el: HostElement) => void> // only fired in persisted mode\n  // appear\n  onBeforeAppear?: Hook<(el: HostElement) => void>\n  onAppear?: Hook<(el: HostElement, done: () => void) => void>\n  onAfterAppear?: Hook<(el: HostElement) => void>\n  onAppearCancelled?: Hook<(el: HostElement) => void>\n}\n\nexport interface TransitionHooks<HostElement = RendererElement> {\n  mode: BaseTransitionProps['mode']\n  persisted: boolean\n  beforeEnter(el: HostElement): void\n  enter(el: HostElement): void\n  leave(el: HostElement, remove: () => void): void\n  clone(vnode: VNode): TransitionHooks<HostElement>\n  // optional\n  afterLeave?(): void\n  delayLeave?(\n    el: HostElement,\n    earlyRemove: () => void,\n    delayedLeave: () => void\n  ): void\n  delayedLeave?(): void\n}\n\nexport type TransitionHookCaller = <T extends any[] = [el: any]>(\n  hook: Hook<(...args: T) => void> | undefined,\n  args?: T\n) => void\n\nexport type PendingCallback = (cancelled?: boolean) => void\n\nexport interface TransitionState {\n  isMounted: boolean\n  isLeaving: boolean\n  isUnmounting: boolean\n  // Track pending leave callbacks for children of the same key.\n  // This is used to force remove leaving a child when a new copy is entering.\n  leavingVNodes: Map<any, Record<string, VNode>>\n}\n\nexport interface TransitionElement {\n  // in persisted mode (e.g. v-show), the same element is toggled, so the\n  // pending enter/leave callbacks may need to be cancelled if the state is toggled\n  // before it finishes.\n  [enterCbKey]?: PendingCallback\n  [leaveCbKey]?: PendingCallback\n}\n\nexport function useTransitionState(): TransitionState {\n  const state: TransitionState = {\n    isMounted: false,\n    isLeaving: false,\n    isUnmounting: false,\n    leavingVNodes: new Map()\n  }\n  onMounted(() => {\n    state.isMounted = true\n  })\n  onBeforeUnmount(() => {\n    state.isUnmounting = true\n  })\n  return state\n}\n\nconst TransitionHookValidator = [Function, Array]\n\nexport const BaseTransitionPropsValidators = {\n  mode: String,\n  appear: Boolean,\n  persisted: Boolean,\n  // enter\n  onBeforeEnter: TransitionHookValidator,\n  onEnter: TransitionHookValidator,\n  onAfterEnter: TransitionHookValidator,\n  onEnterCancelled: TransitionHookValidator,\n  // leave\n  onBeforeLeave: TransitionHookValidator,\n  onLeave: TransitionHookValidator,\n  onAfterLeave: TransitionHookValidator,\n  onLeaveCancelled: TransitionHookValidator,\n  // appear\n  onBeforeAppear: TransitionHookValidator,\n  onAppear: TransitionHookValidator,\n  onAfterAppear: TransitionHookValidator,\n  onAppearCancelled: TransitionHookValidator\n}\n\nconst BaseTransitionImpl: ComponentOptions = {\n  name: `BaseTransition`,\n\n  props: BaseTransitionPropsValidators,\n\n  setup(props: BaseTransitionProps, { slots }: SetupContext) {\n    const instance = getCurrentInstance()!\n    const state = useTransitionState()\n\n    let prevTransitionKey: any\n\n    return () => {\n      const children =\n        slots.default && getTransitionRawChildren(slots.default(), true)\n      if (!children || !children.length) {\n        return\n      }\n\n      let child: VNode = children[0]\n      if (children.length > 1) {\n        let hasFound = false\n        // locate first non-comment child\n        for (const c of children) {\n          if (c.type !== Comment) {\n            if (__DEV__ && hasFound) {\n              // warn more than one non-comment child\n              warn(\n                '<transition> can only be used on a single element or component. ' +\n                  'Use <transition-group> for lists.'\n              )\n              break\n            }\n            child = c\n            hasFound = true\n            if (!__DEV__) break\n          }\n        }\n      }\n\n      // there's no need to track reactivity for these props so use the raw\n      // props for a bit better perf\n      const rawProps = toRaw(props)\n      const { mode } = rawProps\n      // check mode\n      if (\n        __DEV__ &&\n        mode &&\n        mode !== 'in-out' &&\n        mode !== 'out-in' &&\n        mode !== 'default'\n      ) {\n        warn(`invalid <transition> mode: ${mode}`)\n      }\n\n      if (state.isLeaving) {\n        return emptyPlaceholder(child)\n      }\n\n      // in the case of <transition><keep-alive/></transition>, we need to\n      // compare the type of the kept-alive children.\n      const innerChild = getKeepAliveChild(child)\n      if (!innerChild) {\n        return emptyPlaceholder(child)\n      }\n\n      const enterHooks = resolveTransitionHooks(\n        innerChild,\n        rawProps,\n        state,\n        instance\n      )\n      setTransitionHooks(innerChild, enterHooks)\n\n      const oldChild = instance.subTree\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild)\n\n      let transitionKeyChanged = false\n      const { getTransitionKey } = innerChild.type as any\n      if (getTransitionKey) {\n        const key = getTransitionKey()\n        if (prevTransitionKey === undefined) {\n          prevTransitionKey = key\n        } else if (key !== prevTransitionKey) {\n          prevTransitionKey = key\n          transitionKeyChanged = true\n        }\n      }\n\n      // handle mode\n      if (\n        oldInnerChild &&\n        oldInnerChild.type !== Comment &&\n        (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)\n      ) {\n        const leavingHooks = resolveTransitionHooks(\n          oldInnerChild,\n          rawProps,\n          state,\n          instance\n        )\n        // update old tree's hooks in case of dynamic transition\n        setTransitionHooks(oldInnerChild, leavingHooks)\n        // switching between different views\n        if (mode === 'out-in') {\n          state.isLeaving = true\n          // return placeholder node and queue update when leave finishes\n          leavingHooks.afterLeave = () => {\n            state.isLeaving = false\n            // #6835\n            // it also needs to be updated when active is undefined\n            if (instance.update.active !== false) {\n              instance.update()\n            }\n          }\n          return emptyPlaceholder(child)\n        } else if (mode === 'in-out' && innerChild.type !== Comment) {\n          leavingHooks.delayLeave = (\n            el: TransitionElement,\n            earlyRemove,\n            delayedLeave\n          ) => {\n            const leavingVNodesCache = getLeavingNodesForType(\n              state,\n              oldInnerChild\n            )\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild\n            // early removal callback\n            el[leaveCbKey] = () => {\n              earlyRemove()\n              el[leaveCbKey] = undefined\n              delete enterHooks.delayedLeave\n            }\n            enterHooks.delayedLeave = delayedLeave\n          }\n        }\n      }\n\n      return child\n    }\n  }\n}\n\nif (__COMPAT__) {\n  BaseTransitionImpl.__isBuiltIn = true\n}\n\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\nexport const BaseTransition = BaseTransitionImpl as unknown as {\n  new (): {\n    $props: BaseTransitionProps<any>\n    $slots: {\n      default(): VNode[]\n    }\n  }\n}\n\nfunction getLeavingNodesForType(\n  state: TransitionState,\n  vnode: VNode\n): Record<string, VNode> {\n  const { leavingVNodes } = state\n  let leavingVNodesCache = leavingVNodes.get(vnode.type)!\n  if (!leavingVNodesCache) {\n    leavingVNodesCache = Object.create(null)\n    leavingVNodes.set(vnode.type, leavingVNodesCache)\n  }\n  return leavingVNodesCache\n}\n\n// The transition hooks are attached to the vnode as vnode.transition\n// and will be called at appropriate timing in the renderer.\nexport function resolveTransitionHooks(\n  vnode: VNode,\n  props: BaseTransitionProps<any>,\n  state: TransitionState,\n  instance: ComponentInternalInstance\n): TransitionHooks {\n  const {\n    appear,\n    mode,\n    persisted = false,\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onEnterCancelled,\n    onBeforeLeave,\n    onLeave,\n    onAfterLeave,\n    onLeaveCancelled,\n    onBeforeAppear,\n    onAppear,\n    onAfterAppear,\n    onAppearCancelled\n  } = props\n  const key = String(vnode.key)\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode)\n\n  const callHook: TransitionHookCaller = (hook, args) => {\n    hook &&\n      callWithAsyncErrorHandling(\n        hook,\n        instance,\n        ErrorCodes.TRANSITION_HOOK,\n        args\n      )\n  }\n\n  const callAsyncHook = (\n    hook: Hook<(el: any, done: () => void) => void>,\n    args: [TransitionElement, () => void]\n  ) => {\n    const done = args[1]\n    callHook(hook, args)\n    if (isArray(hook)) {\n      if (hook.every(hook => hook.length <= 1)) done()\n    } else if (hook.length <= 1) {\n      done()\n    }\n  }\n\n  const hooks: TransitionHooks<TransitionElement> = {\n    mode,\n    persisted,\n    beforeEnter(el) {\n      let hook = onBeforeEnter\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onBeforeAppear || onBeforeEnter\n        } else {\n          return\n        }\n      }\n      // for same element (v-show)\n      if (el[leaveCbKey]) {\n        el[leaveCbKey](true /* cancelled */)\n      }\n      // for toggled element with same key (v-if)\n      const leavingVNode = leavingVNodesCache[key]\n      if (\n        leavingVNode &&\n        isSameVNodeType(vnode, leavingVNode) &&\n        (leavingVNode.el as TransitionElement)[leaveCbKey]\n      ) {\n        // force early removal (not cancelled)\n        ;(leavingVNode.el as TransitionElement)[leaveCbKey]!()\n      }\n      callHook(hook, [el])\n    },\n\n    enter(el) {\n      let hook = onEnter\n      let afterHook = onAfterEnter\n      let cancelHook = onEnterCancelled\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onAppear || onEnter\n          afterHook = onAfterAppear || onAfterEnter\n          cancelHook = onAppearCancelled || onEnterCancelled\n        } else {\n          return\n        }\n      }\n      let called = false\n      const done = (el[enterCbKey] = (cancelled?) => {\n        if (called) return\n        called = true\n        if (cancelled) {\n          callHook(cancelHook, [el])\n        } else {\n          callHook(afterHook, [el])\n        }\n        if (hooks.delayedLeave) {\n          hooks.delayedLeave()\n        }\n        el[enterCbKey] = undefined\n      })\n      if (hook) {\n        callAsyncHook(hook, [el, done])\n      } else {\n        done()\n      }\n    },\n\n    leave(el, remove) {\n      const key = String(vnode.key)\n      if (el[enterCbKey]) {\n        el[enterCbKey](true /* cancelled */)\n      }\n      if (state.isUnmounting) {\n        return remove()\n      }\n      callHook(onBeforeLeave, [el])\n      let called = false\n      const done = (el[leaveCbKey] = (cancelled?) => {\n        if (called) return\n        called = true\n        remove()\n        if (cancelled) {\n          callHook(onLeaveCancelled, [el])\n        } else {\n          callHook(onAfterLeave, [el])\n        }\n        el[leaveCbKey] = undefined\n        if (leavingVNodesCache[key] === vnode) {\n          delete leavingVNodesCache[key]\n        }\n      })\n      leavingVNodesCache[key] = vnode\n      if (onLeave) {\n        callAsyncHook(onLeave, [el, done])\n      } else {\n        done()\n      }\n    },\n\n    clone(vnode) {\n      return resolveTransitionHooks(vnode, props, state, instance)\n    }\n  }\n\n  return hooks\n}\n\n// the placeholder really only handles one special case: KeepAlive\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\n// placeholder with empty content to avoid the KeepAlive instance from being\n// unmounted.\nfunction emptyPlaceholder(vnode: VNode): VNode | undefined {\n  if (isKeepAlive(vnode)) {\n    vnode = cloneVNode(vnode)\n    vnode.children = null\n    return vnode\n  }\n}\n\nfunction getKeepAliveChild(vnode: VNode): VNode | undefined {\n  return isKeepAlive(vnode)\n    ? vnode.children\n      ? ((vnode.children as VNodeArrayChildren)[0] as VNode)\n      : undefined\n    : vnode\n}\n\nexport function setTransitionHooks(vnode: VNode, hooks: TransitionHooks) {\n  if (vnode.shapeFlag & ShapeFlags.COMPONENT && vnode.component) {\n    setTransitionHooks(vnode.component.subTree, hooks)\n  } else if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\n    vnode.ssContent!.transition = hooks.clone(vnode.ssContent!)\n    vnode.ssFallback!.transition = hooks.clone(vnode.ssFallback!)\n  } else {\n    vnode.transition = hooks\n  }\n}\n\nexport function getTransitionRawChildren(\n  children: VNode[],\n  keepComment: boolean = false,\n  parentKey?: VNode['key']\n): VNode[] {\n  let ret: VNode[] = []\n  let keyedFragmentCount = 0\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i]\n    // #5360 inherit parent key in case of <template v-for>\n    const key =\n      parentKey == null\n        ? child.key\n        : String(parentKey) + String(child.key != null ? child.key : i)\n    // handle fragment children case, e.g. v-for\n    if (child.type === Fragment) {\n      if (child.patchFlag & PatchFlags.KEYED_FRAGMENT) keyedFragmentCount++\n      ret = ret.concat(\n        getTransitionRawChildren(child.children as VNode[], keepComment, key)\n      )\n    }\n    // comment placeholders should be skipped, e.g. v-if\n    else if (keepComment || child.type !== Comment) {\n      ret.push(key != null ? cloneVNode(child, { key }) : child)\n    }\n  }\n  // #1126 if a transition children list contains multiple sub fragments, these\n  // fragments will be merged into a flat children array. Since each v-for\n  // fragment may contain different static bindings inside, we need to de-op\n  // these children to force full diffs to ensure correct behavior.\n  if (keyedFragmentCount > 1) {\n    for (let i = 0; i < ret.length; i++) {\n      ret[i].patchFlag = PatchFlags.BAIL\n    }\n  }\n  return ret\n}\n", "import {\n  ComputedOptions,\n  MethodOptions,\n  ComponentOptionsWithoutProps,\n  ComponentOptionsWithArrayProps,\n  ComponentOptionsWithObjectProps,\n  ComponentOptionsMixin,\n  RenderFunction,\n  ComponentOptionsBase,\n  ComponentInjectOptions,\n  ComponentOptions\n} from './componentOptions'\nimport {\n  SetupContext,\n  AllowedComponentProps,\n  ComponentCustomProps\n} from './component'\nimport {\n  ExtractPropTypes,\n  ComponentPropsOptions,\n  ExtractDefaultPropTypes,\n  ComponentObjectPropsOptions\n} from './componentProps'\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\nimport { extend, isFunction } from '@vue/shared'\nimport { VNodeProps } from './vnode'\nimport {\n  CreateComponentPublicInstance,\n  ComponentPublicInstanceConstructor\n} from './componentPublicInstance'\nimport { SlotsType } from './componentSlots'\n\nexport type PublicProps = VNodeProps &\n  AllowedComponentProps &\n  ComponentCustomProps\n\ntype ResolveProps<PropsOrPropOptions, E extends EmitsOptions> = Readonly<\n  PropsOrPropOptions extends ComponentPropsOptions\n    ? ExtractPropTypes<PropsOrPropOptions>\n    : PropsOrPropOptions\n> &\n  ({} extends E ? {} : EmitsToProps<E>)\n\nexport type DefineComponent<\n  PropsOrPropOptions = {},\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = ComputedOptions,\n  M extends MethodOptions = MethodOptions,\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = {},\n  EE extends string = string,\n  PP = PublicProps,\n  Props = ResolveProps<PropsOrPropOptions, E>,\n  Defaults = ExtractDefaultPropTypes<PropsOrPropOptions>,\n  S extends SlotsType = {}\n> = ComponentPublicInstanceConstructor<\n  CreateComponentPublicInstance<\n    Props,\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    PP & Props,\n    Defaults,\n    true,\n    {},\n    S\n  > &\n    Props\n> &\n  ComponentOptionsBase<\n    Props,\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    EE,\n    Defaults,\n    {},\n    string,\n    S\n  > &\n  PP\n\n// defineComponent is a utility that is primarily used for type inference\n// when declaring components. Type inference is provided in the component\n// options (provided as the argument). The returned value has artificial types\n// for TSX / manual render function / IDE support.\n\n// overload 1: direct setup function\n// (uses user defined props interface)\nexport function defineComponent<\n  Props extends Record<string, any>,\n  E extends EmitsOptions = {},\n  EE extends string = string,\n  S extends SlotsType = {}\n>(\n  setup: (\n    props: Props,\n    ctx: SetupContext<E, S>\n  ) => RenderFunction | Promise<RenderFunction>,\n  options?: Pick<ComponentOptions, 'name' | 'inheritAttrs'> & {\n    props?: (keyof Props)[]\n    emits?: E | EE[]\n    slots?: S\n  }\n): (props: Props & EmitsToProps<E>) => any\nexport function defineComponent<\n  Props extends Record<string, any>,\n  E extends EmitsOptions = {},\n  EE extends string = string,\n  S extends SlotsType = {}\n>(\n  setup: (\n    props: Props,\n    ctx: SetupContext<E, S>\n  ) => RenderFunction | Promise<RenderFunction>,\n  options?: Pick<ComponentOptions, 'name' | 'inheritAttrs'> & {\n    props?: ComponentObjectPropsOptions<Props>\n    emits?: E | EE[]\n    slots?: S\n  }\n): (props: Props & EmitsToProps<E>) => any\n\n// overload 2: object format with no props\n// (uses user defined props interface)\n// return type is for Vetur and TSX support\nexport function defineComponent<\n  Props = {},\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = {},\n  EE extends string = string,\n  S extends SlotsType = {},\n  I extends ComponentInjectOptions = {},\n  II extends string = string\n>(\n  options: ComponentOptionsWithoutProps<\n    Props,\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    EE,\n    I,\n    II,\n    S\n  >\n): DefineComponent<\n  Props,\n  RawBindings,\n  D,\n  C,\n  M,\n  Mixin,\n  Extends,\n  E,\n  EE,\n  PublicProps,\n  ResolveProps<Props, E>,\n  ExtractDefaultPropTypes<Props>,\n  S\n>\n\n// overload 3: object format with array props declaration\n// props inferred as { [key in PropNames]?: any }\n// return type is for Vetur and TSX support\nexport function defineComponent<\n  PropNames extends string,\n  RawBindings,\n  D,\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = {},\n  EE extends string = string,\n  S extends SlotsType = {},\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  Props = Readonly<{ [key in PropNames]?: any }>\n>(\n  options: ComponentOptionsWithArrayProps<\n    PropNames,\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    EE,\n    I,\n    II,\n    S\n  >\n): DefineComponent<\n  Props,\n  RawBindings,\n  D,\n  C,\n  M,\n  Mixin,\n  Extends,\n  E,\n  EE,\n  PublicProps,\n  ResolveProps<Props, E>,\n  ExtractDefaultPropTypes<Props>,\n  S\n>\n\n// overload 4: object format with object props declaration\n// see `ExtractPropTypes` in ./componentProps.ts\nexport function defineComponent<\n  // the Readonly constraint allows TS to treat the type of { required: true }\n  // as constant instead of boolean.\n  PropsOptions extends Readonly<ComponentPropsOptions>,\n  RawBindings,\n  D,\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = {},\n  EE extends string = string,\n  S extends SlotsType = {},\n  I extends ComponentInjectOptions = {},\n  II extends string = string\n>(\n  options: ComponentOptionsWithObjectProps<\n    PropsOptions,\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    EE,\n    I,\n    II,\n    S\n  >\n): DefineComponent<\n  PropsOptions,\n  RawBindings,\n  D,\n  C,\n  M,\n  Mixin,\n  Extends,\n  E,\n  EE,\n  PublicProps,\n  ResolveProps<PropsOptions, E>,\n  ExtractDefaultPropTypes<PropsOptions>,\n  S\n>\n\n// implementation, close to no-op\n/*! #__NO_SIDE_EFFECTS__ */\nexport function defineComponent(\n  options: unknown,\n  extraOptions?: ComponentOptions\n) {\n  return isFunction(options)\n    ? // #8326: extend call and options.name access are considered side-effects\n      // by Rollup, so we have to wrap it in a pure-annotated IIFE.\n      /*#__PURE__*/ (() =>\n        extend({ name: options.name }, extraOptions, { setup: options }))()\n    : options\n}\n", "import {\n  Component,\n  ConcreteComponent,\n  currentInstance,\n  ComponentInternalInstance,\n  isInSSRComponentSetup,\n  ComponentOptions\n} from './component'\nimport { isFunction, isObject } from '@vue/shared'\nimport { ComponentPublicInstance } from './componentPublicInstance'\nimport { createVNode, VNode } from './vnode'\nimport { defineComponent } from './apiDefineComponent'\nimport { warn } from './warning'\nimport { ref } from '@vue/reactivity'\nimport { handleError, ErrorCodes } from './errorHandling'\nimport { isKeepAlive } from './components/KeepAlive'\nimport { queueJob } from './scheduler'\n\nexport type AsyncComponentResolveResult<T = Component> = T | { default: T } // es modules\n\nexport type AsyncComponentLoader<T = any> = () => Promise<\n  AsyncComponentResolveResult<T>\n>\n\nexport interface AsyncComponentOptions<T = any> {\n  loader: AsyncComponentLoader<T>\n  loadingComponent?: Component\n  errorComponent?: Component\n  delay?: number\n  timeout?: number\n  suspensible?: boolean\n  onError?: (\n    error: Error,\n    retry: () => void,\n    fail: () => void,\n    attempts: number\n  ) => any\n}\n\nexport const isAsyncWrapper = (i: ComponentInternalInstance | VNode): boolean =>\n  !!(i.type as ComponentOptions).__asyncLoader\n\n/*! #__NO_SIDE_EFFECTS__ */\nexport function defineAsyncComponent<\n  T extends Component = { new (): ComponentPublicInstance }\n>(source: AsyncComponentLoader<T> | AsyncComponentOptions<T>): T {\n  if (isFunction(source)) {\n    source = { loader: source }\n  }\n\n  const {\n    loader,\n    loadingComponent,\n    errorComponent,\n    delay = 200,\n    timeout, // undefined = never times out\n    suspensible = true,\n    onError: userOnError\n  } = source\n\n  let pendingRequest: Promise<ConcreteComponent> | null = null\n  let resolvedComp: ConcreteComponent | undefined\n\n  let retries = 0\n  const retry = () => {\n    retries++\n    pendingRequest = null\n    return load()\n  }\n\n  const load = (): Promise<ConcreteComponent> => {\n    let thisRequest: Promise<ConcreteComponent>\n    return (\n      pendingRequest ||\n      (thisRequest = pendingRequest =\n        loader()\n          .catch(err => {\n            err = err instanceof Error ? err : new Error(String(err))\n            if (userOnError) {\n              return new Promise((resolve, reject) => {\n                const userRetry = () => resolve(retry())\n                const userFail = () => reject(err)\n                userOnError(err, userRetry, userFail, retries + 1)\n              })\n            } else {\n              throw err\n            }\n          })\n          .then((comp: any) => {\n            if (thisRequest !== pendingRequest && pendingRequest) {\n              return pendingRequest\n            }\n            if (__DEV__ && !comp) {\n              warn(\n                `Async component loader resolved to undefined. ` +\n                  `If you are using retry(), make sure to return its return value.`\n              )\n            }\n            // interop module default\n            if (\n              comp &&\n              (comp.__esModule || comp[Symbol.toStringTag] === 'Module')\n            ) {\n              comp = comp.default\n            }\n            if (__DEV__ && comp && !isObject(comp) && !isFunction(comp)) {\n              throw new Error(`Invalid async component load result: ${comp}`)\n            }\n            resolvedComp = comp\n            return comp\n          }))\n    )\n  }\n\n  return defineComponent({\n    name: 'AsyncComponentWrapper',\n\n    __asyncLoader: load,\n\n    get __asyncResolved() {\n      return resolvedComp\n    },\n\n    setup() {\n      const instance = currentInstance!\n\n      // already resolved\n      if (resolvedComp) {\n        return () => createInnerComp(resolvedComp!, instance)\n      }\n\n      const onError = (err: Error) => {\n        pendingRequest = null\n        handleError(\n          err,\n          instance,\n          ErrorCodes.ASYNC_COMPONENT_LOADER,\n          !errorComponent /* do not throw in dev if user provided error component */\n        )\n      }\n\n      // suspense-controlled or SSR.\n      if (\n        (__FEATURE_SUSPENSE__ && suspensible && instance.suspense) ||\n        (__SSR__ && isInSSRComponentSetup)\n      ) {\n        return load()\n          .then(comp => {\n            return () => createInnerComp(comp, instance)\n          })\n          .catch(err => {\n            onError(err)\n            return () =>\n              errorComponent\n                ? createVNode(errorComponent as ConcreteComponent, {\n                    error: err\n                  })\n                : null\n          })\n      }\n\n      const loaded = ref(false)\n      const error = ref()\n      const delayed = ref(!!delay)\n\n      if (delay) {\n        setTimeout(() => {\n          delayed.value = false\n        }, delay)\n      }\n\n      if (timeout != null) {\n        setTimeout(() => {\n          if (!loaded.value && !error.value) {\n            const err = new Error(\n              `Async component timed out after ${timeout}ms.`\n            )\n            onError(err)\n            error.value = err\n          }\n        }, timeout)\n      }\n\n      load()\n        .then(() => {\n          loaded.value = true\n          if (instance.parent && isKeepAlive(instance.parent.vnode)) {\n            // parent is keep-alive, force update so the loaded component's\n            // name is taken into account\n            queueJob(instance.parent.update)\n          }\n        })\n        .catch(err => {\n          onError(err)\n          error.value = err\n        })\n\n      return () => {\n        if (loaded.value && resolvedComp) {\n          return createInnerComp(resolvedComp, instance)\n        } else if (error.value && errorComponent) {\n          return createVNode(errorComponent, {\n            error: error.value\n          })\n        } else if (loadingComponent && !delayed.value) {\n          return createVNode(loadingComponent)\n        }\n      }\n    }\n  }) as T\n}\n\nfunction createInnerComp(\n  comp: ConcreteComponent,\n  parent: ComponentInternalInstance\n) {\n  const { ref, props, children, ce } = parent.vnode\n  const vnode = createVNode(comp, props, children)\n  // ensure inner component inherits the async wrapper's ref owner\n  vnode.ref = ref\n  // pass the custom element callback on to the inner comp\n  // and remove it from the async wrapper\n  vnode.ce = ce\n  delete parent.vnode.ce\n\n  return vnode\n}\n", "import {\n  ConcreteComponent,\n  getCurrentInstance,\n  SetupContext,\n  ComponentInternalInstance,\n  currentInstance,\n  getComponentName,\n  ComponentOptions\n} from '../component'\nimport {\n  VNode,\n  cloneVNode,\n  isVNode,\n  VNodeProps,\n  invokeVNodeHook,\n  isSameVNodeType\n} from '../vnode'\nimport { warn } from '../warning'\nimport {\n  onBeforeUnmount,\n  injectHook,\n  onUnmounted,\n  onMounted,\n  onUpdated\n} from '../apiLifecycle'\nimport {\n  isString,\n  isArray,\n  isRegExp,\n  ShapeFlags,\n  remove,\n  invokeArrayFns\n} from '@vue/shared'\nimport { watch } from '../apiWatch'\nimport {\n  RendererInternals,\n  queuePostRenderEffect,\n  MoveType,\n  RendererElement,\n  RendererNode\n} from '../renderer'\nimport { setTransitionHooks } from './BaseTransition'\nimport { ComponentRenderContext } from '../componentPublicInstance'\nimport { devtoolsComponentAdded } from '../devtools'\nimport { isAsyncWrapper } from '../apiAsyncComponent'\nimport { isSuspense } from './Suspense'\nimport { LifecycleHooks } from '../enums'\n\ntype MatchPattern = string | RegExp | (string | RegExp)[]\n\nexport interface KeepAliveProps {\n  include?: MatchPattern\n  exclude?: MatchPattern\n  max?: number | string\n}\n\ntype CacheKey = string | number | symbol | ConcreteComponent\ntype Cache = Map<CacheKey, VNode>\ntype Keys = Set<CacheKey>\n\nexport interface KeepAliveContext extends ComponentRenderContext {\n  renderer: RendererInternals\n  activate: (\n    vnode: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    isSVG: boolean,\n    optimized: boolean\n  ) => void\n  deactivate: (vnode: VNode) => void\n}\n\nexport const isKeepAlive = (vnode: VNode): boolean =>\n  (vnode.type as any).__isKeepAlive\n\nconst KeepAliveImpl: ComponentOptions = {\n  name: `KeepAlive`,\n\n  // Marker for special handling inside the renderer. We are not using a ===\n  // check directly on KeepAlive in the renderer, because importing it directly\n  // would prevent it from being tree-shaken.\n  __isKeepAlive: true,\n\n  props: {\n    include: [String, RegExp, Array],\n    exclude: [String, RegExp, Array],\n    max: [String, Number]\n  },\n\n  setup(props: KeepAliveProps, { slots }: SetupContext) {\n    const instance = getCurrentInstance()!\n    // KeepAlive communicates with the instantiated renderer via the\n    // ctx where the renderer passes in its internals,\n    // and the KeepAlive instance exposes activate/deactivate implementations.\n    // The whole point of this is to avoid importing KeepAlive directly in the\n    // renderer to facilitate tree-shaking.\n    const sharedContext = instance.ctx as KeepAliveContext\n\n    // if the internal renderer is not registered, it indicates that this is server-side rendering,\n    // for KeepAlive, we just need to render its children\n    if (__SSR__ && !sharedContext.renderer) {\n      return () => {\n        const children = slots.default && slots.default()\n        return children && children.length === 1 ? children[0] : children\n      }\n    }\n\n    const cache: Cache = new Map()\n    const keys: Keys = new Set()\n    let current: VNode | null = null\n\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n      ;(instance as any).__v_cache = cache\n    }\n\n    const parentSuspense = instance.suspense\n\n    const {\n      renderer: {\n        p: patch,\n        m: move,\n        um: _unmount,\n        o: { createElement }\n      }\n    } = sharedContext\n    const storageContainer = createElement('div')\n\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\n      const instance = vnode.component!\n      move(vnode, container, anchor, MoveType.ENTER, parentSuspense)\n      // in case props have changed\n      patch(\n        instance.vnode,\n        vnode,\n        container,\n        anchor,\n        instance,\n        parentSuspense,\n        isSVG,\n        vnode.slotScopeIds,\n        optimized\n      )\n      queuePostRenderEffect(() => {\n        instance.isDeactivated = false\n        if (instance.a) {\n          invokeArrayFns(instance.a)\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\n        }\n      }, parentSuspense)\n\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n        // Update components tree\n        devtoolsComponentAdded(instance)\n      }\n    }\n\n    sharedContext.deactivate = (vnode: VNode) => {\n      const instance = vnode.component!\n      move(vnode, storageContainer, null, MoveType.LEAVE, parentSuspense)\n      queuePostRenderEffect(() => {\n        if (instance.da) {\n          invokeArrayFns(instance.da)\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\n        }\n        instance.isDeactivated = true\n      }, parentSuspense)\n\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n        // Update components tree\n        devtoolsComponentAdded(instance)\n      }\n    }\n\n    function unmount(vnode: VNode) {\n      // reset the shapeFlag so it can be properly unmounted\n      resetShapeFlag(vnode)\n      _unmount(vnode, instance, parentSuspense, true)\n    }\n\n    function pruneCache(filter?: (name: string) => boolean) {\n      cache.forEach((vnode, key) => {\n        const name = getComponentName(vnode.type as ConcreteComponent)\n        if (name && (!filter || !filter(name))) {\n          pruneCacheEntry(key)\n        }\n      })\n    }\n\n    function pruneCacheEntry(key: CacheKey) {\n      const cached = cache.get(key) as VNode\n      if (!current || !isSameVNodeType(cached, current)) {\n        unmount(cached)\n      } else if (current) {\n        // current active instance should no longer be kept-alive.\n        // we can't unmount it now but it might be later, so reset its flag now.\n        resetShapeFlag(current)\n      }\n      cache.delete(key)\n      keys.delete(key)\n    }\n\n    // prune cache on include/exclude prop change\n    watch(\n      () => [props.include, props.exclude],\n      ([include, exclude]) => {\n        include && pruneCache(name => matches(include, name))\n        exclude && pruneCache(name => !matches(exclude, name))\n      },\n      // prune post-render after `current` has been updated\n      { flush: 'post', deep: true }\n    )\n\n    // cache sub tree after render\n    let pendingCacheKey: CacheKey | null = null\n    const cacheSubtree = () => {\n      // fix #1621, the pendingCacheKey could be 0\n      if (pendingCacheKey != null) {\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree))\n      }\n    }\n    onMounted(cacheSubtree)\n    onUpdated(cacheSubtree)\n\n    onBeforeUnmount(() => {\n      cache.forEach(cached => {\n        const { subTree, suspense } = instance\n        const vnode = getInnerChild(subTree)\n        if (cached.type === vnode.type && cached.key === vnode.key) {\n          // current instance will be unmounted as part of keep-alive's unmount\n          resetShapeFlag(vnode)\n          // but invoke its deactivated hook here\n          const da = vnode.component!.da\n          da && queuePostRenderEffect(da, suspense)\n          return\n        }\n        unmount(cached)\n      })\n    })\n\n    return () => {\n      pendingCacheKey = null\n\n      if (!slots.default) {\n        return null\n      }\n\n      const children = slots.default()\n      const rawVNode = children[0]\n      if (children.length > 1) {\n        if (__DEV__) {\n          warn(`KeepAlive should contain exactly one component child.`)\n        }\n        current = null\n        return children\n      } else if (\n        !isVNode(rawVNode) ||\n        (!(rawVNode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) &&\n          !(rawVNode.shapeFlag & ShapeFlags.SUSPENSE))\n      ) {\n        current = null\n        return rawVNode\n      }\n\n      let vnode = getInnerChild(rawVNode)\n      const comp = vnode.type as ConcreteComponent\n\n      // for async components, name check should be based in its loaded\n      // inner component if available\n      const name = getComponentName(\n        isAsyncWrapper(vnode)\n          ? (vnode.type as ComponentOptions).__asyncResolved || {}\n          : comp\n      )\n\n      const { include, exclude, max } = props\n\n      if (\n        (include && (!name || !matches(include, name))) ||\n        (exclude && name && matches(exclude, name))\n      ) {\n        current = vnode\n        return rawVNode\n      }\n\n      const key = vnode.key == null ? comp : vnode.key\n      const cachedVNode = cache.get(key)\n\n      // clone vnode if it's reused because we are going to mutate it\n      if (vnode.el) {\n        vnode = cloneVNode(vnode)\n        if (rawVNode.shapeFlag & ShapeFlags.SUSPENSE) {\n          rawVNode.ssContent = vnode\n        }\n      }\n      // #1513 it's possible for the returned vnode to be cloned due to attr\n      // fallthrough or scopeId, so the vnode here may not be the final vnode\n      // that is mounted. Instead of caching it directly, we store the pending\n      // key and cache `instance.subTree` (the normalized vnode) in\n      // beforeMount/beforeUpdate hooks.\n      pendingCacheKey = key\n\n      if (cachedVNode) {\n        // copy over mounted state\n        vnode.el = cachedVNode.el\n        vnode.component = cachedVNode.component\n        if (vnode.transition) {\n          // recursively update transition hooks on subTree\n          setTransitionHooks(vnode, vnode.transition!)\n        }\n        // avoid vnode being mounted as fresh\n        vnode.shapeFlag |= ShapeFlags.COMPONENT_KEPT_ALIVE\n        // make this key the freshest\n        keys.delete(key)\n        keys.add(key)\n      } else {\n        keys.add(key)\n        // prune oldest entry\n        if (max && keys.size > parseInt(max as string, 10)) {\n          pruneCacheEntry(keys.values().next().value)\n        }\n      }\n      // avoid vnode being unmounted\n      vnode.shapeFlag |= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\n\n      current = vnode\n      return isSuspense(rawVNode.type) ? rawVNode : vnode\n    }\n  }\n}\n\nif (__COMPAT__) {\n  KeepAliveImpl.__isBuildIn = true\n}\n\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\nexport const KeepAlive = KeepAliveImpl as any as {\n  __isKeepAlive: true\n  new (): {\n    $props: VNodeProps & KeepAliveProps\n    $slots: {\n      default(): VNode[]\n    }\n  }\n}\n\nfunction matches(pattern: MatchPattern, name: string): boolean {\n  if (isArray(pattern)) {\n    return pattern.some((p: string | RegExp) => matches(p, name))\n  } else if (isString(pattern)) {\n    return pattern.split(',').includes(name)\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nexport function onActivated(\n  hook: Function,\n  target?: ComponentInternalInstance | null\n) {\n  registerKeepAliveHook(hook, LifecycleHooks.ACTIVATED, target)\n}\n\nexport function onDeactivated(\n  hook: Function,\n  target?: ComponentInternalInstance | null\n) {\n  registerKeepAliveHook(hook, LifecycleHooks.DEACTIVATED, target)\n}\n\nfunction registerKeepAliveHook(\n  hook: Function & { __wdc?: Function },\n  type: LifecycleHooks,\n  target: ComponentInternalInstance | null = currentInstance\n) {\n  // cache the deactivate branch check wrapper for injected hooks so the same\n  // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\n  // deactivation check\".\n  const wrappedHook =\n    hook.__wdc ||\n    (hook.__wdc = () => {\n      // only fire the hook if the target instance is NOT in a deactivated branch.\n      let current: ComponentInternalInstance | null = target\n      while (current) {\n        if (current.isDeactivated) {\n          return\n        }\n        current = current.parent\n      }\n      return hook()\n    })\n  injectHook(type, wrappedHook, target)\n  // In addition to registering it on the target instance, we walk up the parent\n  // chain and register it on all ancestor instances that are keep-alive roots.\n  // This avoids the need to walk the entire component tree when invoking these\n  // hooks, and more importantly, avoids the need to track child components in\n  // arrays.\n  if (target) {\n    let current = target.parent\n    while (current && current.parent) {\n      if (isKeepAlive(current.parent.vnode)) {\n        injectToKeepAliveRoot(wrappedHook, type, target, current)\n      }\n      current = current.parent\n    }\n  }\n}\n\nfunction injectToKeepAliveRoot(\n  hook: Function & { __weh?: Function },\n  type: LifecycleHooks,\n  target: ComponentInternalInstance,\n  keepAliveRoot: ComponentInternalInstance\n) {\n  // injectHook wraps the original for error handling, so make sure to remove\n  // the wrapped version.\n  const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */)\n  onUnmounted(() => {\n    remove(keepAliveRoot[type]!, injected)\n  }, target)\n}\n\nfunction resetShapeFlag(vnode: VNode) {\n  // bitwise operations to remove keep alive flags\n  vnode.shapeFlag &= ~ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\n  vnode.shapeFlag &= ~ShapeFlags.COMPONENT_KEPT_ALIVE\n}\n\nfunction getInnerChild(vnode: VNode) {\n  return vnode.shapeFlag & ShapeFlags.SUSPENSE ? vnode.ssContent! : vnode\n}\n", "import {\n  ComponentInternalInstance,\n  currentInstance,\n  isInSSRComponentSetup,\n  setCurrentInstance,\n  unsetCurrentInstance\n} from './component'\nimport { ComponentPublicInstance } from './componentPublicInstance'\nimport { callWithAsyncErrorHandling, ErrorTypeStrings } from './errorHandling'\nimport { warn } from './warning'\nimport { toHandlerKey } from '@vue/shared'\nimport { DebuggerEvent, pauseTracking, resetTracking } from '@vue/reactivity'\nimport { LifecycleHooks } from './enums'\n\nexport { onActivated, onDeactivated } from './components/KeepAlive'\n\nexport function injectHook(\n  type: LifecycleHooks,\n  hook: Function & { __weh?: Function },\n  target: ComponentInternalInstance | null = currentInstance,\n  prepend: boolean = false\n): Function | undefined {\n  if (target) {\n    const hooks = target[type] || (target[type] = [])\n    // cache the error handling wrapper for injected hooks so the same hook\n    // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\n    // handling\".\n    const wrappedHook =\n      hook.__weh ||\n      (hook.__weh = (...args: unknown[]) => {\n        if (target.isUnmounted) {\n          return\n        }\n        // disable tracking inside all lifecycle hooks\n        // since they can potentially be called inside effects.\n        pauseTracking()\n        // Set currentInstance during hook invocation.\n        // This assumes the hook does not synchronously trigger other hooks, which\n        // can only be false when the user does something really funky.\n        setCurrentInstance(target)\n        const res = callWithAsyncErrorHandling(hook, target, type, args)\n        unsetCurrentInstance()\n        resetTracking()\n        return res\n      })\n    if (prepend) {\n      hooks.unshift(wrappedHook)\n    } else {\n      hooks.push(wrappedHook)\n    }\n    return wrappedHook\n  } else if (__DEV__) {\n    const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''))\n    warn(\n      `${apiName} is called when there is no active component instance to be ` +\n        `associated with. ` +\n        `Lifecycle injection APIs can only be used during execution of setup().` +\n        (__FEATURE_SUSPENSE__\n          ? ` If you are using async setup(), make sure to register lifecycle ` +\n            `hooks before the first await statement.`\n          : ``)\n    )\n  }\n}\n\nexport const createHook =\n  <T extends Function = () => any>(lifecycle: LifecycleHooks) =>\n  (hook: T, target: ComponentInternalInstance | null = currentInstance) =>\n    // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\n    (!isInSSRComponentSetup || lifecycle === LifecycleHooks.SERVER_PREFETCH) &&\n    injectHook(lifecycle, (...args: unknown[]) => hook(...args), target)\n\nexport const onBeforeMount = createHook(LifecycleHooks.BEFORE_MOUNT)\nexport const onMounted = createHook(LifecycleHooks.MOUNTED)\nexport const onBeforeUpdate = createHook(LifecycleHooks.BEFORE_UPDATE)\nexport const onUpdated = createHook(LifecycleHooks.UPDATED)\nexport const onBeforeUnmount = createHook(LifecycleHooks.BEFORE_UNMOUNT)\nexport const onUnmounted = createHook(LifecycleHooks.UNMOUNTED)\nexport const onServerPrefetch = createHook(LifecycleHooks.SERVER_PREFETCH)\n\nexport type DebuggerHook = (e: DebuggerEvent) => void\nexport const onRenderTriggered = createHook<DebuggerHook>(\n  LifecycleHooks.RENDER_TRIGGERED\n)\nexport const onRenderTracked = createHook<DebuggerHook>(\n  LifecycleHooks.RENDER_TRACKED\n)\n\nexport type ErrorCapturedHook<TError = unknown> = (\n  err: TError,\n  instance: ComponentPublicInstance | null,\n  info: string\n) => boolean | void\n\nexport function onErrorCaptured<TError = Error>(\n  hook: ErrorCapturedHook<TError>,\n  target: ComponentInternalInstance | null = currentInstance\n) {\n  injectHook(LifecycleHooks.ERROR_CAPTURED, hook, target)\n}\n", "import {\n  currentInstance,\n  ConcreteComponent,\n  ComponentOptions,\n  getComponentName\n} from '../component'\nimport { currentRenderingInstance } from '../componentRenderContext'\nimport { Directive } from '../directives'\nimport { camelize, capitalize, isString } from '@vue/shared'\nimport { warn } from '../warning'\nimport { VNodeTypes } from '../vnode'\n\nexport const COMPONENTS = 'components'\nexport const DIRECTIVES = 'directives'\nexport const FILTERS = 'filters'\n\nexport type AssetTypes = typeof COMPONENTS | typeof DIRECTIVES | typeof FILTERS\n\n/**\n * @private\n */\nexport function resolveComponent(\n  name: string,\n  maybeSelfReference?: boolean\n): ConcreteComponent | string {\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name\n}\n\nexport const NULL_DYNAMIC_COMPONENT = Symbol.for('v-ndc')\n\n/**\n * @private\n */\nexport function resolveDynamicComponent(component: unknown): VNodeTypes {\n  if (isString(component)) {\n    return resolveAsset(COMPONENTS, component, false) || component\n  } else {\n    // invalid types will fallthrough to createVNode and raise warning\n    return (component || NULL_DYNAMIC_COMPONENT) as any\n  }\n}\n\n/**\n * @private\n */\nexport function resolveDirective(name: string): Directive | undefined {\n  return resolveAsset(DIRECTIVES, name)\n}\n\n/**\n * v2 compat only\n * @internal\n */\nexport function resolveFilter(name: string): Function | undefined {\n  return resolveAsset(FILTERS, name)\n}\n\n/**\n * @private\n * overload 1: components\n */\nfunction resolveAsset(\n  type: typeof COMPONENTS,\n  name: string,\n  warnMissing?: boolean,\n  maybeSelfReference?: boolean\n): ConcreteComponent | undefined\n// overload 2: directives\nfunction resolveAsset(\n  type: typeof DIRECTIVES,\n  name: string\n): Directive | undefined\n// implementation\n// overload 3: filters (compat only)\nfunction resolveAsset(type: typeof FILTERS, name: string): Function | undefined\n// implementation\nfunction resolveAsset(\n  type: AssetTypes,\n  name: string,\n  warnMissing = true,\n  maybeSelfReference = false\n) {\n  const instance = currentRenderingInstance || currentInstance\n  if (instance) {\n    const Component = instance.type\n\n    // explicit self name has highest priority\n    if (type === COMPONENTS) {\n      const selfName = getComponentName(\n        Component,\n        false /* do not include inferred name to avoid breaking existing code */\n      )\n      if (\n        selfName &&\n        (selfName === name ||\n          selfName === camelize(name) ||\n          selfName === capitalize(camelize(name)))\n      ) {\n        return Component\n      }\n    }\n\n    const res =\n      // local registration\n      // check instance[type] first which is resolved for options API\n      resolve(instance[type] || (Component as ComponentOptions)[type], name) ||\n      // global registration\n      resolve(instance.appContext[type], name)\n\n    if (!res && maybeSelfReference) {\n      // fallback to implicit self-reference\n      return Component\n    }\n\n    if (__DEV__ && warnMissing && !res) {\n      const extra =\n        type === COMPONENTS\n          ? `\\nIf this is a native custom element, make sure to exclude it from ` +\n            `component resolution via compilerOptions.isCustomElement.`\n          : ``\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`)\n    }\n\n    return res\n  } else if (__DEV__) {\n    warn(\n      `resolve${capitalize(type.slice(0, -1))} ` +\n        `can only be used in render() or setup().`\n    )\n  }\n}\n\nfunction resolve(registry: Record<string, any> | undefined, name: string) {\n  return (\n    registry &&\n    (registry[name] ||\n      registry[camelize(name)] ||\n      registry[capitalize(camelize(name))])\n  )\n}\n", "import { VNode, VNodeChild } from '../vnode'\nimport { isArray, isString, isObject } from '@vue/shared'\nimport { warn } from '../warning'\n\n/**\n * v-for string\n * @private\n */\nexport function renderList(\n  source: string,\n  renderItem: (value: string, index: number) => VNodeChild\n): VNodeChild[]\n\n/**\n * v-for number\n */\nexport function renderList(\n  source: number,\n  renderItem: (value: number, index: number) => VNodeChild\n): VNodeChild[]\n\n/**\n * v-for array\n */\nexport function renderList<T>(\n  source: T[],\n  renderItem: (value: T, index: number) => VNodeChild\n): VNodeChild[]\n\n/**\n * v-for iterable\n */\nexport function renderList<T>(\n  source: Iterable<T>,\n  renderItem: (value: T, index: number) => VNodeChild\n): VNodeChild[]\n\n/**\n * v-for object\n */\nexport function renderList<T>(\n  source: T,\n  renderItem: <K extends keyof T>(\n    value: T[K],\n    key: K,\n    index: number\n  ) => VNodeChild\n): VNodeChild[]\n\n/**\n * Actual implementation\n */\nexport function renderList(\n  source: any,\n  renderItem: (...args: any[]) => VNodeChild,\n  cache?: any[],\n  index?: number\n): VNodeChild[] {\n  let ret: VNodeChild[]\n  const cached = (cache && cache[index!]) as VNode[] | undefined\n\n  if (isArray(source) || isString(source)) {\n    ret = new Array(source.length)\n    for (let i = 0, l = source.length; i < l; i++) {\n      ret[i] = renderItem(source[i], i, undefined, cached && cached[i])\n    }\n  } else if (typeof source === 'number') {\n    if (__DEV__ && !Number.isInteger(source)) {\n      warn(`The v-for range expect an integer value but got ${source}.`)\n    }\n    ret = new Array(source)\n    for (let i = 0; i < source; i++) {\n      ret[i] = renderItem(i + 1, i, undefined, cached && cached[i])\n    }\n  } else if (isObject(source)) {\n    if (source[Symbol.iterator as any]) {\n      ret = Array.from(source as Iterable<any>, (item, i) =>\n        renderItem(item, i, undefined, cached && cached[i])\n      )\n    } else {\n      const keys = Object.keys(source)\n      ret = new Array(keys.length)\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i]\n        ret[i] = renderItem(source[key], key, i, cached && cached[i])\n      }\n    }\n  } else {\n    ret = []\n  }\n\n  if (cache) {\n    cache[index!] = ret\n  }\n  return ret\n}\n", "import { isArray } from '@vue/shared'\nimport { VNode } from '../vnode'\n\n// #6651 res can be undefined in SSR in string push mode\ntype SSRSlot = (...args: any[]) => VNode[] | undefined\n\ninterface CompiledSlotDescriptor {\n  name: string\n  fn: SSRSlot\n  key?: string\n}\n\n/**\n * Compiler runtime helper for creating dynamic slots object\n * @private\n */\nexport function createSlots(\n  slots: Record<string, SSRSlot>,\n  dynamicSlots: (\n    | CompiledSlotDescriptor\n    | CompiledSlotDescriptor[]\n    | undefined\n  )[]\n): Record<string, SSRSlot> {\n  for (let i = 0; i < dynamicSlots.length; i++) {\n    const slot = dynamicSlots[i]\n    // array of dynamic slot generated by <template v-for=\"...\" #[...]>\n    if (isArray(slot)) {\n      for (let j = 0; j < slot.length; j++) {\n        slots[slot[j].name] = slot[j].fn\n      }\n    } else if (slot) {\n      // conditional single slot generated by <template v-if=\"...\" #foo>\n      slots[slot.name] = slot.key\n        ? (...args: any[]) => {\n            const res = slot.fn(...args)\n            // attach branch key so each conditional branch is considered a\n            // different fragment\n            if (res) (res as any).key = slot.key\n            return res\n          }\n        : slot.fn\n    }\n  }\n  return slots\n}\n", "import { Data } from '../component'\nimport { Slots, RawSlots } from '../componentSlots'\nimport {\n  ContextualRenderFn,\n  currentRenderingInstance\n} from '../componentRenderContext'\nimport {\n  Comment,\n  isVNode,\n  VNodeArrayChildren,\n  openBlock,\n  createBlock,\n  Fragment,\n  VNode\n} from '../vnode'\nimport { PatchFlags, SlotFlags } from '@vue/shared'\nimport { warn } from '../warning'\nimport { createVNode } from '@vue/runtime-core'\nimport { isAsyncWrapper } from '../apiAsyncComponent'\n\n/**\n * Compiler runtime helper for rendering `<slot/>`\n * @private\n */\nexport function renderSlot(\n  slots: Slots,\n  name: string,\n  props: Data = {},\n  // this is not a user-facing function, so the fallback is always generated by\n  // the compiler and guaranteed to be a function returning an array\n  fallback?: () => VNodeArrayChildren,\n  noSlotted?: boolean\n): VNode {\n  if (\n    currentRenderingInstance!.isCE ||\n    (currentRenderingInstance!.parent &&\n      isAsyncWrapper(currentRenderingInstance!.parent) &&\n      currentRenderingInstance!.parent.isCE)\n  ) {\n    if (name !== 'default') props.name = name\n    return createVNode('slot', props, fallback && fallback())\n  }\n\n  let slot = slots[name]\n\n  if (__DEV__ && slot && slot.length > 1) {\n    warn(\n      `SSR-optimized slot function detected in a non-SSR-optimized render ` +\n        `function. You need to mark this component with $dynamic-slots in the ` +\n        `parent template.`\n    )\n    slot = () => []\n  }\n\n  // a compiled slot disables block tracking by default to avoid manual\n  // invocation interfering with template-based block tracking, but in\n  // `renderSlot` we can be sure that it's template-based so we can force\n  // enable it.\n  if (slot && (slot as ContextualRenderFn)._c) {\n    ;(slot as ContextualRenderFn)._d = false\n  }\n  openBlock()\n  const validSlotContent = slot && ensureValidVNode(slot(props))\n  const rendered = createBlock(\n    Fragment,\n    {\n      key:\n        props.key ||\n        // slot content array of a dynamic conditional slot may have a branch\n        // key attached in the `createSlots` helper, respect that\n        (validSlotContent && (validSlotContent as any).key) ||\n        `_${name}`\n    },\n    validSlotContent || (fallback ? fallback() : []),\n    validSlotContent && (slots as RawSlots)._ === SlotFlags.STABLE\n      ? PatchFlags.STABLE_FRAGMENT\n      : PatchFlags.BAIL\n  )\n  if (!noSlotted && rendered.scopeId) {\n    rendered.slotScopeIds = [rendered.scopeId + '-s']\n  }\n  if (slot && (slot as ContextualRenderFn)._c) {\n    ;(slot as ContextualRenderFn)._d = true\n  }\n  return rendered\n}\n\nfunction ensureValidVNode(vnodes: VNodeArrayChildren) {\n  return vnodes.some(child => {\n    if (!isVNode(child)) return true\n    if (child.type === Comment) return false\n    if (\n      child.type === Fragment &&\n      !ensureValidVNode(child.children as VNodeArrayChildren)\n    )\n      return false\n    return true\n  })\n    ? vnodes\n    : null\n}\n", "import { toHandlerKey, isObject } from '@vue/shared'\nimport { warn } from '../warning'\n\n/**\n * For prefixing keys in v-on=\"obj\" with \"on\"\n * @private\n */\nexport function toHandlers(\n  obj: Record<string, any>,\n  preserveCaseIfNecessary?: boolean\n): Record<string, any> {\n  const ret: Record<string, any> = {}\n  if (__DEV__ && !isObject(obj)) {\n    warn(`v-on with no argument expects an object value.`)\n    return ret\n  }\n  for (const key in obj) {\n    ret[\n      preserveCaseIfNecessary && /[A-Z]/.test(key)\n        ? `on:${key}`\n        : toHandlerKey(key)\n    ] = obj[key]\n  }\n  return ret\n}\n", "import {\n  ComponentInternalInstance,\n  Data,\n  getExposeProxy,\n  isStatefulComponent\n} from './component'\nimport { nextTick, queueJob } from './scheduler'\nimport { instanceWatch, WatchOptions, WatchStopHandle } from './apiWatch'\nimport {\n  EMPTY_OBJ,\n  hasOwn,\n  isGloballyAllowed,\n  NOOP,\n  extend,\n  isString,\n  isFunction,\n  UnionToIntersection,\n  Prettify\n} from '@vue/shared'\nimport {\n  toRaw,\n  shallowReadonly,\n  track,\n  TrackOpTypes,\n  ShallowUnwrapRef,\n  UnwrapNestedRefs\n} from '@vue/reactivity'\nimport {\n  ExtractComputedReturns,\n  ComponentOptionsBase,\n  ComputedOptions,\n  MethodOptions,\n  ComponentOptionsMixin,\n  OptionTypesType,\n  OptionTypesKeys,\n  resolveMergedOptions,\n  shouldCacheAccess,\n  MergedComponentOptionsOverride,\n  InjectToObject,\n  ComponentInjectOptions\n} from './componentOptions'\nimport { EmitsOptions, EmitFn } from './componentEmits'\nimport { SlotsType, UnwrapSlotsType } from './componentSlots'\nimport { markAttrsAccessed } from './componentRenderUtils'\nimport { currentRenderingInstance } from './componentRenderContext'\nimport { warn } from './warning'\nimport { installCompatInstanceProperties } from './compat/instance'\n\n/**\n * Custom properties added to component instances in any way and can be accessed through `this`\n *\n * @example\n * Here is an example of adding a property `$router` to every component instance:\n * ```ts\n * import { createApp } from 'vue'\n * import { Router, createRouter } from 'vue-router'\n *\n * declare module '@vue/runtime-core' {\n *   interface ComponentCustomProperties {\n *     $router: Router\n *   }\n * }\n *\n * // effectively adding the router to every component instance\n * const app = createApp({})\n * const router = createRouter()\n * app.config.globalProperties.$router = router\n *\n * const vm = app.mount('#app')\n * // we can access the router from the instance\n * vm.$router.push('/')\n * ```\n */\nexport interface ComponentCustomProperties {}\n\ntype IsDefaultMixinComponent<T> = T extends ComponentOptionsMixin\n  ? ComponentOptionsMixin extends T\n    ? true\n    : false\n  : false\n\ntype MixinToOptionTypes<T> = T extends ComponentOptionsBase<\n  infer P,\n  infer B,\n  infer D,\n  infer C,\n  infer M,\n  infer Mixin,\n  infer Extends,\n  any,\n  any,\n  infer Defaults,\n  any,\n  any,\n  any\n>\n  ? OptionTypesType<P & {}, B & {}, D & {}, C & {}, M & {}, Defaults & {}> &\n      IntersectionMixin<Mixin> &\n      IntersectionMixin<Extends>\n  : never\n\n// ExtractMixin(map type) is used to resolve circularly references\ntype ExtractMixin<T> = {\n  Mixin: MixinToOptionTypes<T>\n}[T extends ComponentOptionsMixin ? 'Mixin' : never]\n\nexport type IntersectionMixin<T> = IsDefaultMixinComponent<T> extends true\n  ? OptionTypesType\n  : UnionToIntersection<ExtractMixin<T>>\n\nexport type UnwrapMixinsType<\n  T,\n  Type extends OptionTypesKeys\n> = T extends OptionTypesType ? T[Type] : never\n\ntype EnsureNonVoid<T> = T extends void ? {} : T\n\nexport type ComponentPublicInstanceConstructor<\n  T extends ComponentPublicInstance<\n    Props,\n    RawBindings,\n    D,\n    C,\n    M\n  > = ComponentPublicInstance<any>,\n  Props = any,\n  RawBindings = any,\n  D = any,\n  C extends ComputedOptions = ComputedOptions,\n  M extends MethodOptions = MethodOptions\n> = {\n  __isFragment?: never\n  __isTeleport?: never\n  __isSuspense?: never\n  new (...args: any[]): T\n}\n\nexport type CreateComponentPublicInstance<\n  P = {},\n  B = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = {},\n  PublicProps = P,\n  Defaults = {},\n  MakeDefaultsOptional extends boolean = false,\n  I extends ComponentInjectOptions = {},\n  S extends SlotsType = {},\n  PublicMixin = IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\n  PublicP = UnwrapMixinsType<PublicMixin, 'P'> & EnsureNonVoid<P>,\n  PublicB = UnwrapMixinsType<PublicMixin, 'B'> & EnsureNonVoid<B>,\n  PublicD = UnwrapMixinsType<PublicMixin, 'D'> & EnsureNonVoid<D>,\n  PublicC extends ComputedOptions = UnwrapMixinsType<PublicMixin, 'C'> &\n    EnsureNonVoid<C>,\n  PublicM extends MethodOptions = UnwrapMixinsType<PublicMixin, 'M'> &\n    EnsureNonVoid<M>,\n  PublicDefaults = UnwrapMixinsType<PublicMixin, 'Defaults'> &\n    EnsureNonVoid<Defaults>\n> = ComponentPublicInstance<\n  PublicP,\n  PublicB,\n  PublicD,\n  PublicC,\n  PublicM,\n  E,\n  PublicProps,\n  PublicDefaults,\n  MakeDefaultsOptional,\n  ComponentOptionsBase<\n    P,\n    B,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    string,\n    Defaults,\n    {},\n    string,\n    S\n  >,\n  I,\n  S\n>\n\n// public properties exposed on the proxy, which is used as the render context\n// in templates (as `this` in the render option)\nexport type ComponentPublicInstance<\n  P = {}, // props type extracted from props option\n  B = {}, // raw bindings returned from setup()\n  D = {}, // return from data()\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  E extends EmitsOptions = {},\n  PublicProps = P,\n  Defaults = {},\n  MakeDefaultsOptional extends boolean = false,\n  Options = ComponentOptionsBase<any, any, any, any, any, any, any, any, any>,\n  I extends ComponentInjectOptions = {},\n  S extends SlotsType = {}\n> = {\n  $: ComponentInternalInstance\n  $data: D\n  $props: Prettify<\n    MakeDefaultsOptional extends true\n      ? Partial<Defaults> & Omit<P & PublicProps, keyof Defaults>\n      : P & PublicProps\n  >\n  $attrs: Data\n  $refs: Data\n  $slots: UnwrapSlotsType<S>\n  $root: ComponentPublicInstance | null\n  $parent: ComponentPublicInstance | null\n  $emit: EmitFn<E>\n  $el: any\n  $options: Options & MergedComponentOptionsOverride\n  $forceUpdate: () => void\n  $nextTick: typeof nextTick\n  $watch<T extends string | ((...args: any) => any)>(\n    source: T,\n    cb: T extends (...args: any) => infer R\n      ? (...args: [R, R]) => any\n      : (...args: any) => any,\n    options?: WatchOptions\n  ): WatchStopHandle\n} & P &\n  ShallowUnwrapRef<B> &\n  UnwrapNestedRefs<D> &\n  ExtractComputedReturns<C> &\n  M &\n  ComponentCustomProperties &\n  InjectToObject<I>\n\nexport type PublicPropertiesMap = Record<\n  string,\n  (i: ComponentInternalInstance) => any\n>\n\n/**\n * #2437 In Vue 3, functional components do not have a public instance proxy but\n * they exist in the internal parent chain. For code that relies on traversing\n * public $parent chains, skip functional ones and go to the parent instead.\n */\nconst getPublicInstance = (\n  i: ComponentInternalInstance | null\n): ComponentPublicInstance | ComponentInternalInstance['exposed'] | null => {\n  if (!i) return null\n  if (isStatefulComponent(i)) return getExposeProxy(i) || i.proxy\n  return getPublicInstance(i.parent)\n}\n\nexport const publicPropertiesMap: PublicPropertiesMap =\n  // Move PURE marker to new line to workaround compiler discarding it\n  // due to type annotation\n  /*#__PURE__*/ extend(Object.create(null), {\n    $: i => i,\n    $el: i => i.vnode.el,\n    $data: i => i.data,\n    $props: i => (__DEV__ ? shallowReadonly(i.props) : i.props),\n    $attrs: i => (__DEV__ ? shallowReadonly(i.attrs) : i.attrs),\n    $slots: i => (__DEV__ ? shallowReadonly(i.slots) : i.slots),\n    $refs: i => (__DEV__ ? shallowReadonly(i.refs) : i.refs),\n    $parent: i => getPublicInstance(i.parent),\n    $root: i => getPublicInstance(i.root),\n    $emit: i => i.emit,\n    $options: i => (__FEATURE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\n    $forceUpdate: i => i.f || (i.f = () => queueJob(i.update)),\n    $nextTick: i => i.n || (i.n = nextTick.bind(i.proxy!)),\n    $watch: i => (__FEATURE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\n  } as PublicPropertiesMap)\n\nif (__COMPAT__) {\n  installCompatInstanceProperties(publicPropertiesMap)\n}\n\nconst enum AccessTypes {\n  OTHER,\n  SETUP,\n  DATA,\n  PROPS,\n  CONTEXT\n}\n\nexport interface ComponentRenderContext {\n  [key: string]: any\n  _: ComponentInternalInstance\n}\n\nexport const isReservedPrefix = (key: string) => key === '_' || key === '$'\n\nconst hasSetupBinding = (state: Data, key: string) =>\n  state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn(state, key)\n\nexport const PublicInstanceProxyHandlers: ProxyHandler<any> = {\n  get({ _: instance }: ComponentRenderContext, key: string) {\n    const { ctx, setupState, data, props, accessCache, type, appContext } =\n      instance\n\n    // for internal formatters to know that this is a Vue instance\n    if (__DEV__ && key === '__isVue') {\n      return true\n    }\n\n    // data / props / ctx\n    // This getter gets called for every property access on the render context\n    // during render and is a major hotspot. The most expensive part of this\n    // is the multiple hasOwn() calls. It's much faster to do a simple property\n    // access on a plain object, so we use an accessCache object (with null\n    // prototype) to memoize what access type a key corresponds to.\n    let normalizedProps\n    if (key[0] !== '$') {\n      const n = accessCache![key]\n      if (n !== undefined) {\n        switch (n) {\n          case AccessTypes.SETUP:\n            return setupState[key]\n          case AccessTypes.DATA:\n            return data[key]\n          case AccessTypes.CONTEXT:\n            return ctx[key]\n          case AccessTypes.PROPS:\n            return props![key]\n          // default: just fallthrough\n        }\n      } else if (hasSetupBinding(setupState, key)) {\n        accessCache![key] = AccessTypes.SETUP\n        return setupState[key]\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n        accessCache![key] = AccessTypes.DATA\n        return data[key]\n      } else if (\n        // only cache other properties when instance has declared (thus stable)\n        // props\n        (normalizedProps = instance.propsOptions[0]) &&\n        hasOwn(normalizedProps, key)\n      ) {\n        accessCache![key] = AccessTypes.PROPS\n        return props![key]\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n        accessCache![key] = AccessTypes.CONTEXT\n        return ctx[key]\n      } else if (!__FEATURE_OPTIONS_API__ || shouldCacheAccess) {\n        accessCache![key] = AccessTypes.OTHER\n      }\n    }\n\n    const publicGetter = publicPropertiesMap[key]\n    let cssModule, globalProperties\n    // public $xxx properties\n    if (publicGetter) {\n      if (key === '$attrs') {\n        track(instance, TrackOpTypes.GET, key)\n        __DEV__ && markAttrsAccessed()\n      } else if (__DEV__ && key === '$slots') {\n        track(instance, TrackOpTypes.GET, key)\n      }\n      return publicGetter(instance)\n    } else if (\n      // css module (injected by vue-loader)\n      (cssModule = type.__cssModules) &&\n      (cssModule = cssModule[key])\n    ) {\n      return cssModule\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n      // user may set custom properties to `this` that start with `$`\n      accessCache![key] = AccessTypes.CONTEXT\n      return ctx[key]\n    } else if (\n      // global properties\n      ((globalProperties = appContext.config.globalProperties),\n      hasOwn(globalProperties, key))\n    ) {\n      if (__COMPAT__) {\n        const desc = Object.getOwnPropertyDescriptor(globalProperties, key)!\n        if (desc.get) {\n          return desc.get.call(instance.proxy)\n        } else {\n          const val = globalProperties[key]\n          return isFunction(val)\n            ? Object.assign(val.bind(instance.proxy), val)\n            : val\n        }\n      } else {\n        return globalProperties[key]\n      }\n    } else if (\n      __DEV__ &&\n      currentRenderingInstance &&\n      (!isString(key) ||\n        // #1091 avoid internal isRef/isVNode checks on component instance leading\n        // to infinite warning loop\n        key.indexOf('__v') !== 0)\n    ) {\n      if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {\n        warn(\n          `Property ${JSON.stringify(\n            key\n          )} must be accessed via $data because it starts with a reserved ` +\n            `character (\"$\" or \"_\") and is not proxied on the render context.`\n        )\n      } else if (instance === currentRenderingInstance) {\n        warn(\n          `Property ${JSON.stringify(key)} was accessed during render ` +\n            `but is not defined on instance.`\n        )\n      }\n    }\n  },\n\n  set(\n    { _: instance }: ComponentRenderContext,\n    key: string,\n    value: any\n  ): boolean {\n    const { data, setupState, ctx } = instance\n    if (hasSetupBinding(setupState, key)) {\n      setupState[key] = value\n      return true\n    } else if (\n      __DEV__ &&\n      setupState.__isScriptSetup &&\n      hasOwn(setupState, key)\n    ) {\n      warn(`Cannot mutate <script setup> binding \"${key}\" from Options API.`)\n      return false\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n      data[key] = value\n      return true\n    } else if (hasOwn(instance.props, key)) {\n      __DEV__ && warn(`Attempting to mutate prop \"${key}\". Props are readonly.`)\n      return false\n    }\n    if (key[0] === '$' && key.slice(1) in instance) {\n      __DEV__ &&\n        warn(\n          `Attempting to mutate public property \"${key}\". ` +\n            `Properties starting with $ are reserved and readonly.`\n        )\n      return false\n    } else {\n      if (__DEV__ && key in instance.appContext.config.globalProperties) {\n        Object.defineProperty(ctx, key, {\n          enumerable: true,\n          configurable: true,\n          value\n        })\n      } else {\n        ctx[key] = value\n      }\n    }\n    return true\n  },\n\n  has(\n    {\n      _: { data, setupState, accessCache, ctx, appContext, propsOptions }\n    }: ComponentRenderContext,\n    key: string\n  ) {\n    let normalizedProps\n    return (\n      !!accessCache![key] ||\n      (data !== EMPTY_OBJ && hasOwn(data, key)) ||\n      hasSetupBinding(setupState, key) ||\n      ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\n      hasOwn(ctx, key) ||\n      hasOwn(publicPropertiesMap, key) ||\n      hasOwn(appContext.config.globalProperties, key)\n    )\n  },\n\n  defineProperty(\n    target: ComponentRenderContext,\n    key: string,\n    descriptor: PropertyDescriptor\n  ) {\n    if (descriptor.get != null) {\n      // invalidate key cache of a getter based property #5417\n      target._.accessCache![key] = 0\n    } else if (hasOwn(descriptor, 'value')) {\n      this.set!(target, key, descriptor.value, null)\n    }\n    return Reflect.defineProperty(target, key, descriptor)\n  }\n}\n\nif (__DEV__ && !__TEST__) {\n  PublicInstanceProxyHandlers.ownKeys = (target: ComponentRenderContext) => {\n    warn(\n      `Avoid app logic that relies on enumerating keys on a component instance. ` +\n        `The keys will be empty in production mode to avoid performance overhead.`\n    )\n    return Reflect.ownKeys(target)\n  }\n}\n\nexport const RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend(\n  {},\n  PublicInstanceProxyHandlers,\n  {\n    get(target: ComponentRenderContext, key: string) {\n      // fast path for unscopables when using `with` block\n      if ((key as any) === Symbol.unscopables) {\n        return\n      }\n      return PublicInstanceProxyHandlers.get!(target, key, target)\n    },\n    has(_: ComponentRenderContext, key: string) {\n      const has = key[0] !== '_' && !isGloballyAllowed(key)\n      if (__DEV__ && !has && PublicInstanceProxyHandlers.has!(_, key)) {\n        warn(\n          `Property ${JSON.stringify(\n            key\n          )} should not start with _ which is a reserved prefix for Vue internals.`\n        )\n      }\n      return has\n    }\n  }\n)\n\n// dev only\n// In dev mode, the proxy target exposes the same properties as seen on `this`\n// for easier console inspection. In prod mode it will be an empty object so\n// these properties definitions can be skipped.\nexport function createDevRenderContext(instance: ComponentInternalInstance) {\n  const target: Record<string, any> = {}\n\n  // expose internal instance for proxy handlers\n  Object.defineProperty(target, `_`, {\n    configurable: true,\n    enumerable: false,\n    get: () => instance\n  })\n\n  // expose public properties\n  Object.keys(publicPropertiesMap).forEach(key => {\n    Object.defineProperty(target, key, {\n      configurable: true,\n      enumerable: false,\n      get: () => publicPropertiesMap[key](instance),\n      // intercepted by the proxy so no need for implementation,\n      // but needed to prevent set errors\n      set: NOOP\n    })\n  })\n\n  return target as ComponentRenderContext\n}\n\n// dev only\nexport function exposePropsOnRenderContext(\n  instance: ComponentInternalInstance\n) {\n  const {\n    ctx,\n    propsOptions: [propsOptions]\n  } = instance\n  if (propsOptions) {\n    Object.keys(propsOptions).forEach(key => {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => instance.props[key],\n        set: NOOP\n      })\n    })\n  }\n}\n\n// dev only\nexport function exposeSetupStateOnRenderContext(\n  instance: ComponentInternalInstance\n) {\n  const { ctx, setupState } = instance\n  Object.keys(toRaw(setupState)).forEach(key => {\n    if (!setupState.__isScriptSetup) {\n      if (isReservedPrefix(key[0])) {\n        warn(\n          `setup() return property ${JSON.stringify(\n            key\n          )} should not start with \"$\" or \"_\" ` +\n            `which are reserved prefixes for Vue internals.`\n        )\n        return\n      }\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => setupState[key],\n        set: NOOP\n      })\n    }\n  })\n}\n", "import {\n  isArray,\n  isPromise,\n  isFunction,\n  Prettify,\n  UnionToIntersection,\n  extend\n} from '@vue/shared'\nimport {\n  getCurrentInstance,\n  setCurrentInstance,\n  SetupContext,\n  createSetupContext,\n  unsetCurrentInstance\n} from './component'\nimport { EmitFn, EmitsOptions, ObjectEmitsOptions } from './componentEmits'\nimport {\n  ComponentOptionsMixin,\n  ComponentOptionsWithoutProps,\n  ComputedOptions,\n  MethodOptions\n} from './componentOptions'\nimport {\n  ComponentPropsOptions,\n  ComponentObjectPropsOptions,\n  ExtractPropTypes,\n  NormalizedProps,\n  PropOptions\n} from './componentProps'\nimport { warn } from './warning'\nimport { SlotsType, StrictUnwrapSlotsType } from './componentSlots'\nimport { Ref, ref } from '@vue/reactivity'\nimport { watch } from './apiWatch'\n\n// dev only\nconst warnRuntimeUsage = (method: string) =>\n  warn(\n    `${method}() is a compiler-hint helper that is only usable inside ` +\n      `<script setup> of a single file component. Its arguments should be ` +\n      `compiled away and passing it at runtime has no effect.`\n  )\n\n/**\n * Vue `<script setup>` compiler macro for declaring component props. The\n * expected argument is the same as the component `props` option.\n *\n * Example runtime declaration:\n * ```js\n * // using Array syntax\n * const props = defineProps(['foo', 'bar'])\n * // using Object syntax\n * const props = defineProps({\n *   foo: String,\n *   bar: {\n *     type: Number,\n *     required: true\n *   }\n * })\n * ```\n *\n * Equivalent type-based declaration:\n * ```ts\n * // will be compiled into equivalent runtime declarations\n * const props = defineProps<{\n *   foo?: string\n *   bar: number\n * }>()\n *\n * @see {@link https://vuejs.org/api/sfc-script-setup.html#defineprops-defineemits}\n * ```\n *\n * This is only usable inside `<script setup>`, is compiled away in the\n * output and should **not** be actually called at runtime.\n */\n// overload 1: runtime props w/ array\nexport function defineProps<PropNames extends string = string>(\n  props: PropNames[]\n): Prettify<Readonly<{ [key in PropNames]?: any }>>\n// overload 2: runtime props w/ object\nexport function defineProps<\n  PP extends ComponentObjectPropsOptions = ComponentObjectPropsOptions\n>(props: PP): Prettify<Readonly<ExtractPropTypes<PP>>>\n// overload 3: typed-based declaration\nexport function defineProps<TypeProps>(): DefineProps<\n  TypeProps,\n  BooleanKey<TypeProps>\n>\n// implementation\nexport function defineProps() {\n  if (__DEV__) {\n    warnRuntimeUsage(`defineProps`)\n  }\n  return null as any\n}\n\ntype DefineProps<T, BKeys extends keyof T> = Readonly<T> & {\n  readonly [K in BKeys]-?: boolean\n}\n\ntype BooleanKey<T, K extends keyof T = keyof T> = K extends any\n  ? [T[K]] extends [boolean | undefined]\n    ? K\n    : never\n  : never\n\n/**\n * Vue `<script setup>` compiler macro for declaring a component's emitted\n * events. The expected argument is the same as the component `emits` option.\n *\n * Example runtime declaration:\n * ```js\n * const emit = defineEmits(['change', 'update'])\n * ```\n *\n * Example type-based declaration:\n * ```ts\n * const emit = defineEmits<{\n *   (event: 'change'): void\n *   (event: 'update', id: number): void\n * }>()\n *\n * emit('change')\n * emit('update', 1)\n * ```\n *\n * This is only usable inside `<script setup>`, is compiled away in the\n * output and should **not** be actually called at runtime.\n *\n * @see {@link https://vuejs.org/api/sfc-script-setup.html#defineprops-defineemits}\n */\n// overload 1: runtime emits w/ array\nexport function defineEmits<EE extends string = string>(\n  emitOptions: EE[]\n): EmitFn<EE[]>\nexport function defineEmits<E extends EmitsOptions = EmitsOptions>(\n  emitOptions: E\n): EmitFn<E>\nexport function defineEmits<\n  T extends ((...args: any[]) => any) | Record<string, any[]>\n>(): T extends (...args: any[]) => any ? T : ShortEmits<T>\n// implementation\nexport function defineEmits() {\n  if (__DEV__) {\n    warnRuntimeUsage(`defineEmits`)\n  }\n  return null as any\n}\n\ntype RecordToUnion<T extends Record<string, any>> = T[keyof T]\n\ntype ShortEmits<T extends Record<string, any>> = UnionToIntersection<\n  RecordToUnion<{\n    [K in keyof T]: (evt: K, ...args: T[K]) => void\n  }>\n>\n\n/**\n * Vue `<script setup>` compiler macro for declaring a component's exposed\n * instance properties when it is accessed by a parent component via template\n * refs.\n *\n * `<script setup>` components are closed by default - i.e. variables inside\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\n * via `defineExpose`.\n *\n * This is only usable inside `<script setup>`, is compiled away in the\n * output and should **not** be actually called at runtime.\n *\n * @see {@link https://vuejs.org/api/sfc-script-setup.html#defineexpose}\n */\nexport function defineExpose<\n  Exposed extends Record<string, any> = Record<string, any>\n>(exposed?: Exposed) {\n  if (__DEV__) {\n    warnRuntimeUsage(`defineExpose`)\n  }\n}\n\n/**\n * Vue `<script setup>` compiler macro for declaring a component's additional\n * options. This should be used only for options that cannot be expressed via\n * Composition API - e.g. `inheritAttrs`.\n *\n * @see {@link https://vuejs.org/api/sfc-script-setup.html#defineoptions}\n */\nexport function defineOptions<\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin\n>(\n  options?: ComponentOptionsWithoutProps<\n    {},\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends\n  > & { emits?: undefined; expose?: undefined; slots?: undefined }\n): void {\n  if (__DEV__) {\n    warnRuntimeUsage(`defineOptions`)\n  }\n}\n\nexport function defineSlots<\n  S extends Record<string, any> = Record<string, any>\n>(): StrictUnwrapSlotsType<SlotsType<S>> {\n  if (__DEV__) {\n    warnRuntimeUsage(`defineSlots`)\n  }\n  return null as any\n}\n\n/**\n * (**Experimental**) Vue `<script setup>` compiler macro for declaring a\n * two-way binding prop that can be consumed via `v-model` from the parent\n * component. This will declare a prop with the same name and a corresponding\n * `update:propName` event.\n *\n * If the first argument is a string, it will be used as the prop name;\n * Otherwise the prop name will default to \"modelValue\". In both cases, you\n * can also pass an additional object which will be used as the prop's options.\n *\n * The options object can also specify an additional option, `local`. When set\n * to `true`, the ref can be locally mutated even if the parent did not pass\n * the matching `v-model`.\n *\n * @example\n * ```ts\n * // default model (consumed via `v-model`)\n * const modelValue = defineModel<string>()\n * modelValue.value = \"hello\"\n *\n * // default model with options\n * const modelValue = defineModel<string>({ required: true })\n *\n * // with specified name (consumed via `v-model:count`)\n * const count = defineModel<number>('count')\n * count.value++\n *\n * // with specified name and default value\n * const count = defineModel<number>('count', { default: 0 })\n *\n * // local mutable model, can be mutated locally\n * // even if the parent did not pass the matching `v-model`.\n * const count = defineModel<number>('count', { local: true, default: 0 })\n * ```\n */\nexport function defineModel<T>(\n  options: { required: true } & PropOptions<T> & DefineModelOptions\n): Ref<T>\nexport function defineModel<T>(\n  options: { default: any } & PropOptions<T> & DefineModelOptions\n): Ref<T>\nexport function defineModel<T>(\n  options?: PropOptions<T> & DefineModelOptions\n): Ref<T | undefined>\nexport function defineModel<T>(\n  name: string,\n  options: { required: true } & PropOptions<T> & DefineModelOptions\n): Ref<T>\nexport function defineModel<T>(\n  name: string,\n  options: { default: any } & PropOptions<T> & DefineModelOptions\n): Ref<T>\nexport function defineModel<T>(\n  name: string,\n  options?: PropOptions<T> & DefineModelOptions\n): Ref<T | undefined>\nexport function defineModel(): any {\n  if (__DEV__) {\n    warnRuntimeUsage('defineModel')\n  }\n}\n\ninterface DefineModelOptions {\n  local?: boolean\n}\n\ntype NotUndefined<T> = T extends undefined ? never : T\n\ntype InferDefaults<T> = {\n  [K in keyof T]?: InferDefault<T, T[K]>\n}\n\ntype NativeType = null | number | string | boolean | symbol | Function\n\ntype InferDefault<P, T> =\n  | ((props: P) => T & {})\n  | (T extends NativeType ? T : never)\n\ntype PropsWithDefaults<\n  T,\n  Defaults extends InferDefaults<T>,\n  BKeys extends keyof T\n> = Omit<T, keyof Defaults> & {\n  [K in keyof Defaults]-?: K extends keyof T\n    ? Defaults[K] extends undefined\n      ? T[K]\n      : NotUndefined<T[K]>\n    : never\n} & {\n  readonly [K in BKeys]-?: K extends keyof Defaults\n    ? Defaults[K] extends undefined\n      ? boolean | undefined\n      : boolean\n    : boolean\n}\n\n/**\n * Vue `<script setup>` compiler macro for providing props default values when\n * using type-based `defineProps` declaration.\n *\n * Example usage:\n * ```ts\n * withDefaults(defineProps<{\n *   size?: number\n *   labels?: string[]\n * }>(), {\n *   size: 3,\n *   labels: () => ['default label']\n * })\n * ```\n *\n * This is only usable inside `<script setup>`, is compiled away in the output\n * and should **not** be actually called at runtime.\n *\n * @see {@link https://vuejs.org/guide/typescript/composition-api.html#typing-component-props}\n */\nexport function withDefaults<\n  T,\n  BKeys extends keyof T,\n  Defaults extends InferDefaults<T>\n>(\n  props: DefineProps<T, BKeys>,\n  defaults: Defaults\n): PropsWithDefaults<T, Defaults, BKeys> {\n  if (__DEV__) {\n    warnRuntimeUsage(`withDefaults`)\n  }\n  return null as any\n}\n\nexport function useSlots(): SetupContext['slots'] {\n  return getContext().slots\n}\n\nexport function useAttrs(): SetupContext['attrs'] {\n  return getContext().attrs\n}\n\nexport function useModel<T extends Record<string, any>, K extends keyof T>(\n  props: T,\n  name: K,\n  options?: { local?: boolean }\n): Ref<T[K]>\nexport function useModel(\n  props: Record<string, any>,\n  name: string,\n  options?: { local?: boolean }\n): Ref {\n  const i = getCurrentInstance()!\n  if (__DEV__ && !i) {\n    warn(`useModel() called without active instance.`)\n    return ref() as any\n  }\n\n  if (__DEV__ && !(i.propsOptions[0] as NormalizedProps)[name]) {\n    warn(`useModel() called with prop \"${name}\" which is not declared.`)\n    return ref() as any\n  }\n\n  if (options && options.local) {\n    const proxy = ref<any>(props[name])\n\n    watch(\n      () => props[name],\n      v => (proxy.value = v)\n    )\n\n    watch(proxy, value => {\n      if (value !== props[name]) {\n        i.emit(`update:${name}`, value)\n      }\n    })\n\n    return proxy\n  } else {\n    return {\n      __v_isRef: true,\n      get value() {\n        return props[name]\n      },\n      set value(value) {\n        i.emit(`update:${name}`, value)\n      }\n    } as any\n  }\n}\n\nfunction getContext(): SetupContext {\n  const i = getCurrentInstance()!\n  if (__DEV__ && !i) {\n    warn(`useContext() called without active instance.`)\n  }\n  return i.setupContext || (i.setupContext = createSetupContext(i))\n}\n\n/**\n * @internal\n */\nexport function normalizePropsOrEmits(\n  props: ComponentPropsOptions | EmitsOptions\n) {\n  return isArray(props)\n    ? props.reduce(\n        (normalized, p) => ((normalized[p] = null), normalized),\n        {} as ComponentObjectPropsOptions | ObjectEmitsOptions\n      )\n    : props\n}\n\n/**\n * Runtime helper for merging default declarations. Imported by compiled code\n * only.\n * @internal\n */\nexport function mergeDefaults(\n  raw: ComponentPropsOptions,\n  defaults: Record<string, any>\n): ComponentObjectPropsOptions {\n  const props = normalizePropsOrEmits(raw)\n  for (const key in defaults) {\n    if (key.startsWith('__skip')) continue\n    let opt = props[key]\n    if (opt) {\n      if (isArray(opt) || isFunction(opt)) {\n        opt = props[key] = { type: opt, default: defaults[key] }\n      } else {\n        opt.default = defaults[key]\n      }\n    } else if (opt === null) {\n      opt = props[key] = { default: defaults[key] }\n    } else if (__DEV__) {\n      warn(`props default key \"${key}\" has no corresponding declaration.`)\n    }\n    if (opt && defaults[`__skip_${key}`]) {\n      opt.skipFactory = true\n    }\n  }\n  return props\n}\n\n/**\n * Runtime helper for merging model declarations.\n * Imported by compiled code only.\n * @internal\n */\nexport function mergeModels(\n  a: ComponentPropsOptions | EmitsOptions,\n  b: ComponentPropsOptions | EmitsOptions\n) {\n  if (!a || !b) return a || b\n  if (isArray(a) && isArray(b)) return a.concat(b)\n  return extend({}, normalizePropsOrEmits(a), normalizePropsOrEmits(b))\n}\n\n/**\n * Used to create a proxy for the rest element when destructuring props with\n * defineProps().\n * @internal\n */\nexport function createPropsRestProxy(\n  props: any,\n  excludedKeys: string[]\n): Record<string, any> {\n  const ret: Record<string, any> = {}\n  for (const key in props) {\n    if (!excludedKeys.includes(key)) {\n      Object.defineProperty(ret, key, {\n        enumerable: true,\n        get: () => props[key]\n      })\n    }\n  }\n  return ret\n}\n\n/**\n * `<script setup>` helper for persisting the current instance context over\n * async/await flows.\n *\n * `@vue/compiler-sfc` converts the following:\n *\n * ```ts\n * const x = await foo()\n * ```\n *\n * into:\n *\n * ```ts\n * let __temp, __restore\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\n * ```\n * @internal\n */\nexport function withAsyncContext(getAwaitable: () => any) {\n  const ctx = getCurrentInstance()!\n  if (__DEV__ && !ctx) {\n    warn(\n      `withAsyncContext called without active current instance. ` +\n        `This is likely a bug.`\n    )\n  }\n  let awaitable = getAwaitable()\n  unsetCurrentInstance()\n  if (isPromise(awaitable)) {\n    awaitable = awaitable.catch(e => {\n      setCurrentInstance(ctx)\n      throw e\n    })\n  }\n  return [awaitable, () => setCurrentInstance(ctx)]\n}\n", "import {\n  ComponentInternalInstance,\n  Data,\n  SetupContext,\n  ComponentInternalOptions,\n  Component,\n  ConcreteComponent,\n  InternalRenderFunction\n} from './component'\nimport {\n  isFunction,\n  extend,\n  isString,\n  isObject,\n  isArray,\n  NOOP,\n  isPromise,\n  LooseRequired,\n  Prettify\n} from '@vue/shared'\nimport { isRef, Ref } from '@vue/reactivity'\nimport { computed } from './apiComputed'\nimport {\n  watch,\n  WatchOptions,\n  WatchCallback,\n  createPathGetter\n} from './apiWatch'\nimport { provide, inject } from './apiInject'\nimport {\n  onBeforeMount,\n  onMounted,\n  onBeforeUpdate,\n  onUpdated,\n  onErrorCaptured,\n  onRenderTracked,\n  onBeforeUnmount,\n  onUnmounted,\n  onActivated,\n  onDeactivated,\n  onRenderTriggered,\n  DebuggerHook,\n  ErrorCapturedHook,\n  onServerPrefetch\n} from './apiLifecycle'\nimport {\n  reactive,\n  ComputedGetter,\n  WritableComputedOptions\n} from '@vue/reactivity'\nimport {\n  ComponentObjectPropsOptions,\n  ExtractPropTypes,\n  ExtractDefaultPropTypes,\n  ComponentPropsOptions\n} from './componentProps'\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\nimport { Directive } from './directives'\nimport {\n  CreateComponentPublicInstance,\n  ComponentPublicInstance,\n  isReservedPrefix,\n  IntersectionMixin,\n  UnwrapMixinsType\n} from './componentPublicInstance'\nimport { warn } from './warning'\nimport { VNodeChild } from './vnode'\nimport { callWithAsyncErrorHandling } from './errorHandling'\nimport { deepMergeData } from './compat/data'\nimport { DeprecationTypes } from './compat/compatConfig'\nimport {\n  CompatConfig,\n  isCompatEnabled,\n  softAssertCompatEnabled\n} from './compat/compatConfig'\nimport { OptionMergeFunction } from './apiCreateApp'\nimport { LifecycleHooks } from './enums'\nimport { SlotsType } from './componentSlots'\nimport { normalizePropsOrEmits } from './apiSetupHelpers'\n\n/**\n * Interface for declaring custom options.\n *\n * @example\n * ```ts\n * declare module '@vue/runtime-core' {\n *   interface ComponentCustomOptions {\n *     beforeRouteUpdate?(\n *       to: Route,\n *       from: Route,\n *       next: () => void\n *     ): void\n *   }\n * }\n * ```\n */\nexport interface ComponentCustomOptions {}\n\nexport type RenderFunction = () => VNodeChild\n\nexport interface ComponentOptionsBase<\n  Props,\n  RawBindings,\n  D,\n  C extends ComputedOptions,\n  M extends MethodOptions,\n  Mixin extends ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin,\n  E extends EmitsOptions,\n  EE extends string = string,\n  Defaults = {},\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  S extends SlotsType = {}\n> extends LegacyOptions<Props, D, C, M, Mixin, Extends, I, II>,\n    ComponentInternalOptions,\n    ComponentCustomOptions {\n  setup?: (\n    this: void,\n    props: LooseRequired<\n      Props &\n        Prettify<\n          UnwrapMixinsType<\n            IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\n            'P'\n          >\n        >\n    >,\n    ctx: SetupContext<E, S>\n  ) => Promise<RawBindings> | RawBindings | RenderFunction | void\n  name?: string\n  template?: string | object // can be a direct DOM node\n  // Note: we are intentionally using the signature-less `Function` type here\n  // since any type with signature will cause the whole inference to fail when\n  // the return expression contains reference to `this`.\n  // Luckily `render()` doesn't need any arguments nor does it care about return\n  // type.\n  render?: Function\n  components?: Record<string, Component>\n  directives?: Record<string, Directive>\n  inheritAttrs?: boolean\n  emits?: (E | EE[]) & ThisType<void>\n  slots?: S\n  // TODO infer public instance type based on exposed keys\n  expose?: string[]\n  serverPrefetch?(): void | Promise<any>\n\n  // Runtime compiler only -----------------------------------------------------\n  compilerOptions?: RuntimeCompilerOptions\n\n  // Internal ------------------------------------------------------------------\n\n  /**\n   * SSR only. This is produced by compiler-ssr and attached in compiler-sfc\n   * not user facing, so the typing is lax and for test only.\n   * @internal\n   */\n  ssrRender?: (\n    ctx: any,\n    push: (item: any) => void,\n    parentInstance: ComponentInternalInstance,\n    attrs: Data | undefined,\n    // for compiler-optimized bindings\n    $props: ComponentInternalInstance['props'],\n    $setup: ComponentInternalInstance['setupState'],\n    $data: ComponentInternalInstance['data'],\n    $options: ComponentInternalInstance['ctx']\n  ) => void\n\n  /**\n   * Only generated by compiler-sfc to mark a ssr render function inlined and\n   * returned from setup()\n   * @internal\n   */\n  __ssrInlineRender?: boolean\n\n  /**\n   * marker for AsyncComponentWrapper\n   * @internal\n   */\n  __asyncLoader?: () => Promise<ConcreteComponent>\n  /**\n   * the inner component resolved by the AsyncComponentWrapper\n   * @internal\n   */\n  __asyncResolved?: ConcreteComponent\n\n  // Type differentiators ------------------------------------------------------\n\n  // Note these are internal but need to be exposed in d.ts for type inference\n  // to work!\n\n  // type-only differentiator to separate OptionWithoutProps from a constructor\n  // type returned by defineComponent() or FunctionalComponent\n  call?: (this: unknown, ...args: unknown[]) => never\n  // type-only differentiators for built-in Vnode types\n  __isFragment?: never\n  __isTeleport?: never\n  __isSuspense?: never\n\n  __defaults?: Defaults\n}\n\n/**\n * Subset of compiler options that makes sense for the runtime.\n */\nexport interface RuntimeCompilerOptions {\n  isCustomElement?: (tag: string) => boolean\n  whitespace?: 'preserve' | 'condense'\n  comments?: boolean\n  delimiters?: [string, string]\n}\n\nexport type ComponentOptionsWithoutProps<\n  Props = {},\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = EmitsOptions,\n  EE extends string = string,\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  S extends SlotsType = {},\n  PE = Props & EmitsToProps<E>\n> = ComponentOptionsBase<\n  PE,\n  RawBindings,\n  D,\n  C,\n  M,\n  Mixin,\n  Extends,\n  E,\n  EE,\n  {},\n  I,\n  II,\n  S\n> & {\n  props?: undefined\n} & ThisType<\n    CreateComponentPublicInstance<\n      PE,\n      RawBindings,\n      D,\n      C,\n      M,\n      Mixin,\n      Extends,\n      E,\n      PE,\n      {},\n      false,\n      I,\n      S\n    >\n  >\n\nexport type ComponentOptionsWithArrayProps<\n  PropNames extends string = string,\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = EmitsOptions,\n  EE extends string = string,\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  S extends SlotsType = {},\n  Props = Prettify<Readonly<{ [key in PropNames]?: any } & EmitsToProps<E>>>\n> = ComponentOptionsBase<\n  Props,\n  RawBindings,\n  D,\n  C,\n  M,\n  Mixin,\n  Extends,\n  E,\n  EE,\n  {},\n  I,\n  II,\n  S\n> & {\n  props: PropNames[]\n} & ThisType<\n    CreateComponentPublicInstance<\n      Props,\n      RawBindings,\n      D,\n      C,\n      M,\n      Mixin,\n      Extends,\n      E,\n      Props,\n      {},\n      false,\n      I,\n      S\n    >\n  >\n\nexport type ComponentOptionsWithObjectProps<\n  PropsOptions = ComponentObjectPropsOptions,\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = EmitsOptions,\n  EE extends string = string,\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  S extends SlotsType = {},\n  Props = Prettify<Readonly<ExtractPropTypes<PropsOptions> & EmitsToProps<E>>>,\n  Defaults = ExtractDefaultPropTypes<PropsOptions>\n> = ComponentOptionsBase<\n  Props,\n  RawBindings,\n  D,\n  C,\n  M,\n  Mixin,\n  Extends,\n  E,\n  EE,\n  Defaults,\n  I,\n  II,\n  S\n> & {\n  props: PropsOptions & ThisType<void>\n} & ThisType<\n    CreateComponentPublicInstance<\n      Props,\n      RawBindings,\n      D,\n      C,\n      M,\n      Mixin,\n      Extends,\n      E,\n      Props,\n      Defaults,\n      false,\n      I,\n      S\n    >\n  >\n\nexport type ComponentOptions<\n  Props = {},\n  RawBindings = any,\n  D = any,\n  C extends ComputedOptions = any,\n  M extends MethodOptions = any,\n  Mixin extends ComponentOptionsMixin = any,\n  Extends extends ComponentOptionsMixin = any,\n  E extends EmitsOptions = any,\n  S extends SlotsType = any\n> = ComponentOptionsBase<\n  Props,\n  RawBindings,\n  D,\n  C,\n  M,\n  Mixin,\n  Extends,\n  E,\n  string,\n  S\n> &\n  ThisType<\n    CreateComponentPublicInstance<\n      {},\n      RawBindings,\n      D,\n      C,\n      M,\n      Mixin,\n      Extends,\n      E,\n      Readonly<Props>\n    >\n  >\n\nexport type ComponentOptionsMixin = ComponentOptionsBase<\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any\n>\n\nexport type ComputedOptions = Record<\n  string,\n  ComputedGetter<any> | WritableComputedOptions<any>\n>\n\nexport interface MethodOptions {\n  [key: string]: Function\n}\n\nexport type ExtractComputedReturns<T extends any> = {\n  [key in keyof T]: T[key] extends { get: (...args: any[]) => infer TReturn }\n    ? TReturn\n    : T[key] extends (...args: any[]) => infer TReturn\n    ? TReturn\n    : never\n}\n\nexport type ObjectWatchOptionItem = {\n  handler: WatchCallback | string\n} & WatchOptions\n\ntype WatchOptionItem = string | WatchCallback | ObjectWatchOptionItem\n\ntype ComponentWatchOptionItem = WatchOptionItem | WatchOptionItem[]\n\ntype ComponentWatchOptions = Record<string, ComponentWatchOptionItem>\n\nexport type ComponentProvideOptions = ObjectProvideOptions | Function\n\ntype ObjectProvideOptions = Record<string | symbol, unknown>\n\nexport type ComponentInjectOptions = string[] | ObjectInjectOptions\n\ntype ObjectInjectOptions = Record<\n  string | symbol,\n  string | symbol | { from?: string | symbol; default?: unknown }\n>\n\nexport type InjectToObject<T extends ComponentInjectOptions> =\n  T extends string[]\n    ? {\n        [K in T[number]]?: unknown\n      }\n    : T extends ObjectInjectOptions\n    ? {\n        [K in keyof T]?: unknown\n      }\n    : never\n\ninterface LegacyOptions<\n  Props,\n  D,\n  C extends ComputedOptions,\n  M extends MethodOptions,\n  Mixin extends ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin,\n  I extends ComponentInjectOptions,\n  II extends string\n> {\n  compatConfig?: CompatConfig\n\n  // allow any custom options\n  [key: string]: any\n\n  // state\n  // Limitation: we cannot expose RawBindings on the `this` context for data\n  // since that leads to some sort of circular inference and breaks ThisType\n  // for the entire component.\n  data?: (\n    this: CreateComponentPublicInstance<\n      Props,\n      {},\n      {},\n      {},\n      MethodOptions,\n      Mixin,\n      Extends\n    >,\n    vm: CreateComponentPublicInstance<\n      Props,\n      {},\n      {},\n      {},\n      MethodOptions,\n      Mixin,\n      Extends\n    >\n  ) => D\n  computed?: C\n  methods?: M\n  watch?: ComponentWatchOptions\n  provide?: ComponentProvideOptions\n  inject?: I | II[]\n\n  // assets\n  filters?: Record<string, Function>\n\n  // composition\n  mixins?: Mixin[]\n  extends?: Extends\n\n  // lifecycle\n  beforeCreate?(): void\n  created?(): void\n  beforeMount?(): void\n  mounted?(): void\n  beforeUpdate?(): void\n  updated?(): void\n  activated?(): void\n  deactivated?(): void\n  /** @deprecated use `beforeUnmount` instead */\n  beforeDestroy?(): void\n  beforeUnmount?(): void\n  /** @deprecated use `unmounted` instead */\n  destroyed?(): void\n  unmounted?(): void\n  renderTracked?: DebuggerHook\n  renderTriggered?: DebuggerHook\n  errorCaptured?: ErrorCapturedHook\n\n  /**\n   * runtime compile only\n   * @deprecated use `compilerOptions.delimiters` instead.\n   */\n  delimiters?: [string, string]\n\n  /**\n   * #3468\n   *\n   * type-only, used to assist Mixin's type inference,\n   * typescript will try to simplify the inferred `Mixin` type,\n   * with the `__differentiator`, typescript won't be able to combine different mixins,\n   * because the `__differentiator` will be different\n   */\n  __differentiator?: keyof D | keyof C | keyof M\n}\n\ntype MergedHook<T = () => void> = T | T[]\n\nexport type MergedComponentOptions = ComponentOptions &\n  MergedComponentOptionsOverride\n\nexport type MergedComponentOptionsOverride = {\n  beforeCreate?: MergedHook\n  created?: MergedHook\n  beforeMount?: MergedHook\n  mounted?: MergedHook\n  beforeUpdate?: MergedHook\n  updated?: MergedHook\n  activated?: MergedHook\n  deactivated?: MergedHook\n  /** @deprecated use `beforeUnmount` instead */\n  beforeDestroy?: MergedHook\n  beforeUnmount?: MergedHook\n  /** @deprecated use `unmounted` instead */\n  destroyed?: MergedHook\n  unmounted?: MergedHook\n  renderTracked?: MergedHook<DebuggerHook>\n  renderTriggered?: MergedHook<DebuggerHook>\n  errorCaptured?: MergedHook<ErrorCapturedHook>\n}\n\nexport type OptionTypesKeys = 'P' | 'B' | 'D' | 'C' | 'M' | 'Defaults'\n\nexport type OptionTypesType<\n  P = {},\n  B = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Defaults = {}\n> = {\n  P: P\n  B: B\n  D: D\n  C: C\n  M: M\n  Defaults: Defaults\n}\n\nconst enum OptionTypes {\n  PROPS = 'Props',\n  DATA = 'Data',\n  COMPUTED = 'Computed',\n  METHODS = 'Methods',\n  INJECT = 'Inject'\n}\n\nfunction createDuplicateChecker() {\n  const cache = Object.create(null)\n  return (type: OptionTypes, key: string) => {\n    if (cache[key]) {\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`)\n    } else {\n      cache[key] = type\n    }\n  }\n}\n\nexport let shouldCacheAccess = true\n\nexport function applyOptions(instance: ComponentInternalInstance) {\n  const options = resolveMergedOptions(instance)\n  const publicThis = instance.proxy! as any\n  const ctx = instance.ctx\n\n  // do not cache property access on public proxy during state initialization\n  shouldCacheAccess = false\n\n  // call beforeCreate first before accessing other options since\n  // the hook may mutate resolved options (#2791)\n  if (options.beforeCreate) {\n    callHook(options.beforeCreate, instance, LifecycleHooks.BEFORE_CREATE)\n  }\n\n  const {\n    // state\n    data: dataOptions,\n    computed: computedOptions,\n    methods,\n    watch: watchOptions,\n    provide: provideOptions,\n    inject: injectOptions,\n    // lifecycle\n    created,\n    beforeMount,\n    mounted,\n    beforeUpdate,\n    updated,\n    activated,\n    deactivated,\n    beforeDestroy,\n    beforeUnmount,\n    destroyed,\n    unmounted,\n    render,\n    renderTracked,\n    renderTriggered,\n    errorCaptured,\n    serverPrefetch,\n    // public API\n    expose,\n    inheritAttrs,\n    // assets\n    components,\n    directives,\n    filters\n  } = options\n\n  const checkDuplicateProperties = __DEV__ ? createDuplicateChecker() : null\n\n  if (__DEV__) {\n    const [propsOptions] = instance.propsOptions\n    if (propsOptions) {\n      for (const key in propsOptions) {\n        checkDuplicateProperties!(OptionTypes.PROPS, key)\n      }\n    }\n  }\n\n  // options initialization order (to be consistent with Vue 2):\n  // - props (already done outside of this function)\n  // - inject\n  // - methods\n  // - data (deferred since it relies on `this` access)\n  // - computed\n  // - watch (deferred since it relies on `this` access)\n\n  if (injectOptions) {\n    resolveInjections(injectOptions, ctx, checkDuplicateProperties)\n  }\n\n  if (methods) {\n    for (const key in methods) {\n      const methodHandler = (methods as MethodOptions)[key]\n      if (isFunction(methodHandler)) {\n        // In dev mode, we use the `createRenderContext` function to define\n        // methods to the proxy target, and those are read-only but\n        // reconfigurable, so it needs to be redefined here\n        if (__DEV__) {\n          Object.defineProperty(ctx, key, {\n            value: methodHandler.bind(publicThis),\n            configurable: true,\n            enumerable: true,\n            writable: true\n          })\n        } else {\n          ctx[key] = methodHandler.bind(publicThis)\n        }\n        if (__DEV__) {\n          checkDuplicateProperties!(OptionTypes.METHODS, key)\n        }\n      } else if (__DEV__) {\n        warn(\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\n            `Did you reference the function correctly?`\n        )\n      }\n    }\n  }\n\n  if (dataOptions) {\n    if (__DEV__ && !isFunction(dataOptions)) {\n      warn(\n        `The data option must be a function. ` +\n          `Plain object usage is no longer supported.`\n      )\n    }\n    const data = dataOptions.call(publicThis, publicThis)\n    if (__DEV__ && isPromise(data)) {\n      warn(\n        `data() returned a Promise - note data() cannot be async; If you ` +\n          `intend to perform data fetching before component renders, use ` +\n          `async setup() + <Suspense>.`\n      )\n    }\n    if (!isObject(data)) {\n      __DEV__ && warn(`data() should return an object.`)\n    } else {\n      instance.data = reactive(data)\n      if (__DEV__) {\n        for (const key in data) {\n          checkDuplicateProperties!(OptionTypes.DATA, key)\n          // expose data on ctx during dev\n          if (!isReservedPrefix(key[0])) {\n            Object.defineProperty(ctx, key, {\n              configurable: true,\n              enumerable: true,\n              get: () => data[key],\n              set: NOOP\n            })\n          }\n        }\n      }\n    }\n  }\n\n  // state initialization complete at this point - start caching access\n  shouldCacheAccess = true\n\n  if (computedOptions) {\n    for (const key in computedOptions) {\n      const opt = (computedOptions as ComputedOptions)[key]\n      const get = isFunction(opt)\n        ? opt.bind(publicThis, publicThis)\n        : isFunction(opt.get)\n        ? opt.get.bind(publicThis, publicThis)\n        : NOOP\n      if (__DEV__ && get === NOOP) {\n        warn(`Computed property \"${key}\" has no getter.`)\n      }\n      const set =\n        !isFunction(opt) && isFunction(opt.set)\n          ? opt.set.bind(publicThis)\n          : __DEV__\n          ? () => {\n              warn(\n                `Write operation failed: computed property \"${key}\" is readonly.`\n              )\n            }\n          : NOOP\n      const c = computed({\n        get,\n        set\n      })\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => c.value,\n        set: v => (c.value = v)\n      })\n      if (__DEV__) {\n        checkDuplicateProperties!(OptionTypes.COMPUTED, key)\n      }\n    }\n  }\n\n  if (watchOptions) {\n    for (const key in watchOptions) {\n      createWatcher(watchOptions[key], ctx, publicThis, key)\n    }\n  }\n\n  if (provideOptions) {\n    const provides = isFunction(provideOptions)\n      ? provideOptions.call(publicThis)\n      : provideOptions\n    Reflect.ownKeys(provides).forEach(key => {\n      provide(key, provides[key])\n    })\n  }\n\n  if (created) {\n    callHook(created, instance, LifecycleHooks.CREATED)\n  }\n\n  function registerLifecycleHook(\n    register: Function,\n    hook?: Function | Function[]\n  ) {\n    if (isArray(hook)) {\n      hook.forEach(_hook => register(_hook.bind(publicThis)))\n    } else if (hook) {\n      register(hook.bind(publicThis))\n    }\n  }\n\n  registerLifecycleHook(onBeforeMount, beforeMount)\n  registerLifecycleHook(onMounted, mounted)\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate)\n  registerLifecycleHook(onUpdated, updated)\n  registerLifecycleHook(onActivated, activated)\n  registerLifecycleHook(onDeactivated, deactivated)\n  registerLifecycleHook(onErrorCaptured, errorCaptured)\n  registerLifecycleHook(onRenderTracked, renderTracked)\n  registerLifecycleHook(onRenderTriggered, renderTriggered)\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount)\n  registerLifecycleHook(onUnmounted, unmounted)\n  registerLifecycleHook(onServerPrefetch, serverPrefetch)\n\n  if (__COMPAT__) {\n    if (\n      beforeDestroy &&\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_BEFORE_DESTROY, instance)\n    ) {\n      registerLifecycleHook(onBeforeUnmount, beforeDestroy)\n    }\n    if (\n      destroyed &&\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_DESTROYED, instance)\n    ) {\n      registerLifecycleHook(onUnmounted, destroyed)\n    }\n  }\n\n  if (isArray(expose)) {\n    if (expose.length) {\n      const exposed = instance.exposed || (instance.exposed = {})\n      expose.forEach(key => {\n        Object.defineProperty(exposed, key, {\n          get: () => publicThis[key],\n          set: val => (publicThis[key] = val)\n        })\n      })\n    } else if (!instance.exposed) {\n      instance.exposed = {}\n    }\n  }\n\n  // options that are handled when creating the instance but also need to be\n  // applied from mixins\n  if (render && instance.render === NOOP) {\n    instance.render = render as InternalRenderFunction\n  }\n  if (inheritAttrs != null) {\n    instance.inheritAttrs = inheritAttrs\n  }\n\n  // asset options.\n  if (components) instance.components = components as any\n  if (directives) instance.directives = directives\n  if (\n    __COMPAT__ &&\n    filters &&\n    isCompatEnabled(DeprecationTypes.FILTERS, instance)\n  ) {\n    instance.filters = filters\n  }\n}\n\nexport function resolveInjections(\n  injectOptions: ComponentInjectOptions,\n  ctx: any,\n  checkDuplicateProperties = NOOP as any\n) {\n  if (isArray(injectOptions)) {\n    injectOptions = normalizeInject(injectOptions)!\n  }\n  for (const key in injectOptions) {\n    const opt = injectOptions[key]\n    let injected: unknown\n    if (isObject(opt)) {\n      if ('default' in opt) {\n        injected = inject(\n          opt.from || key,\n          opt.default,\n          true /* treat default function as factory */\n        )\n      } else {\n        injected = inject(opt.from || key)\n      }\n    } else {\n      injected = inject(opt)\n    }\n    if (isRef(injected)) {\n      // unwrap injected refs (ref #4196)\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => (injected as Ref).value,\n        set: v => ((injected as Ref).value = v)\n      })\n    } else {\n      ctx[key] = injected\n    }\n    if (__DEV__) {\n      checkDuplicateProperties!(OptionTypes.INJECT, key)\n    }\n  }\n}\n\nfunction callHook(\n  hook: Function,\n  instance: ComponentInternalInstance,\n  type: LifecycleHooks\n) {\n  callWithAsyncErrorHandling(\n    isArray(hook)\n      ? hook.map(h => h.bind(instance.proxy!))\n      : hook.bind(instance.proxy!),\n    instance,\n    type\n  )\n}\n\nexport function createWatcher(\n  raw: ComponentWatchOptionItem,\n  ctx: Data,\n  publicThis: ComponentPublicInstance,\n  key: string\n) {\n  const getter = key.includes('.')\n    ? createPathGetter(publicThis, key)\n    : () => (publicThis as any)[key]\n  if (isString(raw)) {\n    const handler = ctx[raw]\n    if (isFunction(handler)) {\n      watch(getter, handler as WatchCallback)\n    } else if (__DEV__) {\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler)\n    }\n  } else if (isFunction(raw)) {\n    watch(getter, raw.bind(publicThis))\n  } else if (isObject(raw)) {\n    if (isArray(raw)) {\n      raw.forEach(r => createWatcher(r, ctx, publicThis, key))\n    } else {\n      const handler = isFunction(raw.handler)\n        ? raw.handler.bind(publicThis)\n        : (ctx[raw.handler] as WatchCallback)\n      if (isFunction(handler)) {\n        watch(getter, handler, raw)\n      } else if (__DEV__) {\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler)\n      }\n    }\n  } else if (__DEV__) {\n    warn(`Invalid watch option: \"${key}\"`, raw)\n  }\n}\n\n/**\n * Resolve merged options and cache it on the component.\n * This is done only once per-component since the merging does not involve\n * instances.\n */\nexport function resolveMergedOptions(\n  instance: ComponentInternalInstance\n): MergedComponentOptions {\n  const base = instance.type as ComponentOptions\n  const { mixins, extends: extendsOptions } = base\n  const {\n    mixins: globalMixins,\n    optionsCache: cache,\n    config: { optionMergeStrategies }\n  } = instance.appContext\n  const cached = cache.get(base)\n\n  let resolved: MergedComponentOptions\n\n  if (cached) {\n    resolved = cached\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\n    if (\n      __COMPAT__ &&\n      isCompatEnabled(DeprecationTypes.PRIVATE_APIS, instance)\n    ) {\n      resolved = extend({}, base) as MergedComponentOptions\n      resolved.parent = instance.parent && instance.parent.proxy\n      resolved.propsData = instance.vnode.props\n    } else {\n      resolved = base as MergedComponentOptions\n    }\n  } else {\n    resolved = {}\n    if (globalMixins.length) {\n      globalMixins.forEach(m =>\n        mergeOptions(resolved, m, optionMergeStrategies, true)\n      )\n    }\n    mergeOptions(resolved, base, optionMergeStrategies)\n  }\n  if (isObject(base)) {\n    cache.set(base, resolved)\n  }\n  return resolved\n}\n\nexport function mergeOptions(\n  to: any,\n  from: any,\n  strats: Record<string, OptionMergeFunction>,\n  asMixin = false\n) {\n  if (__COMPAT__ && isFunction(from)) {\n    from = from.options\n  }\n\n  const { mixins, extends: extendsOptions } = from\n\n  if (extendsOptions) {\n    mergeOptions(to, extendsOptions, strats, true)\n  }\n  if (mixins) {\n    mixins.forEach((m: ComponentOptionsMixin) =>\n      mergeOptions(to, m, strats, true)\n    )\n  }\n\n  for (const key in from) {\n    if (asMixin && key === 'expose') {\n      __DEV__ &&\n        warn(\n          `\"expose\" option is ignored when declared in mixins or extends. ` +\n            `It should only be declared in the base component itself.`\n        )\n    } else {\n      const strat = internalOptionMergeStrats[key] || (strats && strats[key])\n      to[key] = strat ? strat(to[key], from[key]) : from[key]\n    }\n  }\n  return to\n}\n\nexport const internalOptionMergeStrats: Record<string, Function> = {\n  data: mergeDataFn,\n  props: mergeEmitsOrPropsOptions,\n  emits: mergeEmitsOrPropsOptions,\n  // objects\n  methods: mergeObjectOptions,\n  computed: mergeObjectOptions,\n  // lifecycle\n  beforeCreate: mergeAsArray,\n  created: mergeAsArray,\n  beforeMount: mergeAsArray,\n  mounted: mergeAsArray,\n  beforeUpdate: mergeAsArray,\n  updated: mergeAsArray,\n  beforeDestroy: mergeAsArray,\n  beforeUnmount: mergeAsArray,\n  destroyed: mergeAsArray,\n  unmounted: mergeAsArray,\n  activated: mergeAsArray,\n  deactivated: mergeAsArray,\n  errorCaptured: mergeAsArray,\n  serverPrefetch: mergeAsArray,\n  // assets\n  components: mergeObjectOptions,\n  directives: mergeObjectOptions,\n  // watch\n  watch: mergeWatchOptions,\n  // provide / inject\n  provide: mergeDataFn,\n  inject: mergeInject\n}\n\nif (__COMPAT__) {\n  internalOptionMergeStrats.filters = mergeObjectOptions\n}\n\nfunction mergeDataFn(to: any, from: any) {\n  if (!from) {\n    return to\n  }\n  if (!to) {\n    return from\n  }\n  return function mergedDataFn(this: ComponentPublicInstance) {\n    return (\n      __COMPAT__ && isCompatEnabled(DeprecationTypes.OPTIONS_DATA_MERGE, null)\n        ? deepMergeData\n        : extend\n    )(\n      isFunction(to) ? to.call(this, this) : to,\n      isFunction(from) ? from.call(this, this) : from\n    )\n  }\n}\n\nfunction mergeInject(\n  to: ComponentInjectOptions | undefined,\n  from: ComponentInjectOptions\n) {\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from))\n}\n\nfunction normalizeInject(\n  raw: ComponentInjectOptions | undefined\n): ObjectInjectOptions | undefined {\n  if (isArray(raw)) {\n    const res: ObjectInjectOptions = {}\n    for (let i = 0; i < raw.length; i++) {\n      res[raw[i]] = raw[i]\n    }\n    return res\n  }\n  return raw\n}\n\nfunction mergeAsArray<T = Function>(to: T[] | T | undefined, from: T | T[]) {\n  return to ? [...new Set([].concat(to as any, from as any))] : from\n}\n\nfunction mergeObjectOptions(to: Object | undefined, from: Object | undefined) {\n  return to ? extend(Object.create(null), to, from) : from\n}\n\nfunction mergeEmitsOrPropsOptions(\n  to: EmitsOptions | undefined,\n  from: EmitsOptions | undefined\n): EmitsOptions | undefined\nfunction mergeEmitsOrPropsOptions(\n  to: ComponentPropsOptions | undefined,\n  from: ComponentPropsOptions | undefined\n): ComponentPropsOptions | undefined\nfunction mergeEmitsOrPropsOptions(\n  to: ComponentPropsOptions | EmitsOptions | undefined,\n  from: ComponentPropsOptions | EmitsOptions | undefined\n) {\n  if (to) {\n    if (isArray(to) && isArray(from)) {\n      return [...new Set([...to, ...from])]\n    }\n    return extend(\n      Object.create(null),\n      normalizePropsOrEmits(to),\n      normalizePropsOrEmits(from ?? {})\n    )\n  } else {\n    return from\n  }\n}\n\nfunction mergeWatchOptions(\n  to: ComponentWatchOptions | undefined,\n  from: ComponentWatchOptions | undefined\n) {\n  if (!to) return from\n  if (!from) return to\n  const merged = extend(Object.create(null), to)\n  for (const key in from) {\n    merged[key] = mergeAsArray(to[key], from[key])\n  }\n  return merged\n}\n", "import {\n  ConcreteComponent,\n  Data,\n  validateComponentName,\n  Component,\n  ComponentInternalInstance,\n  getExposeProxy\n} from './component'\nimport {\n  ComponentOptions,\n  MergedComponentOptions,\n  RuntimeCompilerOptions\n} from './componentOptions'\nimport {\n  ComponentCustomProperties,\n  ComponentPublicInstance\n} from './componentPublicInstance'\nimport { Directive, validateDirectiveName } from './directives'\nimport { RootRenderFunction } from './renderer'\nimport { InjectionKey } from './apiInject'\nimport { warn } from './warning'\nimport { createVNode, cloneVNode, VNode } from './vnode'\nimport { RootHydrateFunction } from './hydration'\nimport { devtoolsInitApp, devtoolsUnmountApp } from './devtools'\nimport { isFunction, NO, isObject, extend } from '@vue/shared'\nimport { version } from '.'\nimport { installAppCompatProperties } from './compat/global'\nimport { NormalizedPropsOptions } from './componentProps'\nimport { ObjectEmitsOptions } from './componentEmits'\n\nexport interface App<HostElement = any> {\n  version: string\n  config: AppConfig\n\n  use<Options extends unknown[]>(\n    plugin: Plugin<Options>,\n    ...options: Options\n  ): this\n  use<Options>(plugin: Plugin<Options>, options: Options): this\n\n  mixin(mixin: ComponentOptions): this\n  component(name: string): Component | undefined\n  component(name: string, component: Component): this\n  directive(name: string): Directive | undefined\n  directive(name: string, directive: Directive): this\n  mount(\n    rootContainer: HostElement | string,\n    isHydrate?: boolean,\n    isSVG?: boolean\n  ): ComponentPublicInstance\n  unmount(): void\n  provide<T>(key: InjectionKey<T> | string, value: T): this\n\n  /**\n   * Runs a function with the app as active instance. This allows using of `inject()` within the function to get access\n   * to variables provided via `app.provide()`.\n   *\n   * @param fn - function to run with the app as active instance\n   */\n  runWithContext<T>(fn: () => T): T\n\n  // internal, but we need to expose these for the server-renderer and devtools\n  _uid: number\n  _component: ConcreteComponent\n  _props: Data | null\n  _container: HostElement | null\n  _context: AppContext\n  _instance: ComponentInternalInstance | null\n\n  /**\n   * v2 compat only\n   */\n  filter?(name: string): Function | undefined\n  filter?(name: string, filter: Function): this\n\n  /**\n   * @internal v3 compat only\n   */\n  _createRoot?(options: ComponentOptions): ComponentPublicInstance\n}\n\nexport type OptionMergeFunction = (to: unknown, from: unknown) => any\n\nexport interface AppConfig {\n  // @private\n  readonly isNativeTag?: (tag: string) => boolean\n\n  performance: boolean\n  optionMergeStrategies: Record<string, OptionMergeFunction>\n  globalProperties: ComponentCustomProperties & Record<string, any>\n  errorHandler?: (\n    err: unknown,\n    instance: ComponentPublicInstance | null,\n    info: string\n  ) => void\n  warnHandler?: (\n    msg: string,\n    instance: ComponentPublicInstance | null,\n    trace: string\n  ) => void\n\n  /**\n   * Options to pass to `@vue/compiler-dom`.\n   * Only supported in runtime compiler build.\n   */\n  compilerOptions: RuntimeCompilerOptions\n\n  /**\n   * @deprecated use config.compilerOptions.isCustomElement\n   */\n  isCustomElement?: (tag: string) => boolean\n\n  // TODO remove in 3.4\n  /**\n   * Temporary config for opt-in to unwrap injected refs.\n   * @deprecated this no longer has effect. 3.3 always unwraps injected refs.\n   */\n  unwrapInjectedRef?: boolean\n}\n\nexport interface AppContext {\n  app: App // for devtools\n  config: AppConfig\n  mixins: ComponentOptions[]\n  components: Record<string, Component>\n  directives: Record<string, Directive>\n  provides: Record<string | symbol, any>\n\n  /**\n   * Cache for merged/normalized component options\n   * Each app instance has its own cache because app-level global mixins and\n   * optionMergeStrategies can affect merge behavior.\n   * @internal\n   */\n  optionsCache: WeakMap<ComponentOptions, MergedComponentOptions>\n  /**\n   * Cache for normalized props options\n   * @internal\n   */\n  propsCache: WeakMap<ConcreteComponent, NormalizedPropsOptions>\n  /**\n   * Cache for normalized emits options\n   * @internal\n   */\n  emitsCache: WeakMap<ConcreteComponent, ObjectEmitsOptions | null>\n  /**\n   * HMR only\n   * @internal\n   */\n  reload?: () => void\n  /**\n   * v2 compat only\n   * @internal\n   */\n  filters?: Record<string, Function>\n}\n\ntype PluginInstallFunction<Options> = Options extends unknown[]\n  ? (app: App, ...options: Options) => any\n  : (app: App, options: Options) => any\n\nexport type Plugin<Options = any[]> =\n  | (PluginInstallFunction<Options> & {\n      install?: PluginInstallFunction<Options>\n    })\n  | {\n      install: PluginInstallFunction<Options>\n    }\n\nexport function createAppContext(): AppContext {\n  return {\n    app: null as any,\n    config: {\n      isNativeTag: NO,\n      performance: false,\n      globalProperties: {},\n      optionMergeStrategies: {},\n      errorHandler: undefined,\n      warnHandler: undefined,\n      compilerOptions: {}\n    },\n    mixins: [],\n    components: {},\n    directives: {},\n    provides: Object.create(null),\n    optionsCache: new WeakMap(),\n    propsCache: new WeakMap(),\n    emitsCache: new WeakMap()\n  }\n}\n\nexport type CreateAppFunction<HostElement> = (\n  rootComponent: Component,\n  rootProps?: Data | null\n) => App<HostElement>\n\nlet uid = 0\n\nexport function createAppAPI<HostElement>(\n  render: RootRenderFunction<HostElement>,\n  hydrate?: RootHydrateFunction\n): CreateAppFunction<HostElement> {\n  return function createApp(rootComponent, rootProps = null) {\n    if (!isFunction(rootComponent)) {\n      rootComponent = extend({}, rootComponent)\n    }\n\n    if (rootProps != null && !isObject(rootProps)) {\n      __DEV__ && warn(`root props passed to app.mount() must be an object.`)\n      rootProps = null\n    }\n\n    const context = createAppContext()\n\n    // TODO remove in 3.4\n    if (__DEV__) {\n      Object.defineProperty(context.config, 'unwrapInjectedRef', {\n        get() {\n          return true\n        },\n        set() {\n          warn(\n            `app.config.unwrapInjectedRef has been deprecated. ` +\n              `3.3 now always unwraps injected refs in Options API.`\n          )\n        }\n      })\n    }\n\n    const installedPlugins = new Set()\n\n    let isMounted = false\n\n    const app: App = (context.app = {\n      _uid: uid++,\n      _component: rootComponent as ConcreteComponent,\n      _props: rootProps,\n      _container: null,\n      _context: context,\n      _instance: null,\n\n      version,\n\n      get config() {\n        return context.config\n      },\n\n      set config(v) {\n        if (__DEV__) {\n          warn(\n            `app.config cannot be replaced. Modify individual options instead.`\n          )\n        }\n      },\n\n      use(plugin: Plugin, ...options: any[]) {\n        if (installedPlugins.has(plugin)) {\n          __DEV__ && warn(`Plugin has already been applied to target app.`)\n        } else if (plugin && isFunction(plugin.install)) {\n          installedPlugins.add(plugin)\n          plugin.install(app, ...options)\n        } else if (isFunction(plugin)) {\n          installedPlugins.add(plugin)\n          plugin(app, ...options)\n        } else if (__DEV__) {\n          warn(\n            `A plugin must either be a function or an object with an \"install\" ` +\n              `function.`\n          )\n        }\n        return app\n      },\n\n      mixin(mixin: ComponentOptions) {\n        if (__FEATURE_OPTIONS_API__) {\n          if (!context.mixins.includes(mixin)) {\n            context.mixins.push(mixin)\n          } else if (__DEV__) {\n            warn(\n              'Mixin has already been applied to target app' +\n                (mixin.name ? `: ${mixin.name}` : '')\n            )\n          }\n        } else if (__DEV__) {\n          warn('Mixins are only available in builds supporting Options API')\n        }\n        return app\n      },\n\n      component(name: string, component?: Component): any {\n        if (__DEV__) {\n          validateComponentName(name, context.config)\n        }\n        if (!component) {\n          return context.components[name]\n        }\n        if (__DEV__ && context.components[name]) {\n          warn(`Component \"${name}\" has already been registered in target app.`)\n        }\n        context.components[name] = component\n        return app\n      },\n\n      directive(name: string, directive?: Directive) {\n        if (__DEV__) {\n          validateDirectiveName(name)\n        }\n\n        if (!directive) {\n          return context.directives[name] as any\n        }\n        if (__DEV__ && context.directives[name]) {\n          warn(`Directive \"${name}\" has already been registered in target app.`)\n        }\n        context.directives[name] = directive\n        return app\n      },\n\n      mount(\n        rootContainer: HostElement,\n        isHydrate?: boolean,\n        isSVG?: boolean\n      ): any {\n        if (!isMounted) {\n          // #5571\n          if (__DEV__ && (rootContainer as any).__vue_app__) {\n            warn(\n              `There is already an app instance mounted on the host container.\\n` +\n                ` If you want to mount another app on the same host container,` +\n                ` you need to unmount the previous app by calling \\`app.unmount()\\` first.`\n            )\n          }\n          const vnode = createVNode(rootComponent, rootProps)\n          // store app context on the root VNode.\n          // this will be set on the root instance on initial mount.\n          vnode.appContext = context\n\n          // HMR root reload\n          if (__DEV__) {\n            context.reload = () => {\n              render(cloneVNode(vnode), rootContainer, isSVG)\n            }\n          }\n\n          if (isHydrate && hydrate) {\n            hydrate(vnode as VNode<Node, Element>, rootContainer as any)\n          } else {\n            render(vnode, rootContainer, isSVG)\n          }\n          isMounted = true\n          app._container = rootContainer\n          // for devtools and telemetry\n          ;(rootContainer as any).__vue_app__ = app\n\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n            app._instance = vnode.component\n            devtoolsInitApp(app, version)\n          }\n\n          return getExposeProxy(vnode.component!) || vnode.component!.proxy\n        } else if (__DEV__) {\n          warn(\n            `App has already been mounted.\\n` +\n              `If you want to remount the same app, move your app creation logic ` +\n              `into a factory function and create fresh app instances for each ` +\n              `mount - e.g. \\`const createMyApp = () => createApp(App)\\``\n          )\n        }\n      },\n\n      unmount() {\n        if (isMounted) {\n          render(null, app._container)\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n            app._instance = null\n            devtoolsUnmountApp(app)\n          }\n          delete app._container.__vue_app__\n        } else if (__DEV__) {\n          warn(`Cannot unmount an app that is not mounted.`)\n        }\n      },\n\n      provide(key, value) {\n        if (__DEV__ && (key as string | symbol) in context.provides) {\n          warn(\n            `App already provides property with key \"${String(key)}\". ` +\n              `It will be overwritten with the new value.`\n          )\n        }\n\n        context.provides[key as string | symbol] = value\n\n        return app\n      },\n\n      runWithContext(fn) {\n        currentApp = app\n        try {\n          return fn()\n        } finally {\n          currentApp = null\n        }\n      }\n    })\n\n    if (__COMPAT__) {\n      installAppCompatProperties(app, context, render)\n    }\n\n    return app\n  }\n}\n\n/**\n * @internal Used to identify the current app when using `inject()` within\n * `app.runWithContext()`.\n */\nexport let currentApp: App<unknown> | null = null\n", "import { isFunction } from '@vue/shared'\nimport { currentInstance } from './component'\nimport { currentRenderingInstance } from './componentRenderContext'\nimport { currentApp } from './apiCreateApp'\nimport { warn } from './warning'\n\nexport interface InjectionKey<T> extends Symbol {}\n\nexport function provide<T, K = InjectionKey<T> | string | number>(\n  key: K,\n  value: K extends InjectionKey<infer V> ? V : T\n) {\n  if (!currentInstance) {\n    if (__DEV__) {\n      warn(`provide() can only be used inside setup().`)\n    }\n  } else {\n    let provides = currentInstance.provides\n    // by default an instance inherits its parent's provides object\n    // but when it needs to provide values of its own, it creates its\n    // own provides object using parent provides object as prototype.\n    // this way in `inject` we can simply look up injections from direct\n    // parent and let the prototype chain do the work.\n    const parentProvides =\n      currentInstance.parent && currentInstance.parent.provides\n    if (parentProvides === provides) {\n      provides = currentInstance.provides = Object.create(parentProvides)\n    }\n    // TS doesn't allow symbol as index type\n    provides[key as string] = value\n  }\n}\n\nexport function inject<T>(key: InjectionKey<T> | string): T | undefined\nexport function inject<T>(\n  key: InjectionKey<T> | string,\n  defaultValue: T,\n  treatDefaultAsFactory?: false\n): T\nexport function inject<T>(\n  key: InjectionKey<T> | string,\n  defaultValue: T | (() => T),\n  treatDefaultAsFactory: true\n): T\nexport function inject(\n  key: InjectionKey<any> | string,\n  defaultValue?: unknown,\n  treatDefaultAsFactory = false\n) {\n  // fallback to `currentRenderingInstance` so that this can be called in\n  // a functional component\n  const instance = currentInstance || currentRenderingInstance\n\n  // also support looking up from app-level provides w/ `app.runWithContext()`\n  if (instance || currentApp) {\n    // #2400\n    // to support `app.use` plugins,\n    // fallback to appContext's `provides` if the instance is at root\n    const provides = instance\n      ? instance.parent == null\n        ? instance.vnode.appContext && instance.vnode.appContext.provides\n        : instance.parent.provides\n      : currentApp!._context.provides\n\n    if (provides && (key as string | symbol) in provides) {\n      // TS doesn't allow symbol as index type\n      return provides[key as string]\n    } else if (arguments.length > 1) {\n      return treatDefaultAsFactory && isFunction(defaultValue)\n        ? defaultValue.call(instance && instance.proxy)\n        : defaultValue\n    } else if (__DEV__) {\n      warn(`injection \"${String(key)}\" not found.`)\n    }\n  } else if (__DEV__) {\n    warn(`inject() can only be used inside setup() or functional components.`)\n  }\n}\n\n/**\n * Returns true if `inject()` can be used without warning about being called in the wrong place (e.g. outside of\n * setup()). This is used by libraries that want to use `inject()` internally without triggering a warning to the end\n * user. One example is `useRoute()` in `vue-router`.\n */\nexport function hasInjectionContext(): boolean {\n  return !!(currentInstance || currentRenderingInstance || currentApp)\n}\n", "import {\n  toRaw,\n  shallowReactive,\n  trigger,\n  TriggerOpTypes\n} from '@vue/reactivity'\nimport {\n  EMPTY_OBJ,\n  camelize,\n  hyphenate,\n  capitalize,\n  isString,\n  isFunction,\n  isArray,\n  isObject,\n  hasOwn,\n  toRawType,\n  PatchFlags,\n  makeMap,\n  isReservedProp,\n  EMPTY_ARR,\n  def,\n  extend,\n  isOn,\n  IfAny\n} from '@vue/shared'\nimport { warn } from './warning'\nimport {\n  Data,\n  ComponentInternalInstance,\n  ComponentOptions,\n  ConcreteComponent,\n  setCurrentInstance,\n  unsetCurrentInstance\n} from './component'\nimport { isEmitListener } from './componentEmits'\nimport { InternalObjectKey } from './vnode'\nimport { AppContext } from './apiCreateApp'\nimport { createPropsDefaultThis } from './compat/props'\nimport { isCompatEnabled, softAssertCompatEnabled } from './compat/compatConfig'\nimport { DeprecationTypes } from './compat/compatConfig'\nimport { shouldSkipAttr } from './compat/attrsFallthrough'\n\nexport type ComponentPropsOptions<P = Data> =\n  | ComponentObjectPropsOptions<P>\n  | string[]\n\nexport type ComponentObjectPropsOptions<P = Data> = {\n  [K in keyof P]: Prop<P[K]> | null\n}\n\nexport type Prop<T, D = T> = PropOptions<T, D> | PropType<T>\n\ntype DefaultFactory<T> = (props: Data) => T | null | undefined\n\nexport interface PropOptions<T = any, D = T> {\n  type?: PropType<T> | true | null\n  required?: boolean\n  default?: D | DefaultFactory<D> | null | undefined | object\n  validator?(value: unknown): boolean\n  /**\n   * @internal\n   */\n  skipCheck?: boolean\n  /**\n   * @internal\n   */\n  skipFactory?: boolean\n}\n\nexport type PropType<T> = PropConstructor<T> | PropConstructor<T>[]\n\ntype PropConstructor<T = any> =\n  | { new (...args: any[]): T & {} }\n  | { (): T }\n  | PropMethod<T>\n\ntype PropMethod<T, TConstructor = any> = [T] extends [\n  ((...args: any) => any) | undefined\n] // if is function with args, allowing non-required functions\n  ? { new (): TConstructor; (): T; readonly prototype: TConstructor } // Create Function like constructor\n  : never\n\ntype RequiredKeys<T> = {\n  [K in keyof T]: T[K] extends\n    | { required: true }\n    | { default: any }\n    // don't mark Boolean props as undefined\n    | BooleanConstructor\n    | { type: BooleanConstructor }\n    ? T[K] extends { default: undefined | (() => undefined) }\n      ? never\n      : K\n    : never\n}[keyof T]\n\ntype OptionalKeys<T> = Exclude<keyof T, RequiredKeys<T>>\n\ntype DefaultKeys<T> = {\n  [K in keyof T]: T[K] extends\n    | { default: any }\n    // Boolean implicitly defaults to false\n    | BooleanConstructor\n    | { type: BooleanConstructor }\n    ? T[K] extends { type: BooleanConstructor; required: true } // not default if Boolean is marked as required\n      ? never\n      : K\n    : never\n}[keyof T]\n\ntype InferPropType<T> = [T] extends [null]\n  ? any // null & true would fail to infer\n  : [T] extends [{ type: null | true }]\n  ? any // As TS issue https://github.com/Microsoft/TypeScript/issues/14829 // somehow `ObjectConstructor` when inferred from { (): T } becomes `any` // `BooleanConstructor` when inferred from PropConstructor(with PropMethod) becomes `Boolean`\n  : [T] extends [ObjectConstructor | { type: ObjectConstructor }]\n  ? Record<string, any>\n  : [T] extends [BooleanConstructor | { type: BooleanConstructor }]\n  ? boolean\n  : [T] extends [DateConstructor | { type: DateConstructor }]\n  ? Date\n  : [T] extends [(infer U)[] | { type: (infer U)[] }]\n  ? U extends DateConstructor\n    ? Date | InferPropType<U>\n    : InferPropType<U>\n  : [T] extends [Prop<infer V, infer D>]\n  ? unknown extends V\n    ? IfAny<V, V, D>\n    : V\n  : T\n\n/**\n * Extract prop types from a runtime props options object.\n * The extracted types are **internal** - i.e. the resolved props received by\n * the component.\n * - Boolean props are always present\n * - Props with default values are always present\n *\n * To extract accepted props from the parent, use {@link ExtractPublicPropTypes}.\n */\nexport type ExtractPropTypes<O> = {\n  // use `keyof Pick<O, RequiredKeys<O>>` instead of `RequiredKeys<O>` to\n  // support IDE features\n  [K in keyof Pick<O, RequiredKeys<O>>]: InferPropType<O[K]>\n} & {\n  // use `keyof Pick<O, OptionalKeys<O>>` instead of `OptionalKeys<O>` to\n  // support IDE features\n  [K in keyof Pick<O, OptionalKeys<O>>]?: InferPropType<O[K]>\n}\n\ntype PublicRequiredKeys<T> = {\n  [K in keyof T]: T[K] extends { required: true } ? K : never\n}[keyof T]\n\ntype PublicOptionalKeys<T> = Exclude<keyof T, PublicRequiredKeys<T>>\n\n/**\n * Extract prop types from a runtime props options object.\n * The extracted types are **public** - i.e. the expected props that can be\n * passed to component.\n */\nexport type ExtractPublicPropTypes<O> = {\n  [K in keyof Pick<O, PublicRequiredKeys<O>>]: InferPropType<O[K]>\n} & {\n  [K in keyof Pick<O, PublicOptionalKeys<O>>]?: InferPropType<O[K]>\n}\n\nconst enum BooleanFlags {\n  shouldCast,\n  shouldCastTrue\n}\n\n// extract props which defined with default from prop options\nexport type ExtractDefaultPropTypes<O> = O extends object\n  ? // use `keyof Pick<O, DefaultKeys<O>>` instead of `DefaultKeys<O>` to support IDE features\n    { [K in keyof Pick<O, DefaultKeys<O>>]: InferPropType<O[K]> }\n  : {}\n\ntype NormalizedProp =\n  | null\n  | (PropOptions & {\n      [BooleanFlags.shouldCast]?: boolean\n      [BooleanFlags.shouldCastTrue]?: boolean\n    })\n\n// normalized value is a tuple of the actual normalized options\n// and an array of prop keys that need value casting (booleans and defaults)\nexport type NormalizedProps = Record<string, NormalizedProp>\nexport type NormalizedPropsOptions = [NormalizedProps, string[]] | []\n\nexport function initProps(\n  instance: ComponentInternalInstance,\n  rawProps: Data | null,\n  isStateful: number, // result of bitwise flag comparison\n  isSSR = false\n) {\n  const props: Data = {}\n  const attrs: Data = {}\n  def(attrs, InternalObjectKey, 1)\n\n  instance.propsDefaults = Object.create(null)\n\n  setFullProps(instance, rawProps, props, attrs)\n\n  // ensure all declared prop keys are present\n  for (const key in instance.propsOptions[0]) {\n    if (!(key in props)) {\n      props[key] = undefined\n    }\n  }\n\n  // validation\n  if (__DEV__) {\n    validateProps(rawProps || {}, props, instance)\n  }\n\n  if (isStateful) {\n    // stateful\n    instance.props = isSSR ? props : shallowReactive(props)\n  } else {\n    if (!instance.type.props) {\n      // functional w/ optional props, props === attrs\n      instance.props = attrs\n    } else {\n      // functional w/ declared props\n      instance.props = props\n    }\n  }\n  instance.attrs = attrs\n}\n\nfunction isInHmrContext(instance: ComponentInternalInstance | null) {\n  while (instance) {\n    if (instance.type.__hmrId) return true\n    instance = instance.parent\n  }\n}\n\nexport function updateProps(\n  instance: ComponentInternalInstance,\n  rawProps: Data | null,\n  rawPrevProps: Data | null,\n  optimized: boolean\n) {\n  const {\n    props,\n    attrs,\n    vnode: { patchFlag }\n  } = instance\n  const rawCurrentProps = toRaw(props)\n  const [options] = instance.propsOptions\n  let hasAttrsChanged = false\n\n  if (\n    // always force full diff in dev\n    // - #1942 if hmr is enabled with sfc component\n    // - vite#872 non-sfc component used by sfc component\n    !(__DEV__ && isInHmrContext(instance)) &&\n    (optimized || patchFlag > 0) &&\n    !(patchFlag & PatchFlags.FULL_PROPS)\n  ) {\n    if (patchFlag & PatchFlags.PROPS) {\n      // Compiler-generated props & no keys change, just set the updated\n      // the props.\n      const propsToUpdate = instance.vnode.dynamicProps!\n      for (let i = 0; i < propsToUpdate.length; i++) {\n        let key = propsToUpdate[i]\n        // skip if the prop key is a declared emit event listener\n        if (isEmitListener(instance.emitsOptions, key)) {\n          continue\n        }\n        // PROPS flag guarantees rawProps to be non-null\n        const value = rawProps![key]\n        if (options) {\n          // attr / props separation was done on init and will be consistent\n          // in this code path, so just check if attrs have it.\n          if (hasOwn(attrs, key)) {\n            if (value !== attrs[key]) {\n              attrs[key] = value\n              hasAttrsChanged = true\n            }\n          } else {\n            const camelizedKey = camelize(key)\n            props[camelizedKey] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              camelizedKey,\n              value,\n              instance,\n              false /* isAbsent */\n            )\n          }\n        } else {\n          if (__COMPAT__) {\n            if (isOn(key) && key.endsWith('Native')) {\n              key = key.slice(0, -6) // remove Native postfix\n            } else if (shouldSkipAttr(key, instance)) {\n              continue\n            }\n          }\n          if (value !== attrs[key]) {\n            attrs[key] = value\n            hasAttrsChanged = true\n          }\n        }\n      }\n    }\n  } else {\n    // full props update.\n    if (setFullProps(instance, rawProps, props, attrs)) {\n      hasAttrsChanged = true\n    }\n    // in case of dynamic props, check if we need to delete keys from\n    // the props object\n    let kebabKey: string\n    for (const key in rawCurrentProps) {\n      if (\n        !rawProps ||\n        // for camelCase\n        (!hasOwn(rawProps, key) &&\n          // it's possible the original props was passed in as kebab-case\n          // and converted to camelCase (#955)\n          ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))\n      ) {\n        if (options) {\n          if (\n            rawPrevProps &&\n            // for camelCase\n            (rawPrevProps[key] !== undefined ||\n              // for kebab-case\n              rawPrevProps[kebabKey!] !== undefined)\n          ) {\n            props[key] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              key,\n              undefined,\n              instance,\n              true /* isAbsent */\n            )\n          }\n        } else {\n          delete props[key]\n        }\n      }\n    }\n    // in the case of functional component w/o props declaration, props and\n    // attrs point to the same object so it should already have been updated.\n    if (attrs !== rawCurrentProps) {\n      for (const key in attrs) {\n        if (\n          !rawProps ||\n          (!hasOwn(rawProps, key) &&\n            (!__COMPAT__ || !hasOwn(rawProps, key + 'Native')))\n        ) {\n          delete attrs[key]\n          hasAttrsChanged = true\n        }\n      }\n    }\n  }\n\n  // trigger updates for $attrs in case it's used in component slots\n  if (hasAttrsChanged) {\n    trigger(instance, TriggerOpTypes.SET, '$attrs')\n  }\n\n  if (__DEV__) {\n    validateProps(rawProps || {}, props, instance)\n  }\n}\n\nfunction setFullProps(\n  instance: ComponentInternalInstance,\n  rawProps: Data | null,\n  props: Data,\n  attrs: Data\n) {\n  const [options, needCastKeys] = instance.propsOptions\n  let hasAttrsChanged = false\n  let rawCastValues: Data | undefined\n  if (rawProps) {\n    for (let key in rawProps) {\n      // key, ref are reserved and never passed down\n      if (isReservedProp(key)) {\n        continue\n      }\n\n      if (__COMPAT__) {\n        if (key.startsWith('onHook:')) {\n          softAssertCompatEnabled(\n            DeprecationTypes.INSTANCE_EVENT_HOOKS,\n            instance,\n            key.slice(2).toLowerCase()\n          )\n        }\n        if (key === 'inline-template') {\n          continue\n        }\n      }\n\n      const value = rawProps[key]\n      // prop option names are camelized during normalization, so to support\n      // kebab -> camel conversion here we need to camelize the key.\n      let camelKey\n      if (options && hasOwn(options, (camelKey = camelize(key)))) {\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n          props[camelKey] = value\n        } else {\n          ;(rawCastValues || (rawCastValues = {}))[camelKey] = value\n        }\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\n        // Any non-declared (either as a prop or an emitted event) props are put\n        // into a separate `attrs` object for spreading. Make sure to preserve\n        // original key casing\n        if (__COMPAT__) {\n          if (isOn(key) && key.endsWith('Native')) {\n            key = key.slice(0, -6) // remove Native postfix\n          } else if (shouldSkipAttr(key, instance)) {\n            continue\n          }\n        }\n        if (!(key in attrs) || value !== attrs[key]) {\n          attrs[key] = value\n          hasAttrsChanged = true\n        }\n      }\n    }\n  }\n\n  if (needCastKeys) {\n    const rawCurrentProps = toRaw(props)\n    const castValues = rawCastValues || EMPTY_OBJ\n    for (let i = 0; i < needCastKeys.length; i++) {\n      const key = needCastKeys[i]\n      props[key] = resolvePropValue(\n        options!,\n        rawCurrentProps,\n        key,\n        castValues[key],\n        instance,\n        !hasOwn(castValues, key)\n      )\n    }\n  }\n\n  return hasAttrsChanged\n}\n\nfunction resolvePropValue(\n  options: NormalizedProps,\n  props: Data,\n  key: string,\n  value: unknown,\n  instance: ComponentInternalInstance,\n  isAbsent: boolean\n) {\n  const opt = options[key]\n  if (opt != null) {\n    const hasDefault = hasOwn(opt, 'default')\n    // default values\n    if (hasDefault && value === undefined) {\n      const defaultValue = opt.default\n      if (\n        opt.type !== Function &&\n        !opt.skipFactory &&\n        isFunction(defaultValue)\n      ) {\n        const { propsDefaults } = instance\n        if (key in propsDefaults) {\n          value = propsDefaults[key]\n        } else {\n          setCurrentInstance(instance)\n          value = propsDefaults[key] = defaultValue.call(\n            __COMPAT__ &&\n              isCompatEnabled(DeprecationTypes.PROPS_DEFAULT_THIS, instance)\n              ? createPropsDefaultThis(instance, props, key)\n              : null,\n            props\n          )\n          unsetCurrentInstance()\n        }\n      } else {\n        value = defaultValue\n      }\n    }\n    // boolean casting\n    if (opt[BooleanFlags.shouldCast]) {\n      if (isAbsent && !hasDefault) {\n        value = false\n      } else if (\n        opt[BooleanFlags.shouldCastTrue] &&\n        (value === '' || value === hyphenate(key))\n      ) {\n        value = true\n      }\n    }\n  }\n  return value\n}\n\nexport function normalizePropsOptions(\n  comp: ConcreteComponent,\n  appContext: AppContext,\n  asMixin = false\n): NormalizedPropsOptions {\n  const cache = appContext.propsCache\n  const cached = cache.get(comp)\n  if (cached) {\n    return cached\n  }\n\n  const raw = comp.props\n  const normalized: NormalizedPropsOptions[0] = {}\n  const needCastKeys: NormalizedPropsOptions[1] = []\n\n  // apply mixin/extends props\n  let hasExtends = false\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendProps = (raw: ComponentOptions) => {\n      if (__COMPAT__ && isFunction(raw)) {\n        raw = raw.options\n      }\n      hasExtends = true\n      const [props, keys] = normalizePropsOptions(raw, appContext, true)\n      extend(normalized, props)\n      if (keys) needCastKeys.push(...keys)\n    }\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendProps)\n    }\n    if (comp.extends) {\n      extendProps(comp.extends)\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendProps)\n    }\n  }\n\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, EMPTY_ARR as any)\n    }\n    return EMPTY_ARR as any\n  }\n\n  if (isArray(raw)) {\n    for (let i = 0; i < raw.length; i++) {\n      if (__DEV__ && !isString(raw[i])) {\n        warn(`props must be strings when using array syntax.`, raw[i])\n      }\n      const normalizedKey = camelize(raw[i])\n      if (validatePropName(normalizedKey)) {\n        normalized[normalizedKey] = EMPTY_OBJ\n      }\n    }\n  } else if (raw) {\n    if (__DEV__ && !isObject(raw)) {\n      warn(`invalid props options`, raw)\n    }\n    for (const key in raw) {\n      const normalizedKey = camelize(key)\n      if (validatePropName(normalizedKey)) {\n        const opt = raw[key]\n        const prop: NormalizedProp = (normalized[normalizedKey] =\n          isArray(opt) || isFunction(opt) ? { type: opt } : extend({}, opt))\n        if (prop) {\n          const booleanIndex = getTypeIndex(Boolean, prop.type)\n          const stringIndex = getTypeIndex(String, prop.type)\n          prop[BooleanFlags.shouldCast] = booleanIndex > -1\n          prop[BooleanFlags.shouldCastTrue] =\n            stringIndex < 0 || booleanIndex < stringIndex\n          // if the prop needs boolean casting or default value\n          if (booleanIndex > -1 || hasOwn(prop, 'default')) {\n            needCastKeys.push(normalizedKey)\n          }\n        }\n      }\n    }\n  }\n\n  const res: NormalizedPropsOptions = [normalized, needCastKeys]\n  if (isObject(comp)) {\n    cache.set(comp, res)\n  }\n  return res\n}\n\nfunction validatePropName(key: string) {\n  if (key[0] !== '$') {\n    return true\n  } else if (__DEV__) {\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`)\n  }\n  return false\n}\n\n// use function string name to check type constructors\n// so that it works across vms / iframes.\nfunction getType(ctor: Prop<any>): string {\n  const match = ctor && ctor.toString().match(/^\\s*(function|class) (\\w+)/)\n  return match ? match[2] : ctor === null ? 'null' : ''\n}\n\nfunction isSameType(a: Prop<any>, b: Prop<any>): boolean {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex(\n  type: Prop<any>,\n  expectedTypes: PropType<any> | void | null | true\n): number {\n  if (isArray(expectedTypes)) {\n    return expectedTypes.findIndex(t => isSameType(t, type))\n  } else if (isFunction(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  return -1\n}\n\n/**\n * dev only\n */\nfunction validateProps(\n  rawProps: Data,\n  props: Data,\n  instance: ComponentInternalInstance\n) {\n  const resolvedValues = toRaw(props)\n  const options = instance.propsOptions[0]\n  for (const key in options) {\n    let opt = options[key]\n    if (opt == null) continue\n    validateProp(\n      key,\n      resolvedValues[key],\n      opt,\n      !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key))\n    )\n  }\n}\n\n/**\n * dev only\n */\nfunction validateProp(\n  name: string,\n  value: unknown,\n  prop: PropOptions,\n  isAbsent: boolean\n) {\n  const { type, required, validator, skipCheck } = prop\n  // required!\n  if (required && isAbsent) {\n    warn('Missing required prop: \"' + name + '\"')\n    return\n  }\n  // missing but optional\n  if (value == null && !required) {\n    return\n  }\n  // type check\n  if (type != null && type !== true && !skipCheck) {\n    let isValid = false\n    const types = isArray(type) ? type : [type]\n    const expectedTypes = []\n    // value is valid as long as one of the specified types match\n    for (let i = 0; i < types.length && !isValid; i++) {\n      const { valid, expectedType } = assertType(value, types[i])\n      expectedTypes.push(expectedType || '')\n      isValid = valid\n    }\n    if (!isValid) {\n      warn(getInvalidTypeMessage(name, value, expectedTypes))\n      return\n    }\n  }\n  // custom validator\n  if (validator && !validator(value)) {\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".')\n  }\n}\n\nconst isSimpleType = /*#__PURE__*/ makeMap(\n  'String,Number,Boolean,Function,Symbol,BigInt'\n)\n\ntype AssertionResult = {\n  valid: boolean\n  expectedType: string\n}\n\n/**\n * dev only\n */\nfunction assertType(value: unknown, type: PropConstructor): AssertionResult {\n  let valid\n  const expectedType = getType(type)\n  if (isSimpleType(expectedType)) {\n    const t = typeof value\n    valid = t === expectedType.toLowerCase()\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type\n    }\n  } else if (expectedType === 'Object') {\n    valid = isObject(value)\n  } else if (expectedType === 'Array') {\n    valid = isArray(value)\n  } else if (expectedType === 'null') {\n    valid = value === null\n  } else {\n    valid = value instanceof type\n  }\n  return {\n    valid,\n    expectedType\n  }\n}\n\n/**\n * dev only\n */\nfunction getInvalidTypeMessage(\n  name: string,\n  value: unknown,\n  expectedTypes: string[]\n): string {\n  let message =\n    `Invalid prop: type check failed for prop \"${name}\".` +\n    ` Expected ${expectedTypes.map(capitalize).join(' | ')}`\n  const expectedType = expectedTypes[0]\n  const receivedType = toRawType(value)\n  const expectedValue = styleValue(value, expectedType)\n  const receivedValue = styleValue(value, receivedType)\n  // check if we need to specify expected value\n  if (\n    expectedTypes.length === 1 &&\n    isExplicable(expectedType) &&\n    !isBoolean(expectedType, receivedType)\n  ) {\n    message += ` with value ${expectedValue}`\n  }\n  message += `, got ${receivedType} `\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += `with value ${receivedValue}.`\n  }\n  return message\n}\n\n/**\n * dev only\n */\nfunction styleValue(value: unknown, type: string): string {\n  if (type === 'String') {\n    return `\"${value}\"`\n  } else if (type === 'Number') {\n    return `${Number(value)}`\n  } else {\n    return `${value}`\n  }\n}\n\n/**\n * dev only\n */\nfunction isExplicable(type: string): boolean {\n  const explicitTypes = ['string', 'number', 'boolean']\n  return explicitTypes.some(elem => type.toLowerCase() === elem)\n}\n\n/**\n * dev only\n */\nfunction isBoolean(...args: string[]): boolean {\n  return args.some(elem => elem.toLowerCase() === 'boolean')\n}\n", "import { ComponentInternalInstance, currentInstance } from './component'\nimport {\n  VNode,\n  VNodeNormalizedChildren,\n  normalizeVNode,\n  VNodeChild,\n  InternalObjectKey\n} from './vnode'\nimport {\n  isArray,\n  isFunction,\n  EMPTY_OBJ,\n  ShapeFlags,\n  extend,\n  def,\n  SlotFlags,\n  Prettify,\n  IfAny\n} from '@vue/shared'\nimport { warn } from './warning'\nimport { isKeepAlive } from './components/KeepAlive'\nimport { ContextualRenderFn, withCtx } from './componentRenderContext'\nimport { isHmrUpdating } from './hmr'\nimport { DeprecationTypes, isCompatEnabled } from './compat/compatConfig'\nimport { toRaw } from '@vue/reactivity'\nimport { trigger } from '@vue/reactivity'\nimport { TriggerOpTypes } from '@vue/reactivity'\n\nexport type Slot<T extends any = any> = (\n  ...args: IfAny<T, any[], [T] | (T extends undefined ? [] : never)>\n) => VNode[]\n\nexport type InternalSlots = {\n  [name: string]: Slot | undefined\n}\n\nexport type Slots = Readonly<InternalSlots>\n\ndeclare const SlotSymbol: unique symbol\nexport type SlotsType<T extends Record<string, any> = Record<string, any>> = {\n  [SlotSymbol]?: T\n}\n\nexport type StrictUnwrapSlotsType<\n  S extends SlotsType,\n  T = NonNullable<S[typeof SlotSymbol]>\n> = [keyof S] extends [never] ? Slots : Readonly<T>\n\nexport type UnwrapSlotsType<\n  S extends SlotsType,\n  T = NonNullable<S[typeof SlotSymbol]>\n> = [keyof S] extends [never]\n  ? Slots\n  : Readonly<\n      Prettify<{\n        [K in keyof T]: NonNullable<T[K]> extends (...args: any[]) => any\n          ? T[K]\n          : Slot<T[K]>\n      }>\n    >\n\nexport type RawSlots = {\n  [name: string]: unknown\n  // manual render fn hint to skip forced children updates\n  $stable?: boolean\n  /**\n   * for tracking slot owner instance. This is attached during\n   * normalizeChildren when the component vnode is created.\n   * @internal\n   */\n  _ctx?: ComponentInternalInstance | null\n  /**\n   * indicates compiler generated slots\n   * we use a reserved property instead of a vnode patchFlag because the slots\n   * object may be directly passed down to a child component in a manual\n   * render function, and the optimization hint need to be on the slot object\n   * itself to be preserved.\n   * @internal\n   */\n  _?: SlotFlags\n}\n\nconst isInternalKey = (key: string) => key[0] === '_' || key === '$stable'\n\nconst normalizeSlotValue = (value: unknown): VNode[] =>\n  isArray(value)\n    ? value.map(normalizeVNode)\n    : [normalizeVNode(value as VNodeChild)]\n\nconst normalizeSlot = (\n  key: string,\n  rawSlot: Function,\n  ctx: ComponentInternalInstance | null | undefined\n): Slot => {\n  if ((rawSlot as any)._n) {\n    // already normalized - #5353\n    return rawSlot as Slot\n  }\n  const normalized = withCtx((...args: any[]) => {\n    if (__DEV__ && currentInstance) {\n      warn(\n        `Slot \"${key}\" invoked outside of the render function: ` +\n          `this will not track dependencies used in the slot. ` +\n          `Invoke the slot function inside the render function instead.`\n      )\n    }\n    return normalizeSlotValue(rawSlot(...args))\n  }, ctx) as Slot\n  // NOT a compiled slot\n  ;(normalized as ContextualRenderFn)._c = false\n  return normalized\n}\n\nconst normalizeObjectSlots = (\n  rawSlots: RawSlots,\n  slots: InternalSlots,\n  instance: ComponentInternalInstance\n) => {\n  const ctx = rawSlots._ctx\n  for (const key in rawSlots) {\n    if (isInternalKey(key)) continue\n    const value = rawSlots[key]\n    if (isFunction(value)) {\n      slots[key] = normalizeSlot(key, value, ctx)\n    } else if (value != null) {\n      if (\n        __DEV__ &&\n        !(\n          __COMPAT__ &&\n          isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance)\n        )\n      ) {\n        warn(\n          `Non-function value encountered for slot \"${key}\". ` +\n            `Prefer function slots for better performance.`\n        )\n      }\n      const normalized = normalizeSlotValue(value)\n      slots[key] = () => normalized\n    }\n  }\n}\n\nconst normalizeVNodeSlots = (\n  instance: ComponentInternalInstance,\n  children: VNodeNormalizedChildren\n) => {\n  if (\n    __DEV__ &&\n    !isKeepAlive(instance.vnode) &&\n    !(__COMPAT__ && isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance))\n  ) {\n    warn(\n      `Non-function value encountered for default slot. ` +\n        `Prefer function slots for better performance.`\n    )\n  }\n  const normalized = normalizeSlotValue(children)\n  instance.slots.default = () => normalized\n}\n\nexport const initSlots = (\n  instance: ComponentInternalInstance,\n  children: VNodeNormalizedChildren\n) => {\n  if (instance.vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\n    const type = (children as RawSlots)._\n    if (type) {\n      // users can get the shallow readonly version of the slots object through `this.$slots`,\n      // we should avoid the proxy object polluting the slots of the internal instance\n      instance.slots = toRaw(children as InternalSlots)\n      // make compiler marker non-enumerable\n      def(children as InternalSlots, '_', type)\n    } else {\n      normalizeObjectSlots(\n        children as RawSlots,\n        (instance.slots = {}),\n        instance\n      )\n    }\n  } else {\n    instance.slots = {}\n    if (children) {\n      normalizeVNodeSlots(instance, children)\n    }\n  }\n  def(instance.slots, InternalObjectKey, 1)\n}\n\nexport const updateSlots = (\n  instance: ComponentInternalInstance,\n  children: VNodeNormalizedChildren,\n  optimized: boolean\n) => {\n  const { vnode, slots } = instance\n  let needDeletionCheck = true\n  let deletionComparisonTarget = EMPTY_OBJ\n  if (vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\n    const type = (children as RawSlots)._\n    if (type) {\n      // compiled slots.\n      if (__DEV__ && isHmrUpdating) {\n        // Parent was HMR updated so slot content may have changed.\n        // force update slots and mark instance for hmr as well\n        extend(slots, children as Slots)\n        trigger(instance, TriggerOpTypes.SET, '$slots')\n      } else if (optimized && type === SlotFlags.STABLE) {\n        // compiled AND stable.\n        // no need to update, and skip stale slots removal.\n        needDeletionCheck = false\n      } else {\n        // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\n        // normalization.\n        extend(slots, children as Slots)\n        // #2893\n        // when rendering the optimized slots by manually written render function,\n        // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\n        // i.e. let the `renderSlot` create the bailed Fragment\n        if (!optimized && type === SlotFlags.STABLE) {\n          delete slots._\n        }\n      }\n    } else {\n      needDeletionCheck = !(children as RawSlots).$stable\n      normalizeObjectSlots(children as RawSlots, slots, instance)\n    }\n    deletionComparisonTarget = children as RawSlots\n  } else if (children) {\n    // non slot object children (direct value) passed to a component\n    normalizeVNodeSlots(instance, children)\n    deletionComparisonTarget = { default: 1 }\n  }\n\n  // delete stale slots\n  if (needDeletionCheck) {\n    for (const key in slots) {\n      if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\n        delete slots[key]\n      }\n    }\n  }\n}\n", "import { SuspenseBoundary } from './components/Suspense'\nimport { VNode, VNodeNormalizedRef, VNodeNormalizedRefAtom } from './vnode'\nimport {\n  EMPTY_OBJ,\n  hasOwn,\n  isArray,\n  isFunction,\n  isString,\n  remove,\n  ShapeFlags\n} from '@vue/shared'\nimport { isAsyncWrapper } from './apiAsyncComponent'\nimport { getExposeProxy } from './component'\nimport { warn } from './warning'\nimport { isRef } from '@vue/reactivity'\nimport { callWithErrorHandling, ErrorCodes } from './errorHandling'\nimport { SchedulerJob } from './scheduler'\nimport { queuePostRenderEffect } from './renderer'\n\n/**\n * Function for handling a template ref\n */\nexport function setRef(\n  rawRef: VNodeNormalizedRef,\n  oldRawRef: VNodeNormalizedRef | null,\n  parentSuspense: SuspenseBoundary | null,\n  vnode: VNode,\n  isUnmount = false\n) {\n  if (isArray(rawRef)) {\n    rawRef.forEach((r, i) =>\n      setRef(\n        r,\n        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\n        parentSuspense,\n        vnode,\n        isUnmount\n      )\n    )\n    return\n  }\n\n  if (isAsyncWrapper(vnode) && !isUnmount) {\n    // when mounting async components, nothing needs to be done,\n    // because the template ref is forwarded to inner component\n    return\n  }\n\n  const refValue =\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\n      ? getExposeProxy(vnode.component!) || vnode.component!.proxy\n      : vnode.el\n  const value = isUnmount ? null : refValue\n\n  const { i: owner, r: ref } = rawRef\n  if (__DEV__ && !owner) {\n    warn(\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\n        `A vnode with ref must be created inside the render function.`\n    )\n    return\n  }\n  const oldRef = oldRawRef && (oldRawRef as VNodeNormalizedRefAtom).r\n  const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs\n  const setupState = owner.setupState\n\n  // dynamic ref changed. unset old ref\n  if (oldRef != null && oldRef !== ref) {\n    if (isString(oldRef)) {\n      refs[oldRef] = null\n      if (hasOwn(setupState, oldRef)) {\n        setupState[oldRef] = null\n      }\n    } else if (isRef(oldRef)) {\n      oldRef.value = null\n    }\n  }\n\n  if (isFunction(ref)) {\n    callWithErrorHandling(ref, owner, ErrorCodes.FUNCTION_REF, [value, refs])\n  } else {\n    const _isString = isString(ref)\n    const _isRef = isRef(ref)\n    if (_isString || _isRef) {\n      const doSet = () => {\n        if (rawRef.f) {\n          const existing = _isString\n            ? hasOwn(setupState, ref)\n              ? setupState[ref]\n              : refs[ref]\n            : ref.value\n          if (isUnmount) {\n            isArray(existing) && remove(existing, refValue)\n          } else {\n            if (!isArray(existing)) {\n              if (_isString) {\n                refs[ref] = [refValue]\n                if (hasOwn(setupState, ref)) {\n                  setupState[ref] = refs[ref]\n                }\n              } else {\n                ref.value = [refValue]\n                if (rawRef.k) refs[rawRef.k] = ref.value\n              }\n            } else if (!existing.includes(refValue)) {\n              existing.push(refValue)\n            }\n          }\n        } else if (_isString) {\n          refs[ref] = value\n          if (hasOwn(setupState, ref)) {\n            setupState[ref] = value\n          }\n        } else if (_isRef) {\n          ref.value = value\n          if (rawRef.k) refs[rawRef.k] = value\n        } else if (__DEV__) {\n          warn('Invalid template ref type:', ref, `(${typeof ref})`)\n        }\n      }\n      if (value) {\n        // #1789: for non-null values, set them after render\n        // null values means this is unmount and it should not overwrite another\n        // ref with the same key\n        ;(doSet as SchedulerJob).id = -1\n        queuePostRenderEffect(doSet, parentSuspense)\n      } else {\n        doSet()\n      }\n    } else if (__DEV__) {\n      warn('Invalid template ref type:', ref, `(${typeof ref})`)\n    }\n  }\n}\n", "import {\n  VNode,\n  normalizeVNode,\n  Text,\n  Comment,\n  Static,\n  Fragment,\n  VNodeHook,\n  createVNode,\n  createTextVNode,\n  invokeVNodeHook\n} from './vnode'\nimport { flushPostFlushCbs } from './scheduler'\nimport { ComponentInternalInstance } from './component'\nimport { invokeDirectiveHook } from './directives'\nimport { warn } from './warning'\nimport { PatchFlags, ShapeFlags, isReservedProp, isOn } from '@vue/shared'\nimport { RendererInternals } from './renderer'\nimport { setRef } from './rendererTemplateRef'\nimport {\n  SuspenseImpl,\n  SuspenseBoundary,\n  queueEffectWithSuspense\n} from './components/Suspense'\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\nimport { isAsyncWrapper } from './apiAsyncComponent'\n\nexport type RootHydrateFunction = (\n  vnode: VNode<Node, Element>,\n  container: (Element | ShadowRoot) & { _vnode?: VNode }\n) => void\n\nconst enum DOMNodeTypes {\n  ELEMENT = 1,\n  TEXT = 3,\n  COMMENT = 8\n}\n\nlet hasMismatch = false\n\nconst isSVGContainer = (container: Element) =>\n  /svg/.test(container.namespaceURI!) && container.tagName !== 'foreignObject'\n\nconst isComment = (node: Node): node is Comment =>\n  node.nodeType === DOMNodeTypes.COMMENT\n\n// Note: hydration is DOM-specific\n// But we have to place it in core due to tight coupling with core - splitting\n// it out creates a ton of unnecessary complexity.\n// Hydration also depends on some renderer internal logic which needs to be\n// passed in via arguments.\nexport function createHydrationFunctions(\n  rendererInternals: RendererInternals<Node, Element>\n) {\n  const {\n    mt: mountComponent,\n    p: patch,\n    o: {\n      patchProp,\n      createText,\n      nextSibling,\n      parentNode,\n      remove,\n      insert,\n      createComment\n    }\n  } = rendererInternals\n\n  const hydrate: RootHydrateFunction = (vnode, container) => {\n    if (!container.hasChildNodes()) {\n      __DEV__ &&\n        warn(\n          `Attempting to hydrate existing markup but container is empty. ` +\n            `Performing full mount instead.`\n        )\n      patch(null, vnode, container)\n      flushPostFlushCbs()\n      container._vnode = vnode\n      return\n    }\n    hasMismatch = false\n    hydrateNode(container.firstChild!, vnode, null, null, null)\n    flushPostFlushCbs()\n    container._vnode = vnode\n    if (hasMismatch && !__TEST__) {\n      // this error should show up in production\n      console.error(`Hydration completed but contains mismatches.`)\n    }\n  }\n\n  const hydrateNode = (\n    node: Node,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized = false\n  ): Node | null => {\n    const isFragmentStart = isComment(node) && node.data === '['\n    const onMismatch = () =>\n      handleMismatch(\n        node,\n        vnode,\n        parentComponent,\n        parentSuspense,\n        slotScopeIds,\n        isFragmentStart\n      )\n\n    const { type, ref, shapeFlag, patchFlag } = vnode\n    let domType = node.nodeType\n    vnode.el = node\n\n    if (patchFlag === PatchFlags.BAIL) {\n      optimized = false\n      vnode.dynamicChildren = null\n    }\n\n    let nextNode: Node | null = null\n    switch (type) {\n      case Text:\n        if (domType !== DOMNodeTypes.TEXT) {\n          // #5728 empty text node inside a slot can cause hydration failure\n          // because the server rendered HTML won't contain a text node\n          if (vnode.children === '') {\n            insert((vnode.el = createText('')), parentNode(node)!, node)\n            nextNode = node\n          } else {\n            nextNode = onMismatch()\n          }\n        } else {\n          if ((node as Text).data !== vnode.children) {\n            hasMismatch = true\n            __DEV__ &&\n              warn(\n                `Hydration text mismatch:` +\n                  `\\n- Client: ${JSON.stringify((node as Text).data)}` +\n                  `\\n- Server: ${JSON.stringify(vnode.children)}`\n              )\n            ;(node as Text).data = vnode.children as string\n          }\n          nextNode = nextSibling(node)\n        }\n        break\n      case Comment:\n        if (domType !== DOMNodeTypes.COMMENT || isFragmentStart) {\n          nextNode = onMismatch()\n        } else {\n          nextNode = nextSibling(node)\n        }\n        break\n      case Static:\n        if (isFragmentStart) {\n          // entire template is static but SSRed as a fragment\n          node = nextSibling(node)!\n          domType = node.nodeType\n        }\n        if (domType === DOMNodeTypes.ELEMENT || domType === DOMNodeTypes.TEXT) {\n          // determine anchor, adopt content\n          nextNode = node\n          // if the static vnode has its content stripped during build,\n          // adopt it from the server-rendered HTML.\n          const needToAdoptContent = !(vnode.children as string).length\n          for (let i = 0; i < vnode.staticCount!; i++) {\n            if (needToAdoptContent)\n              vnode.children +=\n                nextNode.nodeType === DOMNodeTypes.ELEMENT\n                  ? (nextNode as Element).outerHTML\n                  : (nextNode as Text).data\n            if (i === vnode.staticCount! - 1) {\n              vnode.anchor = nextNode\n            }\n            nextNode = nextSibling(nextNode)!\n          }\n          return isFragmentStart ? nextSibling(nextNode) : nextNode\n        } else {\n          onMismatch()\n        }\n        break\n      case Fragment:\n        if (!isFragmentStart) {\n          nextNode = onMismatch()\n        } else {\n          nextNode = hydrateFragment(\n            node as Comment,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            slotScopeIds,\n            optimized\n          )\n        }\n        break\n      default:\n        if (shapeFlag & ShapeFlags.ELEMENT) {\n          if (\n            domType !== DOMNodeTypes.ELEMENT ||\n            (vnode.type as string).toLowerCase() !==\n              (node as Element).tagName.toLowerCase()\n          ) {\n            nextNode = onMismatch()\n          } else {\n            nextNode = hydrateElement(\n              node as Element,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized\n            )\n          }\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\n          // when setting up the render effect, if the initial vnode already\n          // has .el set, the component will perform hydration instead of mount\n          // on its sub-tree.\n          vnode.slotScopeIds = slotScopeIds\n          const container = parentNode(node)!\n          mountComponent(\n            vnode,\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            isSVGContainer(container),\n            optimized\n          )\n\n          // component may be async, so in the case of fragments we cannot rely\n          // on component's rendered output to determine the end of the fragment\n          // instead, we do a lookahead to find the end anchor node.\n          nextNode = isFragmentStart\n            ? locateClosingAsyncAnchor(node)\n            : nextSibling(node)\n\n          // #4293 teleport as component root\n          if (\n            nextNode &&\n            isComment(nextNode) &&\n            nextNode.data === 'teleport end'\n          ) {\n            nextNode = nextSibling(nextNode)\n          }\n\n          // #3787\n          // if component is async, it may get moved / unmounted before its\n          // inner component is loaded, so we need to give it a placeholder\n          // vnode that matches its adopted DOM.\n          if (isAsyncWrapper(vnode)) {\n            let subTree\n            if (isFragmentStart) {\n              subTree = createVNode(Fragment)\n              subTree.anchor = nextNode\n                ? nextNode.previousSibling\n                : container.lastChild\n            } else {\n              subTree =\n                node.nodeType === 3 ? createTextVNode('') : createVNode('div')\n            }\n            subTree.el = node\n            vnode.component!.subTree = subTree\n          }\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\n          if (domType !== DOMNodeTypes.COMMENT) {\n            nextNode = onMismatch()\n          } else {\n            nextNode = (vnode.type as typeof TeleportImpl).hydrate(\n              node,\n              vnode as TeleportVNode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized,\n              rendererInternals,\n              hydrateChildren\n            )\n          }\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\n          nextNode = (vnode.type as typeof SuspenseImpl).hydrate(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            isSVGContainer(parentNode(node)!),\n            slotScopeIds,\n            optimized,\n            rendererInternals,\n            hydrateNode\n          )\n        } else if (__DEV__) {\n          warn('Invalid HostVNode type:', type, `(${typeof type})`)\n        }\n    }\n\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode)\n    }\n\n    return nextNode\n  }\n\n  const hydrateElement = (\n    el: Element,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized: boolean\n  ) => {\n    optimized = optimized || !!vnode.dynamicChildren\n    const { type, props, patchFlag, shapeFlag, dirs } = vnode\n    // #4006 for form elements with non-string v-model value bindings\n    // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\n    const forcePatchValue = (type === 'input' && dirs) || type === 'option'\n    // skip props & children if this is hoisted static nodes\n    // #5405 in dev, always hydrate children for HMR\n    if (__DEV__ || forcePatchValue || patchFlag !== PatchFlags.HOISTED) {\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\n      }\n      // props\n      if (props) {\n        if (\n          forcePatchValue ||\n          !optimized ||\n          patchFlag & (PatchFlags.FULL_PROPS | PatchFlags.HYDRATE_EVENTS)\n        ) {\n          for (const key in props) {\n            if (\n              (forcePatchValue && key.endsWith('value')) ||\n              (isOn(key) && !isReservedProp(key))\n            ) {\n              patchProp(\n                el,\n                key,\n                null,\n                props[key],\n                false,\n                undefined,\n                parentComponent\n              )\n            }\n          }\n        } else if (props.onClick) {\n          // Fast path for click listeners (which is most often) to avoid\n          // iterating through props.\n          patchProp(\n            el,\n            'onClick',\n            null,\n            props.onClick,\n            false,\n            undefined,\n            parentComponent\n          )\n        }\n      }\n      // vnode / directive hooks\n      let vnodeHooks: VNodeHook | null | undefined\n      if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode)\n      }\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\n      }\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\n        queueEffectWithSuspense(() => {\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode)\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\n        }, parentSuspense)\n      }\n      // children\n      if (\n        shapeFlag & ShapeFlags.ARRAY_CHILDREN &&\n        // skip if element has innerHTML / textContent\n        !(props && (props.innerHTML || props.textContent))\n      ) {\n        let next = hydrateChildren(\n          el.firstChild,\n          vnode,\n          el,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        )\n        let hasWarned = false\n        while (next) {\n          hasMismatch = true\n          if (__DEV__ && !hasWarned) {\n            warn(\n              `Hydration children mismatch in <${vnode.type as string}>: ` +\n                `server rendered element contains more child nodes than client vdom.`\n            )\n            hasWarned = true\n          }\n          // The SSRed DOM contains more nodes than it should. Remove them.\n          const cur = next\n          next = next.nextSibling\n          remove(cur)\n        }\n      } else if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n        if (el.textContent !== vnode.children) {\n          hasMismatch = true\n          __DEV__ &&\n            warn(\n              `Hydration text content mismatch in <${\n                vnode.type as string\n              }>:\\n` +\n                `- Client: ${el.textContent}\\n` +\n                `- Server: ${vnode.children as string}`\n            )\n          el.textContent = vnode.children as string\n        }\n      }\n    }\n    return el.nextSibling\n  }\n\n  const hydrateChildren = (\n    node: Node | null,\n    parentVNode: VNode,\n    container: Element,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized: boolean\n  ): Node | null => {\n    optimized = optimized || !!parentVNode.dynamicChildren\n    const children = parentVNode.children as VNode[]\n    const l = children.length\n    let hasWarned = false\n    for (let i = 0; i < l; i++) {\n      const vnode = optimized\n        ? children[i]\n        : (children[i] = normalizeVNode(children[i]))\n      if (node) {\n        node = hydrateNode(\n          node,\n          vnode,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        )\n      } else if (vnode.type === Text && !vnode.children) {\n        continue\n      } else {\n        hasMismatch = true\n        if (__DEV__ && !hasWarned) {\n          warn(\n            `Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\n              `server rendered element contains fewer child nodes than client vdom.`\n          )\n          hasWarned = true\n        }\n        // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\n        patch(\n          null,\n          vnode,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVGContainer(container),\n          slotScopeIds\n        )\n      }\n    }\n    return node\n  }\n\n  const hydrateFragment = (\n    node: Comment,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized: boolean\n  ) => {\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\n        : fragmentSlotScopeIds\n    }\n\n    const container = parentNode(node)!\n    const next = hydrateChildren(\n      nextSibling(node)!,\n      vnode,\n      container,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      optimized\n    )\n    if (next && isComment(next) && next.data === ']') {\n      return nextSibling((vnode.anchor = next))\n    } else {\n      // fragment didn't hydrate successfully, since we didn't get a end anchor\n      // back. This should have led to node/children mismatch warnings.\n      hasMismatch = true\n      // since the anchor is missing, we need to create one and insert it\n      insert((vnode.anchor = createComment(`]`)), container, next)\n      return next\n    }\n  }\n\n  const handleMismatch = (\n    node: Node,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    isFragment: boolean\n  ): Node | null => {\n    hasMismatch = true\n    __DEV__ &&\n      warn(\n        `Hydration node mismatch:\\n- Client vnode:`,\n        vnode.type,\n        `\\n- Server rendered DOM:`,\n        node,\n        node.nodeType === DOMNodeTypes.TEXT\n          ? `(text)`\n          : isComment(node) && node.data === '['\n          ? `(start of fragment)`\n          : ``\n      )\n    vnode.el = null\n\n    if (isFragment) {\n      // remove excessive fragment nodes\n      const end = locateClosingAsyncAnchor(node)\n      while (true) {\n        const next = nextSibling(node)\n        if (next && next !== end) {\n          remove(next)\n        } else {\n          break\n        }\n      }\n    }\n\n    const next = nextSibling(node)\n    const container = parentNode(node)!\n    remove(node)\n\n    patch(\n      null,\n      vnode,\n      container,\n      next,\n      parentComponent,\n      parentSuspense,\n      isSVGContainer(container),\n      slotScopeIds\n    )\n    return next\n  }\n\n  const locateClosingAsyncAnchor = (node: Node | null): Node | null => {\n    let match = 0\n    while (node) {\n      node = nextSibling(node)\n      if (node && isComment(node)) {\n        if (node.data === '[') match++\n        if (node.data === ']') {\n          if (match === 0) {\n            return nextSibling(node)\n          } else {\n            match--\n          }\n        }\n      }\n    }\n    return node\n  }\n\n  return [hydrate, hydrateNode] as const\n}\n", "/* eslint-disable no-restricted-globals */\nimport { ComponentInternalInstance, formatComponentName } from './component'\nimport { devtoolsPerfEnd, devtoolsPerfStart } from './devtools'\n\nlet supported: boolean\nlet perf: Performance\n\nexport function startMeasure(\n  instance: ComponentInternalInstance,\n  type: string\n) {\n  if (instance.appContext.config.performance && isSupported()) {\n    perf.mark(`vue-${type}-${instance.uid}`)\n  }\n\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n    devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now())\n  }\n}\n\nexport function endMeasure(instance: ComponentInternalInstance, type: string) {\n  if (instance.appContext.config.performance && isSupported()) {\n    const startTag = `vue-${type}-${instance.uid}`\n    const endTag = startTag + `:end`\n    perf.mark(endTag)\n    perf.measure(\n      `<${formatComponentName(instance, instance.type)}> ${type}`,\n      startTag,\n      endTag\n    )\n    perf.clearMarks(startTag)\n    perf.clearMarks(endTag)\n  }\n\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n    devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now())\n  }\n}\n\nfunction isSupported() {\n  if (supported !== undefined) {\n    return supported\n  }\n  if (typeof window !== 'undefined' && window.performance) {\n    supported = true\n    perf = window.performance\n  } else {\n    supported = false\n  }\n  return supported\n}\n", "import {\n  Text,\n  Fragment,\n  Comment,\n  cloneIfMounted,\n  normalizeVNode,\n  VNode,\n  VNodeArrayChildren,\n  createVNode,\n  isSameVNodeType,\n  Static,\n  VNodeHook,\n  VNodeProps,\n  invokeVNodeHook\n} from './vnode'\nimport {\n  ComponentInternalInstance,\n  ComponentOptions,\n  createComponentInstance,\n  Data,\n  setupComponent\n} from './component'\nimport {\n  filterSingleRoot,\n  renderComponentRoot,\n  shouldUpdateComponent,\n  updateHOCHostEl\n} from './componentRenderUtils'\nimport {\n  EMPTY_OBJ,\n  EMPTY_ARR,\n  isReservedProp,\n  PatchFlags,\n  ShapeFlags,\n  NOOP,\n  invokeArrayFns,\n  isArray,\n  getGlobalThis\n} from '@vue/shared'\nimport {\n  queueJob,\n  queuePostFlushCb,\n  flushPostFlushCbs,\n  invalidateJob,\n  flushPreFlushCbs,\n  SchedulerJob\n} from './scheduler'\nimport { pauseTracking, resetTracking, ReactiveEffect } from '@vue/reactivity'\nimport { updateProps } from './componentProps'\nimport { updateSlots } from './componentSlots'\nimport { pushWarningContext, popWarningContext, warn } from './warning'\nimport { createAppAPI, CreateAppFunction } from './apiCreateApp'\nimport { setRef } from './rendererTemplateRef'\nimport {\n  SuspenseBoundary,\n  queueEffectWithSuspense,\n  SuspenseImpl\n} from './components/Suspense'\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\nimport { isKeepAlive, KeepAliveContext } from './components/KeepAlive'\nimport { registerHMR, unregisterHMR, isHmrUpdating } from './hmr'\nimport { createHydrationFunctions, RootHydrateFunction } from './hydration'\nimport { invokeDirectiveHook } from './directives'\nimport { startMeasure, endMeasure } from './profiling'\nimport {\n  devtoolsComponentAdded,\n  devtoolsComponentRemoved,\n  devtoolsComponentUpdated,\n  setDevtoolsHook\n} from './devtools'\nimport { initFeatureFlags } from './featureFlags'\nimport { isAsyncWrapper } from './apiAsyncComponent'\nimport { isCompatEnabled } from './compat/compatConfig'\nimport { DeprecationTypes } from './compat/compatConfig'\n\nexport interface Renderer<HostElement = RendererElement> {\n  render: RootRenderFunction<HostElement>\n  createApp: CreateAppFunction<HostElement>\n}\n\nexport interface HydrationRenderer extends Renderer<Element | ShadowRoot> {\n  hydrate: RootHydrateFunction\n}\n\nexport type RootRenderFunction<HostElement = RendererElement> = (\n  vnode: VNode | null,\n  container: HostElement,\n  isSVG?: boolean\n) => void\n\nexport interface RendererOptions<\n  HostNode = RendererNode,\n  HostElement = RendererElement\n> {\n  patchProp(\n    el: HostElement,\n    key: string,\n    prevValue: any,\n    nextValue: any,\n    isSVG?: boolean,\n    prevChildren?: VNode<HostNode, HostElement>[],\n    parentComponent?: ComponentInternalInstance | null,\n    parentSuspense?: SuspenseBoundary | null,\n    unmountChildren?: UnmountChildrenFn\n  ): void\n  insert(el: HostNode, parent: HostElement, anchor?: HostNode | null): void\n  remove(el: HostNode): void\n  createElement(\n    type: string,\n    isSVG?: boolean,\n    isCustomizedBuiltIn?: string,\n    vnodeProps?: (VNodeProps & { [key: string]: any }) | null\n  ): HostElement\n  createText(text: string): HostNode\n  createComment(text: string): HostNode\n  setText(node: HostNode, text: string): void\n  setElementText(node: HostElement, text: string): void\n  parentNode(node: HostNode): HostElement | null\n  nextSibling(node: HostNode): HostNode | null\n  querySelector?(selector: string): HostElement | null\n  setScopeId?(el: HostElement, id: string): void\n  cloneNode?(node: HostNode): HostNode\n  insertStaticContent?(\n    content: string,\n    parent: HostElement,\n    anchor: HostNode | null,\n    isSVG: boolean,\n    start?: HostNode | null,\n    end?: HostNode | null\n  ): [HostNode, HostNode]\n}\n\n// Renderer Node can technically be any object in the context of core renderer\n// logic - they are never directly operated on and always passed to the node op\n// functions provided via options, so the internal constraint is really just\n// a generic object.\nexport interface RendererNode {\n  [key: string]: any\n}\n\nexport interface RendererElement extends RendererNode {}\n\n// An object exposing the internals of a renderer, passed to tree-shakeable\n// features so that they can be decoupled from this file. Keys are shortened\n// to optimize bundle size.\nexport interface RendererInternals<\n  HostNode = RendererNode,\n  HostElement = RendererElement\n> {\n  p: PatchFn\n  um: UnmountFn\n  r: RemoveFn\n  m: MoveFn\n  mt: MountComponentFn\n  mc: MountChildrenFn\n  pc: PatchChildrenFn\n  pbc: PatchBlockChildrenFn\n  n: NextFn\n  o: RendererOptions<HostNode, HostElement>\n}\n\n// These functions are created inside a closure and therefore their types cannot\n// be directly exported. In order to avoid maintaining function signatures in\n// two places, we declare them once here and use them inside the closure.\ntype PatchFn = (\n  n1: VNode | null, // null means this is a mount\n  n2: VNode,\n  container: RendererElement,\n  anchor?: RendererNode | null,\n  parentComponent?: ComponentInternalInstance | null,\n  parentSuspense?: SuspenseBoundary | null,\n  isSVG?: boolean,\n  slotScopeIds?: string[] | null,\n  optimized?: boolean\n) => void\n\ntype MountChildrenFn = (\n  children: VNodeArrayChildren,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  isSVG: boolean,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n  start?: number\n) => void\n\ntype PatchChildrenFn = (\n  n1: VNode | null,\n  n2: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  isSVG: boolean,\n  slotScopeIds: string[] | null,\n  optimized: boolean\n) => void\n\ntype PatchBlockChildrenFn = (\n  oldChildren: VNode[],\n  newChildren: VNode[],\n  fallbackContainer: RendererElement,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  isSVG: boolean,\n  slotScopeIds: string[] | null\n) => void\n\ntype MoveFn = (\n  vnode: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  type: MoveType,\n  parentSuspense?: SuspenseBoundary | null\n) => void\n\ntype NextFn = (vnode: VNode) => RendererNode | null\n\ntype UnmountFn = (\n  vnode: VNode,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  doRemove?: boolean,\n  optimized?: boolean\n) => void\n\ntype RemoveFn = (vnode: VNode) => void\n\ntype UnmountChildrenFn = (\n  children: VNode[],\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  doRemove?: boolean,\n  optimized?: boolean,\n  start?: number\n) => void\n\nexport type MountComponentFn = (\n  initialVNode: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  isSVG: boolean,\n  optimized: boolean\n) => void\n\ntype ProcessTextOrCommentFn = (\n  n1: VNode | null,\n  n2: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null\n) => void\n\nexport type SetupRenderEffectFn = (\n  instance: ComponentInternalInstance,\n  initialVNode: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  parentSuspense: SuspenseBoundary | null,\n  isSVG: boolean,\n  optimized: boolean\n) => void\n\nexport const enum MoveType {\n  ENTER,\n  LEAVE,\n  REORDER\n}\n\nexport const queuePostRenderEffect = __FEATURE_SUSPENSE__\n  ? __TEST__\n    ? // vitest can't seem to handle eager circular dependency\n      (fn: Function | Function[], suspense: SuspenseBoundary | null) =>\n        queueEffectWithSuspense(fn, suspense)\n    : queueEffectWithSuspense\n  : queuePostFlushCb\n\n/**\n * The createRenderer function accepts two generic arguments:\n * HostNode and HostElement, corresponding to Node and Element types in the\n * host environment. For example, for runtime-dom, HostNode would be the DOM\n * `Node` interface and HostElement would be the DOM `Element` interface.\n *\n * Custom renderers can pass in the platform specific types like this:\n *\n * ``` js\n * const { render, createApp } = createRenderer<Node, Element>({\n *   patchProp,\n *   ...nodeOps\n * })\n * ```\n */\nexport function createRenderer<\n  HostNode = RendererNode,\n  HostElement = RendererElement\n>(options: RendererOptions<HostNode, HostElement>) {\n  return baseCreateRenderer<HostNode, HostElement>(options)\n}\n\n// Separate API for creating hydration-enabled renderer.\n// Hydration logic is only used when calling this function, making it\n// tree-shakable.\nexport function createHydrationRenderer(\n  options: RendererOptions<Node, Element>\n) {\n  return baseCreateRenderer(options, createHydrationFunctions)\n}\n\n// overload 1: no hydration\nfunction baseCreateRenderer<\n  HostNode = RendererNode,\n  HostElement = RendererElement\n>(options: RendererOptions<HostNode, HostElement>): Renderer<HostElement>\n\n// overload 2: with hydration\nfunction baseCreateRenderer(\n  options: RendererOptions<Node, Element>,\n  createHydrationFns: typeof createHydrationFunctions\n): HydrationRenderer\n\n// implementation\nfunction baseCreateRenderer(\n  options: RendererOptions,\n  createHydrationFns?: typeof createHydrationFunctions\n): any {\n  // compile-time feature flags check\n  if (__ESM_BUNDLER__ && !__TEST__) {\n    initFeatureFlags()\n  }\n\n  const target = getGlobalThis()\n  target.__VUE__ = true\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target)\n  }\n\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n    parentNode: hostParentNode,\n    nextSibling: hostNextSibling,\n    setScopeId: hostSetScopeId = NOOP,\n    insertStaticContent: hostInsertStaticContent\n  } = options\n\n  // Note: functions inside this closure should use `const xxx = () => {}`\n  // style in order to prevent being inlined by minifiers.\n  const patch: PatchFn = (\n    n1,\n    n2,\n    container,\n    anchor = null,\n    parentComponent = null,\n    parentSuspense = null,\n    isSVG = false,\n    slotScopeIds = null,\n    optimized = __DEV__ && isHmrUpdating ? false : !!n2.dynamicChildren\n  ) => {\n    if (n1 === n2) {\n      return\n    }\n\n    // patching & not same type, unmount old tree\n    if (n1 && !isSameVNodeType(n1, n2)) {\n      anchor = getNextHostNode(n1)\n      unmount(n1, parentComponent, parentSuspense, true)\n      n1 = null\n    }\n\n    if (n2.patchFlag === PatchFlags.BAIL) {\n      optimized = false\n      n2.dynamicChildren = null\n    }\n\n    const { type, ref, shapeFlag } = n2\n    switch (type) {\n      case Text:\n        processText(n1, n2, container, anchor)\n        break\n      case Comment:\n        processCommentNode(n1, n2, container, anchor)\n        break\n      case Static:\n        if (n1 == null) {\n          mountStaticNode(n2, container, anchor, isSVG)\n        } else if (__DEV__) {\n          patchStaticNode(n1, n2, container, isSVG)\n        }\n        break\n      case Fragment:\n        processFragment(\n          n1,\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        )\n        break\n      default:\n        if (shapeFlag & ShapeFlags.ELEMENT) {\n          processElement(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          )\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\n          processComponent(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          )\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\n          ;(type as typeof TeleportImpl).process(\n            n1 as TeleportVNode,\n            n2 as TeleportVNode,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized,\n            internals\n          )\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\n          ;(type as typeof SuspenseImpl).process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized,\n            internals\n          )\n        } else if (__DEV__) {\n          warn('Invalid VNode type:', type, `(${typeof type})`)\n        }\n    }\n\n    // set ref\n    if (ref != null && parentComponent) {\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2)\n    }\n  }\n\n  const processText: ProcessTextOrCommentFn = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        (n2.el = hostCreateText(n2.children as string)),\n        container,\n        anchor\n      )\n    } else {\n      const el = (n2.el = n1.el!)\n      if (n2.children !== n1.children) {\n        hostSetText(el, n2.children as string)\n      }\n    }\n  }\n\n  const processCommentNode: ProcessTextOrCommentFn = (\n    n1,\n    n2,\n    container,\n    anchor\n  ) => {\n    if (n1 == null) {\n      hostInsert(\n        (n2.el = hostCreateComment((n2.children as string) || '')),\n        container,\n        anchor\n      )\n    } else {\n      // there's no support for dynamic comments\n      n2.el = n1.el\n    }\n  }\n\n  const mountStaticNode = (\n    n2: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    isSVG: boolean\n  ) => {\n    // static nodes are only present when used with compiler-dom/runtime-dom\n    // which guarantees presence of hostInsertStaticContent.\n    ;[n2.el, n2.anchor] = hostInsertStaticContent!(\n      n2.children as string,\n      container,\n      anchor,\n      isSVG,\n      n2.el,\n      n2.anchor\n    )\n  }\n\n  /**\n   * Dev / HMR only\n   */\n  const patchStaticNode = (\n    n1: VNode,\n    n2: VNode,\n    container: RendererElement,\n    isSVG: boolean\n  ) => {\n    // static nodes are only patched during dev for HMR\n    if (n2.children !== n1.children) {\n      const anchor = hostNextSibling(n1.anchor!)\n      // remove existing\n      removeStaticNode(n1)\n      // insert new\n      ;[n2.el, n2.anchor] = hostInsertStaticContent!(\n        n2.children as string,\n        container,\n        anchor,\n        isSVG\n      )\n    } else {\n      n2.el = n1.el\n      n2.anchor = n1.anchor\n    }\n  }\n\n  const moveStaticNode = (\n    { el, anchor }: VNode,\n    container: RendererElement,\n    nextSibling: RendererNode | null\n  ) => {\n    let next\n    while (el && el !== anchor) {\n      next = hostNextSibling(el)\n      hostInsert(el, container, nextSibling)\n      el = next\n    }\n    hostInsert(anchor!, container, nextSibling)\n  }\n\n  const removeStaticNode = ({ el, anchor }: VNode) => {\n    let next\n    while (el && el !== anchor) {\n      next = hostNextSibling(el)\n      hostRemove(el)\n      el = next\n    }\n    hostRemove(anchor!)\n  }\n\n  const processElement = (\n    n1: VNode | null,\n    n2: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    isSVG: boolean,\n    slotScopeIds: string[] | null,\n    optimized: boolean\n  ) => {\n    isSVG = isSVG || n2.type === 'svg'\n    if (n1 == null) {\n      mountElement(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      )\n    } else {\n      patchElement(\n        n1,\n        n2,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      )\n    }\n  }\n\n  const mountElement = (\n    vnode: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    isSVG: boolean,\n    slotScopeIds: string[] | null,\n    optimized: boolean\n  ) => {\n    let el: RendererElement\n    let vnodeHook: VNodeHook | undefined | null\n    const { type, props, shapeFlag, transition, dirs } = vnode\n\n    el = vnode.el = hostCreateElement(\n      vnode.type as string,\n      isSVG,\n      props && props.is,\n      props\n    )\n\n    // mount children first, since some props may rely on child content\n    // being already rendered, e.g. `<select value>`\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n      hostSetElementText(el, vnode.children as string)\n    } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n      mountChildren(\n        vnode.children as VNodeArrayChildren,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG && type !== 'foreignObject',\n        slotScopeIds,\n        optimized\n      )\n    }\n\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, 'created')\n    }\n    // scopeId\n    setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent)\n    // props\n    if (props) {\n      for (const key in props) {\n        if (key !== 'value' && !isReservedProp(key)) {\n          hostPatchProp(\n            el,\n            key,\n            null,\n            props[key],\n            isSVG,\n            vnode.children as VNode[],\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          )\n        }\n      }\n      /**\n       * Special case for setting value on DOM elements:\n       * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\n       * - it needs to be forced (#1471)\n       * #2353 proposes adding another renderer option to configure this, but\n       * the properties affects are so finite it is worth special casing it\n       * here to reduce the complexity. (Special casing it also should not\n       * affect non-DOM renderers)\n       */\n      if ('value' in props) {\n        hostPatchProp(el, 'value', null, props.value)\n      }\n      if ((vnodeHook = props.onVnodeBeforeMount)) {\n        invokeVNodeHook(vnodeHook, parentComponent, vnode)\n      }\n    }\n\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n      Object.defineProperty(el, '__vnode', {\n        value: vnode,\n        enumerable: false\n      })\n      Object.defineProperty(el, '__vueParentComponent', {\n        value: parentComponent,\n        enumerable: false\n      })\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\n    }\n    // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\n    // #1689 For inside suspense + suspense resolved case, just call it\n    const needCallTransitionHooks =\n      (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\n      transition &&\n      !transition.persisted\n    if (needCallTransitionHooks) {\n      transition!.beforeEnter(el)\n    }\n    hostInsert(el, container, anchor)\n    if (\n      (vnodeHook = props && props.onVnodeMounted) ||\n      needCallTransitionHooks ||\n      dirs\n    ) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\n        needCallTransitionHooks && transition!.enter(el)\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\n      }, parentSuspense)\n    }\n  }\n\n  const setScopeId = (\n    el: RendererElement,\n    vnode: VNode,\n    scopeId: string | null,\n    slotScopeIds: string[] | null,\n    parentComponent: ComponentInternalInstance | null\n  ) => {\n    if (scopeId) {\n      hostSetScopeId(el, scopeId)\n    }\n    if (slotScopeIds) {\n      for (let i = 0; i < slotScopeIds.length; i++) {\n        hostSetScopeId(el, slotScopeIds[i])\n      }\n    }\n    if (parentComponent) {\n      let subTree = parentComponent.subTree\n      if (\n        __DEV__ &&\n        subTree.patchFlag > 0 &&\n        subTree.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\n      ) {\n        subTree =\n          filterSingleRoot(subTree.children as VNodeArrayChildren) || subTree\n      }\n      if (vnode === subTree) {\n        const parentVNode = parentComponent.vnode\n        setScopeId(\n          el,\n          parentVNode,\n          parentVNode.scopeId,\n          parentVNode.slotScopeIds,\n          parentComponent.parent\n        )\n      }\n    }\n  }\n\n  const mountChildren: MountChildrenFn = (\n    children,\n    container,\n    anchor,\n    parentComponent,\n    parentSuspense,\n    isSVG,\n    slotScopeIds,\n    optimized,\n    start = 0\n  ) => {\n    for (let i = start; i < children.length; i++) {\n      const child = (children[i] = optimized\n        ? cloneIfMounted(children[i] as VNode)\n        : normalizeVNode(children[i]))\n      patch(\n        null,\n        child,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      )\n    }\n  }\n\n  const patchElement = (\n    n1: VNode,\n    n2: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    isSVG: boolean,\n    slotScopeIds: string[] | null,\n    optimized: boolean\n  ) => {\n    const el = (n2.el = n1.el!)\n    let { patchFlag, dynamicChildren, dirs } = n2\n    // #1426 take the old vnode's patch flag into account since user may clone a\n    // compiler-generated vnode, which de-opts to FULL_PROPS\n    patchFlag |= n1.patchFlag & PatchFlags.FULL_PROPS\n    const oldProps = n1.props || EMPTY_OBJ\n    const newProps = n2.props || EMPTY_OBJ\n    let vnodeHook: VNodeHook | undefined | null\n\n    // disable recurse in beforeUpdate hooks\n    parentComponent && toggleRecurse(parentComponent, false)\n    if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\n    }\n    if (dirs) {\n      invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate')\n    }\n    parentComponent && toggleRecurse(parentComponent, true)\n\n    if (__DEV__ && isHmrUpdating) {\n      // HMR updated, force full diff\n      patchFlag = 0\n      optimized = false\n      dynamicChildren = null\n    }\n\n    const areChildrenSVG = isSVG && n2.type !== 'foreignObject'\n    if (dynamicChildren) {\n      patchBlockChildren(\n        n1.dynamicChildren!,\n        dynamicChildren,\n        el,\n        parentComponent,\n        parentSuspense,\n        areChildrenSVG,\n        slotScopeIds\n      )\n      if (__DEV__) {\n        // necessary for HMR\n        traverseStaticChildren(n1, n2)\n      }\n    } else if (!optimized) {\n      // full diff\n      patchChildren(\n        n1,\n        n2,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        areChildrenSVG,\n        slotScopeIds,\n        false\n      )\n    }\n\n    if (patchFlag > 0) {\n      // the presence of a patchFlag means this element's render code was\n      // generated by the compiler and can take the fast path.\n      // in this path old node and new node are guaranteed to have the same shape\n      // (i.e. at the exact same position in the source template)\n      if (patchFlag & PatchFlags.FULL_PROPS) {\n        // element props contain dynamic keys, full diff needed\n        patchProps(\n          el,\n          n2,\n          oldProps,\n          newProps,\n          parentComponent,\n          parentSuspense,\n          isSVG\n        )\n      } else {\n        // class\n        // this flag is matched when the element has dynamic class bindings.\n        if (patchFlag & PatchFlags.CLASS) {\n          if (oldProps.class !== newProps.class) {\n            hostPatchProp(el, 'class', null, newProps.class, isSVG)\n          }\n        }\n\n        // style\n        // this flag is matched when the element has dynamic style bindings\n        if (patchFlag & PatchFlags.STYLE) {\n          hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG)\n        }\n\n        // props\n        // This flag is matched when the element has dynamic prop/attr bindings\n        // other than class and style. The keys of dynamic prop/attrs are saved for\n        // faster iteration.\n        // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\n        // bail out and go through a full diff because we need to unset the old key\n        if (patchFlag & PatchFlags.PROPS) {\n          // if the flag is present then dynamicProps must be non-null\n          const propsToUpdate = n2.dynamicProps!\n          for (let i = 0; i < propsToUpdate.length; i++) {\n            const key = propsToUpdate[i]\n            const prev = oldProps[key]\n            const next = newProps[key]\n            // #1471 force patch value\n            if (next !== prev || key === 'value') {\n              hostPatchProp(\n                el,\n                key,\n                prev,\n                next,\n                isSVG,\n                n1.children as VNode[],\n                parentComponent,\n                parentSuspense,\n                unmountChildren\n              )\n            }\n          }\n        }\n      }\n\n      // text\n      // This flag is matched when the element has only dynamic text children.\n      if (patchFlag & PatchFlags.TEXT) {\n        if (n1.children !== n2.children) {\n          hostSetElementText(el, n2.children as string)\n        }\n      }\n    } else if (!optimized && dynamicChildren == null) {\n      // unoptimized, full diff\n      patchProps(\n        el,\n        n2,\n        oldProps,\n        newProps,\n        parentComponent,\n        parentSuspense,\n        isSVG\n      )\n    }\n\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated')\n      }, parentSuspense)\n    }\n  }\n\n  // The fast path for blocks.\n  const patchBlockChildren: PatchBlockChildrenFn = (\n    oldChildren,\n    newChildren,\n    fallbackContainer,\n    parentComponent,\n    parentSuspense,\n    isSVG,\n    slotScopeIds\n  ) => {\n    for (let i = 0; i < newChildren.length; i++) {\n      const oldVNode = oldChildren[i]\n      const newVNode = newChildren[i]\n      // Determine the container (parent element) for the patch.\n      const container =\n        // oldVNode may be an errored async setup() component inside Suspense\n        // which will not have a mounted element\n        oldVNode.el &&\n        // - In the case of a Fragment, we need to provide the actual parent\n        // of the Fragment itself so it can move its children.\n        (oldVNode.type === Fragment ||\n          // - In the case of different nodes, there is going to be a replacement\n          // which also requires the correct parent container\n          !isSameVNodeType(oldVNode, newVNode) ||\n          // - In the case of a component, it could contain anything.\n          oldVNode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.TELEPORT))\n          ? hostParentNode(oldVNode.el)!\n          : // In other cases, the parent container is not actually used so we\n            // just pass the block element here to avoid a DOM parentNode call.\n            fallbackContainer\n      patch(\n        oldVNode,\n        newVNode,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        true\n      )\n    }\n  }\n\n  const patchProps = (\n    el: RendererElement,\n    vnode: VNode,\n    oldProps: Data,\n    newProps: Data,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    isSVG: boolean\n  ) => {\n    if (oldProps !== newProps) {\n      if (oldProps !== EMPTY_OBJ) {\n        for (const key in oldProps) {\n          if (!isReservedProp(key) && !(key in newProps)) {\n            hostPatchProp(\n              el,\n              key,\n              oldProps[key],\n              null,\n              isSVG,\n              vnode.children as VNode[],\n              parentComponent,\n              parentSuspense,\n              unmountChildren\n            )\n          }\n        }\n      }\n      for (const key in newProps) {\n        // empty string is not valid prop\n        if (isReservedProp(key)) continue\n        const next = newProps[key]\n        const prev = oldProps[key]\n        // defer patching value\n        if (next !== prev && key !== 'value') {\n          hostPatchProp(\n            el,\n            key,\n            prev,\n            next,\n            isSVG,\n            vnode.children as VNode[],\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          )\n        }\n      }\n      if ('value' in newProps) {\n        hostPatchProp(el, 'value', oldProps.value, newProps.value)\n      }\n    }\n  }\n\n  const processFragment = (\n    n1: VNode | null,\n    n2: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    isSVG: boolean,\n    slotScopeIds: string[] | null,\n    optimized: boolean\n  ) => {\n    const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''))!\n    const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''))!\n\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2\n\n    if (\n      __DEV__ &&\n      // #5523 dev root fragment may inherit directives\n      (isHmrUpdating || patchFlag & PatchFlags.DEV_ROOT_FRAGMENT)\n    ) {\n      // HMR updated / Dev root fragment (w/ comments), force full diff\n      patchFlag = 0\n      optimized = false\n      dynamicChildren = null\n    }\n\n    // check if this is a slot fragment with :slotted scope ids\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\n        : fragmentSlotScopeIds\n    }\n\n    if (n1 == null) {\n      hostInsert(fragmentStartAnchor, container, anchor)\n      hostInsert(fragmentEndAnchor, container, anchor)\n      // a fragment can only have array children\n      // since they are either generated by the compiler, or implicitly created\n      // from arrays.\n      mountChildren(\n        n2.children as VNodeArrayChildren,\n        container,\n        fragmentEndAnchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      )\n    } else {\n      if (\n        patchFlag > 0 &&\n        patchFlag & PatchFlags.STABLE_FRAGMENT &&\n        dynamicChildren &&\n        // #2715 the previous fragment could've been a BAILed one as a result\n        // of renderSlot() with no valid children\n        n1.dynamicChildren\n      ) {\n        // a stable fragment (template root or <template v-for>) doesn't need to\n        // patch children order, but it may contain dynamicChildren.\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          container,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds\n        )\n        if (__DEV__) {\n          // necessary for HMR\n          traverseStaticChildren(n1, n2)\n        } else if (\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\n          //  get moved around. Make sure all root level vnodes inherit el.\n          // #2134 or if it's a component root, it may also get moved around\n          // as the component is being moved.\n          n2.key != null ||\n          (parentComponent && n2 === parentComponent.subTree)\n        ) {\n          traverseStaticChildren(n1, n2, true /* shallow */)\n        }\n      } else {\n        // keyed / unkeyed, or manual fragments.\n        // for keyed & unkeyed, since they are compiler generated from v-for,\n        // each child is guaranteed to be a block so the fragment will never\n        // have dynamicChildren.\n        patchChildren(\n          n1,\n          n2,\n          container,\n          fragmentEndAnchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        )\n      }\n    }\n  }\n\n  const processComponent = (\n    n1: VNode | null,\n    n2: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    isSVG: boolean,\n    slotScopeIds: string[] | null,\n    optimized: boolean\n  ) => {\n    n2.slotScopeIds = slotScopeIds\n    if (n1 == null) {\n      if (n2.shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\n        ;(parentComponent!.ctx as KeepAliveContext).activate(\n          n2,\n          container,\n          anchor,\n          isSVG,\n          optimized\n        )\n      } else {\n        mountComponent(\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          optimized\n        )\n      }\n    } else {\n      updateComponent(n1, n2, optimized)\n    }\n  }\n\n  const mountComponent: MountComponentFn = (\n    initialVNode,\n    container,\n    anchor,\n    parentComponent,\n    parentSuspense,\n    isSVG,\n    optimized\n  ) => {\n    // 2.x compat may pre-create the component instance before actually\n    // mounting\n    const compatMountInstance =\n      __COMPAT__ && initialVNode.isCompatRoot && initialVNode.component\n    const instance: ComponentInternalInstance =\n      compatMountInstance ||\n      (initialVNode.component = createComponentInstance(\n        initialVNode,\n        parentComponent,\n        parentSuspense\n      ))\n\n    if (__DEV__ && instance.type.__hmrId) {\n      registerHMR(instance)\n    }\n\n    if (__DEV__) {\n      pushWarningContext(initialVNode)\n      startMeasure(instance, `mount`)\n    }\n\n    // inject renderer internals for keepAlive\n    if (isKeepAlive(initialVNode)) {\n      ;(instance.ctx as KeepAliveContext).renderer = internals\n    }\n\n    // resolve props and slots for setup context\n    if (!(__COMPAT__ && compatMountInstance)) {\n      if (__DEV__) {\n        startMeasure(instance, `init`)\n      }\n      setupComponent(instance)\n      if (__DEV__) {\n        endMeasure(instance, `init`)\n      }\n    }\n\n    // setup() is async. This component relies on async logic to be resolved\n    // before proceeding\n    if (__FEATURE_SUSPENSE__ && instance.asyncDep) {\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect)\n\n      // Give it a placeholder if this is not hydration\n      // TODO handle self-defined fallback\n      if (!initialVNode.el) {\n        const placeholder = (instance.subTree = createVNode(Comment))\n        processCommentNode(null, placeholder, container!, anchor)\n      }\n      return\n    }\n\n    setupRenderEffect(\n      instance,\n      initialVNode,\n      container,\n      anchor,\n      parentSuspense,\n      isSVG,\n      optimized\n    )\n\n    if (__DEV__) {\n      popWarningContext()\n      endMeasure(instance, `mount`)\n    }\n  }\n\n  const updateComponent = (n1: VNode, n2: VNode, optimized: boolean) => {\n    const instance = (n2.component = n1.component)!\n    if (shouldUpdateComponent(n1, n2, optimized)) {\n      if (\n        __FEATURE_SUSPENSE__ &&\n        instance.asyncDep &&\n        !instance.asyncResolved\n      ) {\n        // async & still pending - just update props and slots\n        // since the component's reactive effect for render isn't set-up yet\n        if (__DEV__) {\n          pushWarningContext(n2)\n        }\n        updateComponentPreRender(instance, n2, optimized)\n        if (__DEV__) {\n          popWarningContext()\n        }\n        return\n      } else {\n        // normal update\n        instance.next = n2\n        // in case the child component is also queued, remove it to avoid\n        // double updating the same child component in the same flush.\n        invalidateJob(instance.update)\n        // instance.update is the reactive effect.\n        instance.update()\n      }\n    } else {\n      // no update needed. just copy over properties\n      n2.el = n1.el\n      instance.vnode = n2\n    }\n  }\n\n  const setupRenderEffect: SetupRenderEffectFn = (\n    instance,\n    initialVNode,\n    container,\n    anchor,\n    parentSuspense,\n    isSVG,\n    optimized\n  ) => {\n    const componentUpdateFn = () => {\n      if (!instance.isMounted) {\n        let vnodeHook: VNodeHook | null | undefined\n        const { el, props } = initialVNode\n        const { bm, m, parent } = instance\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode)\n\n        toggleRecurse(instance, false)\n        // beforeMount hook\n        if (bm) {\n          invokeArrayFns(bm)\n        }\n        // onVnodeBeforeMount\n        if (\n          !isAsyncWrapperVNode &&\n          (vnodeHook = props && props.onVnodeBeforeMount)\n        ) {\n          invokeVNodeHook(vnodeHook, parent, initialVNode)\n        }\n        if (\n          __COMPAT__ &&\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n        ) {\n          instance.emit('hook:beforeMount')\n        }\n        toggleRecurse(instance, true)\n\n        if (el && hydrateNode) {\n          // vnode has adopted host node - perform hydration instead of mount.\n          const hydrateSubTree = () => {\n            if (__DEV__) {\n              startMeasure(instance, `render`)\n            }\n            instance.subTree = renderComponentRoot(instance)\n            if (__DEV__) {\n              endMeasure(instance, `render`)\n            }\n            if (__DEV__) {\n              startMeasure(instance, `hydrate`)\n            }\n            hydrateNode!(\n              el as Node,\n              instance.subTree,\n              instance,\n              parentSuspense,\n              null\n            )\n            if (__DEV__) {\n              endMeasure(instance, `hydrate`)\n            }\n          }\n\n          if (isAsyncWrapperVNode) {\n            ;(initialVNode.type as ComponentOptions).__asyncLoader!().then(\n              // note: we are moving the render call into an async callback,\n              // which means it won't track dependencies - but it's ok because\n              // a server-rendered async wrapper is already in resolved state\n              // and it will never need to change.\n              () => !instance.isUnmounted && hydrateSubTree()\n            )\n          } else {\n            hydrateSubTree()\n          }\n        } else {\n          if (__DEV__) {\n            startMeasure(instance, `render`)\n          }\n          const subTree = (instance.subTree = renderComponentRoot(instance))\n          if (__DEV__) {\n            endMeasure(instance, `render`)\n          }\n          if (__DEV__) {\n            startMeasure(instance, `patch`)\n          }\n          patch(\n            null,\n            subTree,\n            container,\n            anchor,\n            instance,\n            parentSuspense,\n            isSVG\n          )\n          if (__DEV__) {\n            endMeasure(instance, `patch`)\n          }\n          initialVNode.el = subTree.el\n        }\n        // mounted hook\n        if (m) {\n          queuePostRenderEffect(m, parentSuspense)\n        }\n        // onVnodeMounted\n        if (\n          !isAsyncWrapperVNode &&\n          (vnodeHook = props && props.onVnodeMounted)\n        ) {\n          const scopedInitialVNode = initialVNode\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook!, parent, scopedInitialVNode),\n            parentSuspense\n          )\n        }\n        if (\n          __COMPAT__ &&\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n        ) {\n          queuePostRenderEffect(\n            () => instance.emit('hook:mounted'),\n            parentSuspense\n          )\n        }\n\n        // activated hook for keep-alive roots.\n        // #1742 activated hook must be accessed after first render\n        // since the hook may be injected by a child keep-alive\n        if (\n          initialVNode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE ||\n          (parent &&\n            isAsyncWrapper(parent.vnode) &&\n            parent.vnode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE)\n        ) {\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense)\n          if (\n            __COMPAT__ &&\n            isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n          ) {\n            queuePostRenderEffect(\n              () => instance.emit('hook:activated'),\n              parentSuspense\n            )\n          }\n        }\n        instance.isMounted = true\n\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n          devtoolsComponentAdded(instance)\n        }\n\n        // #2458: deference mount-only object parameters to prevent memleaks\n        initialVNode = container = anchor = null as any\n      } else {\n        // updateComponent\n        // This is triggered by mutation of component's own state (next: null)\n        // OR parent calling processComponent (next: VNode)\n        let { next, bu, u, parent, vnode } = instance\n        let originNext = next\n        let vnodeHook: VNodeHook | null | undefined\n        if (__DEV__) {\n          pushWarningContext(next || instance.vnode)\n        }\n\n        // Disallow component effect recursion during pre-lifecycle hooks.\n        toggleRecurse(instance, false)\n        if (next) {\n          next.el = vnode.el\n          updateComponentPreRender(instance, next, optimized)\n        } else {\n          next = vnode\n        }\n\n        // beforeUpdate hook\n        if (bu) {\n          invokeArrayFns(bu)\n        }\n        // onVnodeBeforeUpdate\n        if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\n          invokeVNodeHook(vnodeHook, parent, next, vnode)\n        }\n        if (\n          __COMPAT__ &&\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n        ) {\n          instance.emit('hook:beforeUpdate')\n        }\n        toggleRecurse(instance, true)\n\n        // render\n        if (__DEV__) {\n          startMeasure(instance, `render`)\n        }\n        const nextTree = renderComponentRoot(instance)\n        if (__DEV__) {\n          endMeasure(instance, `render`)\n        }\n        const prevTree = instance.subTree\n        instance.subTree = nextTree\n\n        if (__DEV__) {\n          startMeasure(instance, `patch`)\n        }\n        patch(\n          prevTree,\n          nextTree,\n          // parent may have changed if it's in a teleport\n          hostParentNode(prevTree.el!)!,\n          // anchor may have changed if it's in a fragment\n          getNextHostNode(prevTree),\n          instance,\n          parentSuspense,\n          isSVG\n        )\n        if (__DEV__) {\n          endMeasure(instance, `patch`)\n        }\n        next.el = nextTree.el\n        if (originNext === null) {\n          // self-triggered update. In case of HOC, update parent component\n          // vnode el. HOC is indicated by parent instance's subTree pointing\n          // to child component's vnode\n          updateHOCHostEl(instance, nextTree.el)\n        }\n        // updated hook\n        if (u) {\n          queuePostRenderEffect(u, parentSuspense)\n        }\n        // onVnodeUpdated\n        if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook!, parent, next!, vnode),\n            parentSuspense\n          )\n        }\n        if (\n          __COMPAT__ &&\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n        ) {\n          queuePostRenderEffect(\n            () => instance.emit('hook:updated'),\n            parentSuspense\n          )\n        }\n\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n          devtoolsComponentUpdated(instance)\n        }\n\n        if (__DEV__) {\n          popWarningContext()\n        }\n      }\n    }\n\n    // create reactive effect for rendering\n    const effect = (instance.effect = new ReactiveEffect(\n      componentUpdateFn,\n      () => queueJob(update),\n      instance.scope // track it in component's effect scope\n    ))\n\n    const update: SchedulerJob = (instance.update = () => effect.run())\n    update.id = instance.uid\n    // allowRecurse\n    // #1801, #2043 component render effects should allow recursive updates\n    toggleRecurse(instance, true)\n\n    if (__DEV__) {\n      effect.onTrack = instance.rtc\n        ? e => invokeArrayFns(instance.rtc!, e)\n        : void 0\n      effect.onTrigger = instance.rtg\n        ? e => invokeArrayFns(instance.rtg!, e)\n        : void 0\n      update.ownerInstance = instance\n    }\n\n    update()\n  }\n\n  const updateComponentPreRender = (\n    instance: ComponentInternalInstance,\n    nextVNode: VNode,\n    optimized: boolean\n  ) => {\n    nextVNode.component = instance\n    const prevProps = instance.vnode.props\n    instance.vnode = nextVNode\n    instance.next = null\n    updateProps(instance, nextVNode.props, prevProps, optimized)\n    updateSlots(instance, nextVNode.children, optimized)\n\n    pauseTracking()\n    // props update may have triggered pre-flush watchers.\n    // flush them before the render update.\n    flushPreFlushCbs()\n    resetTracking()\n  }\n\n  const patchChildren: PatchChildrenFn = (\n    n1,\n    n2,\n    container,\n    anchor,\n    parentComponent,\n    parentSuspense,\n    isSVG,\n    slotScopeIds,\n    optimized = false\n  ) => {\n    const c1 = n1 && n1.children\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0\n    const c2 = n2.children\n\n    const { patchFlag, shapeFlag } = n2\n    // fast path\n    if (patchFlag > 0) {\n      if (patchFlag & PatchFlags.KEYED_FRAGMENT) {\n        // this could be either fully-keyed or mixed (some keyed some not)\n        // presence of patchFlag means children are guaranteed to be arrays\n        patchKeyedChildren(\n          c1 as VNode[],\n          c2 as VNodeArrayChildren,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        )\n        return\n      } else if (patchFlag & PatchFlags.UNKEYED_FRAGMENT) {\n        // unkeyed\n        patchUnkeyedChildren(\n          c1 as VNode[],\n          c2 as VNodeArrayChildren,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        )\n        return\n      }\n    }\n\n    // children has 3 possibilities: text, array or no children.\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n      // text children fast path\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n        unmountChildren(c1 as VNode[], parentComponent, parentSuspense)\n      }\n      if (c2 !== c1) {\n        hostSetElementText(container, c2 as string)\n      }\n    } else {\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n        // prev children was array\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n          // two arrays, cannot assume anything, do full diff\n          patchKeyedChildren(\n            c1 as VNode[],\n            c2 as VNodeArrayChildren,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          )\n        } else {\n          // no new children, just unmount old\n          unmountChildren(c1 as VNode[], parentComponent, parentSuspense, true)\n        }\n      } else {\n        // prev children was text OR null\n        // new children is array OR null\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\n          hostSetElementText(container, '')\n        }\n        // mount new if array\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n          mountChildren(\n            c2 as VNodeArrayChildren,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          )\n        }\n      }\n    }\n  }\n\n  const patchUnkeyedChildren = (\n    c1: VNode[],\n    c2: VNodeArrayChildren,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    isSVG: boolean,\n    slotScopeIds: string[] | null,\n    optimized: boolean\n  ) => {\n    c1 = c1 || EMPTY_ARR\n    c2 = c2 || EMPTY_ARR\n    const oldLength = c1.length\n    const newLength = c2.length\n    const commonLength = Math.min(oldLength, newLength)\n    let i\n    for (i = 0; i < commonLength; i++) {\n      const nextChild = (c2[i] = optimized\n        ? cloneIfMounted(c2[i] as VNode)\n        : normalizeVNode(c2[i]))\n      patch(\n        c1[i],\n        nextChild,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      )\n    }\n    if (oldLength > newLength) {\n      // remove old\n      unmountChildren(\n        c1,\n        parentComponent,\n        parentSuspense,\n        true,\n        false,\n        commonLength\n      )\n    } else {\n      // mount new\n      mountChildren(\n        c2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        commonLength\n      )\n    }\n  }\n\n  // can be all-keyed or mixed\n  const patchKeyedChildren = (\n    c1: VNode[],\n    c2: VNodeArrayChildren,\n    container: RendererElement,\n    parentAnchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    isSVG: boolean,\n    slotScopeIds: string[] | null,\n    optimized: boolean\n  ) => {\n    let i = 0\n    const l2 = c2.length\n    let e1 = c1.length - 1 // prev ending index\n    let e2 = l2 - 1 // next ending index\n\n    // 1. sync from start\n    // (a b) c\n    // (a b) d e\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i]\n      const n2 = (c2[i] = optimized\n        ? cloneIfMounted(c2[i] as VNode)\n        : normalizeVNode(c2[i]))\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        )\n      } else {\n        break\n      }\n      i++\n    }\n\n    // 2. sync from end\n    // a (b c)\n    // d e (b c)\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1]\n      const n2 = (c2[e2] = optimized\n        ? cloneIfMounted(c2[e2] as VNode)\n        : normalizeVNode(c2[e2]))\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        )\n      } else {\n        break\n      }\n      e1--\n      e2--\n    }\n\n    // 3. common sequence + mount\n    // (a b)\n    // (a b) c\n    // i = 2, e1 = 1, e2 = 2\n    // (a b)\n    // c (a b)\n    // i = 0, e1 = -1, e2 = 0\n    if (i > e1) {\n      if (i <= e2) {\n        const nextPos = e2 + 1\n        const anchor = nextPos < l2 ? (c2[nextPos] as VNode).el : parentAnchor\n        while (i <= e2) {\n          patch(\n            null,\n            (c2[i] = optimized\n              ? cloneIfMounted(c2[i] as VNode)\n              : normalizeVNode(c2[i])),\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          )\n          i++\n        }\n      }\n    }\n\n    // 4. common sequence + unmount\n    // (a b) c\n    // (a b)\n    // i = 2, e1 = 2, e2 = 1\n    // a (b c)\n    // (b c)\n    // i = 0, e1 = 0, e2 = -1\n    else if (i > e2) {\n      while (i <= e1) {\n        unmount(c1[i], parentComponent, parentSuspense, true)\n        i++\n      }\n    }\n\n    // 5. unknown sequence\n    // [i ... e1 + 1]: a b [c d e] f g\n    // [i ... e2 + 1]: a b [e d c h] f g\n    // i = 2, e1 = 4, e2 = 5\n    else {\n      const s1 = i // prev starting index\n      const s2 = i // next starting index\n\n      // 5.1 build key:index map for newChildren\n      const keyToNewIndexMap: Map<string | number | symbol, number> = new Map()\n      for (i = s2; i <= e2; i++) {\n        const nextChild = (c2[i] = optimized\n          ? cloneIfMounted(c2[i] as VNode)\n          : normalizeVNode(c2[i]))\n        if (nextChild.key != null) {\n          if (__DEV__ && keyToNewIndexMap.has(nextChild.key)) {\n            warn(\n              `Duplicate keys found during update:`,\n              JSON.stringify(nextChild.key),\n              `Make sure keys are unique.`\n            )\n          }\n          keyToNewIndexMap.set(nextChild.key, i)\n        }\n      }\n\n      // 5.2 loop through old children left to be patched and try to patch\n      // matching nodes & remove nodes that are no longer present\n      let j\n      let patched = 0\n      const toBePatched = e2 - s2 + 1\n      let moved = false\n      // used to track whether any node has moved\n      let maxNewIndexSoFar = 0\n      // works as Map<newIndex, oldIndex>\n      // Note that oldIndex is offset by +1\n      // and oldIndex = 0 is a special value indicating the new node has\n      // no corresponding old node.\n      // used for determining longest stable subsequence\n      const newIndexToOldIndexMap = new Array(toBePatched)\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0\n\n      for (i = s1; i <= e1; i++) {\n        const prevChild = c1[i]\n        if (patched >= toBePatched) {\n          // all new children have been patched so this can only be a removal\n          unmount(prevChild, parentComponent, parentSuspense, true)\n          continue\n        }\n        let newIndex\n        if (prevChild.key != null) {\n          newIndex = keyToNewIndexMap.get(prevChild.key)\n        } else {\n          // key-less node, try to locate a key-less node of the same type\n          for (j = s2; j <= e2; j++) {\n            if (\n              newIndexToOldIndexMap[j - s2] === 0 &&\n              isSameVNodeType(prevChild, c2[j] as VNode)\n            ) {\n              newIndex = j\n              break\n            }\n          }\n        }\n        if (newIndex === undefined) {\n          unmount(prevChild, parentComponent, parentSuspense, true)\n        } else {\n          newIndexToOldIndexMap[newIndex - s2] = i + 1\n          if (newIndex >= maxNewIndexSoFar) {\n            maxNewIndexSoFar = newIndex\n          } else {\n            moved = true\n          }\n          patch(\n            prevChild,\n            c2[newIndex] as VNode,\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          )\n          patched++\n        }\n      }\n\n      // 5.3 move and mount\n      // generate longest stable subsequence only when nodes have moved\n      const increasingNewIndexSequence = moved\n        ? getSequence(newIndexToOldIndexMap)\n        : EMPTY_ARR\n      j = increasingNewIndexSequence.length - 1\n      // looping backwards so that we can use last patched node as anchor\n      for (i = toBePatched - 1; i >= 0; i--) {\n        const nextIndex = s2 + i\n        const nextChild = c2[nextIndex] as VNode\n        const anchor =\n          nextIndex + 1 < l2 ? (c2[nextIndex + 1] as VNode).el : parentAnchor\n        if (newIndexToOldIndexMap[i] === 0) {\n          // mount new\n          patch(\n            null,\n            nextChild,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          )\n        } else if (moved) {\n          // move if:\n          // There is no stable subsequence (e.g. a reverse)\n          // OR current node is not among the stable sequence\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\n            move(nextChild, container, anchor, MoveType.REORDER)\n          } else {\n            j--\n          }\n        }\n      }\n    }\n  }\n\n  const move: MoveFn = (\n    vnode,\n    container,\n    anchor,\n    moveType,\n    parentSuspense = null\n  ) => {\n    const { el, type, transition, children, shapeFlag } = vnode\n    if (shapeFlag & ShapeFlags.COMPONENT) {\n      move(vnode.component!.subTree, container, anchor, moveType)\n      return\n    }\n\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\n      vnode.suspense!.move(container, anchor, moveType)\n      return\n    }\n\n    if (shapeFlag & ShapeFlags.TELEPORT) {\n      ;(type as typeof TeleportImpl).move(vnode, container, anchor, internals)\n      return\n    }\n\n    if (type === Fragment) {\n      hostInsert(el!, container, anchor)\n      for (let i = 0; i < (children as VNode[]).length; i++) {\n        move((children as VNode[])[i], container, anchor, moveType)\n      }\n      hostInsert(vnode.anchor!, container, anchor)\n      return\n    }\n\n    if (type === Static) {\n      moveStaticNode(vnode, container, anchor)\n      return\n    }\n\n    // single nodes\n    const needTransition =\n      moveType !== MoveType.REORDER &&\n      shapeFlag & ShapeFlags.ELEMENT &&\n      transition\n    if (needTransition) {\n      if (moveType === MoveType.ENTER) {\n        transition!.beforeEnter(el!)\n        hostInsert(el!, container, anchor)\n        queuePostRenderEffect(() => transition!.enter(el!), parentSuspense)\n      } else {\n        const { leave, delayLeave, afterLeave } = transition!\n        const remove = () => hostInsert(el!, container, anchor)\n        const performLeave = () => {\n          leave(el!, () => {\n            remove()\n            afterLeave && afterLeave()\n          })\n        }\n        if (delayLeave) {\n          delayLeave(el!, remove, performLeave)\n        } else {\n          performLeave()\n        }\n      }\n    } else {\n      hostInsert(el!, container, anchor)\n    }\n  }\n\n  const unmount: UnmountFn = (\n    vnode,\n    parentComponent,\n    parentSuspense,\n    doRemove = false,\n    optimized = false\n  ) => {\n    const {\n      type,\n      props,\n      ref,\n      children,\n      dynamicChildren,\n      shapeFlag,\n      patchFlag,\n      dirs\n    } = vnode\n    // unset ref\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode, true)\n    }\n\n    if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\n      ;(parentComponent!.ctx as KeepAliveContext).deactivate(vnode)\n      return\n    }\n\n    const shouldInvokeDirs = shapeFlag & ShapeFlags.ELEMENT && dirs\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode)\n\n    let vnodeHook: VNodeHook | undefined | null\n    if (\n      shouldInvokeVnodeHook &&\n      (vnodeHook = props && props.onVnodeBeforeUnmount)\n    ) {\n      invokeVNodeHook(vnodeHook, parentComponent, vnode)\n    }\n\n    if (shapeFlag & ShapeFlags.COMPONENT) {\n      unmountComponent(vnode.component!, parentSuspense, doRemove)\n    } else {\n      if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\n        vnode.suspense!.unmount(parentSuspense, doRemove)\n        return\n      }\n\n      if (shouldInvokeDirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount')\n      }\n\n      if (shapeFlag & ShapeFlags.TELEPORT) {\n        ;(vnode.type as typeof TeleportImpl).remove(\n          vnode,\n          parentComponent,\n          parentSuspense,\n          optimized,\n          internals,\n          doRemove\n        )\n      } else if (\n        dynamicChildren &&\n        // #1153: fast path should not be taken for non-stable (v-for) fragments\n        (type !== Fragment ||\n          (patchFlag > 0 && patchFlag & PatchFlags.STABLE_FRAGMENT))\n      ) {\n        // fast path for block nodes: only need to unmount dynamic children.\n        unmountChildren(\n          dynamicChildren,\n          parentComponent,\n          parentSuspense,\n          false,\n          true\n        )\n      } else if (\n        (type === Fragment &&\n          patchFlag &\n            (PatchFlags.KEYED_FRAGMENT | PatchFlags.UNKEYED_FRAGMENT)) ||\n        (!optimized && shapeFlag & ShapeFlags.ARRAY_CHILDREN)\n      ) {\n        unmountChildren(children as VNode[], parentComponent, parentSuspense)\n      }\n\n      if (doRemove) {\n        remove(vnode)\n      }\n    }\n\n    if (\n      (shouldInvokeVnodeHook &&\n        (vnodeHook = props && props.onVnodeUnmounted)) ||\n      shouldInvokeDirs\n    ) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\n        shouldInvokeDirs &&\n          invokeDirectiveHook(vnode, null, parentComponent, 'unmounted')\n      }, parentSuspense)\n    }\n  }\n\n  const remove: RemoveFn = vnode => {\n    const { type, el, anchor, transition } = vnode\n    if (type === Fragment) {\n      if (\n        __DEV__ &&\n        vnode.patchFlag > 0 &&\n        vnode.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT &&\n        transition &&\n        !transition.persisted\n      ) {\n        ;(vnode.children as VNode[]).forEach(child => {\n          if (child.type === Comment) {\n            hostRemove(child.el!)\n          } else {\n            remove(child)\n          }\n        })\n      } else {\n        removeFragment(el!, anchor!)\n      }\n      return\n    }\n\n    if (type === Static) {\n      removeStaticNode(vnode)\n      return\n    }\n\n    const performRemove = () => {\n      hostRemove(el!)\n      if (transition && !transition.persisted && transition.afterLeave) {\n        transition.afterLeave()\n      }\n    }\n\n    if (\n      vnode.shapeFlag & ShapeFlags.ELEMENT &&\n      transition &&\n      !transition.persisted\n    ) {\n      const { leave, delayLeave } = transition\n      const performLeave = () => leave(el!, performRemove)\n      if (delayLeave) {\n        delayLeave(vnode.el!, performRemove, performLeave)\n      } else {\n        performLeave()\n      }\n    } else {\n      performRemove()\n    }\n  }\n\n  const removeFragment = (cur: RendererNode, end: RendererNode) => {\n    // For fragments, directly remove all contained DOM nodes.\n    // (fragment child nodes cannot have transition)\n    let next\n    while (cur !== end) {\n      next = hostNextSibling(cur)!\n      hostRemove(cur)\n      cur = next\n    }\n    hostRemove(end)\n  }\n\n  const unmountComponent = (\n    instance: ComponentInternalInstance,\n    parentSuspense: SuspenseBoundary | null,\n    doRemove?: boolean\n  ) => {\n    if (__DEV__ && instance.type.__hmrId) {\n      unregisterHMR(instance)\n    }\n\n    const { bum, scope, update, subTree, um } = instance\n\n    // beforeUnmount hook\n    if (bum) {\n      invokeArrayFns(bum)\n    }\n\n    if (\n      __COMPAT__ &&\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n    ) {\n      instance.emit('hook:beforeDestroy')\n    }\n\n    // stop effects in component scope\n    scope.stop()\n\n    // update may be null if a component is unmounted before its async\n    // setup has resolved.\n    if (update) {\n      // so that scheduler will no longer invoke it\n      update.active = false\n      unmount(subTree, instance, parentSuspense, doRemove)\n    }\n    // unmounted hook\n    if (um) {\n      queuePostRenderEffect(um, parentSuspense)\n    }\n    if (\n      __COMPAT__ &&\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n    ) {\n      queuePostRenderEffect(\n        () => instance.emit('hook:destroyed'),\n        parentSuspense\n      )\n    }\n    queuePostRenderEffect(() => {\n      instance.isUnmounted = true\n    }, parentSuspense)\n\n    // A component with async dep inside a pending suspense is unmounted before\n    // its async dep resolves. This should remove the dep from the suspense, and\n    // cause the suspense to resolve immediately if that was the last dep.\n    if (\n      __FEATURE_SUSPENSE__ &&\n      parentSuspense &&\n      parentSuspense.pendingBranch &&\n      !parentSuspense.isUnmounted &&\n      instance.asyncDep &&\n      !instance.asyncResolved &&\n      instance.suspenseId === parentSuspense.pendingId\n    ) {\n      parentSuspense.deps--\n      if (parentSuspense.deps === 0) {\n        parentSuspense.resolve()\n      }\n    }\n\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n      devtoolsComponentRemoved(instance)\n    }\n  }\n\n  const unmountChildren: UnmountChildrenFn = (\n    children,\n    parentComponent,\n    parentSuspense,\n    doRemove = false,\n    optimized = false,\n    start = 0\n  ) => {\n    for (let i = start; i < children.length; i++) {\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized)\n    }\n  }\n\n  const getNextHostNode: NextFn = vnode => {\n    if (vnode.shapeFlag & ShapeFlags.COMPONENT) {\n      return getNextHostNode(vnode.component!.subTree)\n    }\n    if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\n      return vnode.suspense!.next()\n    }\n    return hostNextSibling((vnode.anchor || vnode.el)!)\n  }\n\n  const render: RootRenderFunction = (vnode, container, isSVG) => {\n    if (vnode == null) {\n      if (container._vnode) {\n        unmount(container._vnode, null, null, true)\n      }\n    } else {\n      patch(container._vnode || null, vnode, container, null, null, null, isSVG)\n    }\n    flushPreFlushCbs()\n    flushPostFlushCbs()\n    container._vnode = vnode\n  }\n\n  const internals: RendererInternals = {\n    p: patch,\n    um: unmount,\n    m: move,\n    r: remove,\n    mt: mountComponent,\n    mc: mountChildren,\n    pc: patchChildren,\n    pbc: patchBlockChildren,\n    n: getNextHostNode,\n    o: options\n  }\n\n  let hydrate: ReturnType<typeof createHydrationFunctions>[0] | undefined\n  let hydrateNode: ReturnType<typeof createHydrationFunctions>[1] | undefined\n  if (createHydrationFns) {\n    ;[hydrate, hydrateNode] = createHydrationFns(\n      internals as RendererInternals<Node, Element>\n    )\n  }\n\n  return {\n    render,\n    hydrate,\n    createApp: createAppAPI(render, hydrate)\n  }\n}\n\nfunction toggleRecurse(\n  { effect, update }: ComponentInternalInstance,\n  allowed: boolean\n) {\n  effect.allowRecurse = update.allowRecurse = allowed\n}\n\n/**\n * #1156\n * When a component is HMR-enabled, we need to make sure that all static nodes\n * inside a block also inherit the DOM element from the previous tree so that\n * HMR updates (which are full updates) can retrieve the element for patching.\n *\n * #2080\n * Inside keyed `template` fragment static children, if a fragment is moved,\n * the children will always be moved. Therefore, in order to ensure correct move\n * position, el should be inherited from previous nodes.\n */\nexport function traverseStaticChildren(n1: VNode, n2: VNode, shallow = false) {\n  const ch1 = n1.children\n  const ch2 = n2.children\n  if (isArray(ch1) && isArray(ch2)) {\n    for (let i = 0; i < ch1.length; i++) {\n      // this is only called in the optimized path so array children are\n      // guaranteed to be vnodes\n      const c1 = ch1[i] as VNode\n      let c2 = ch2[i] as VNode\n      if (c2.shapeFlag & ShapeFlags.ELEMENT && !c2.dynamicChildren) {\n        if (c2.patchFlag <= 0 || c2.patchFlag === PatchFlags.HYDRATE_EVENTS) {\n          c2 = ch2[i] = cloneIfMounted(ch2[i] as VNode)\n          c2.el = c1.el\n        }\n        if (!shallow) traverseStaticChildren(c1, c2)\n      }\n      // #6852 also inherit for text nodes\n      if (c2.type === Text) {\n        c2.el = c1.el\n      }\n      // also inherit for comment nodes, but not placeholders (e.g. v-if which\n      // would have received .el during block patch)\n      if (__DEV__ && c2.type === Comment && !c2.el) {\n        c2.el = c1.el\n      }\n    }\n  }\n}\n\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\nfunction getSequence(arr: number[]): number[] {\n  const p = arr.slice()\n  const result = [0]\n  let i, j, u, v, c\n  const len = arr.length\n  for (i = 0; i < len; i++) {\n    const arrI = arr[i]\n    if (arrI !== 0) {\n      j = result[result.length - 1]\n      if (arr[j] < arrI) {\n        p[i] = j\n        result.push(i)\n        continue\n      }\n      u = 0\n      v = result.length - 1\n      while (u < v) {\n        c = (u + v) >> 1\n        if (arr[result[c]] < arrI) {\n          u = c + 1\n        } else {\n          v = c\n        }\n      }\n      if (arrI < arr[result[u]]) {\n        if (u > 0) {\n          p[i] = result[u - 1]\n        }\n        result[u] = i\n      }\n    }\n  }\n  u = result.length\n  v = result[u - 1]\n  while (u-- > 0) {\n    result[u] = v\n    v = p[v]\n  }\n  return result\n}\n", "import {\n  VNode,\n  normalizeVNode,\n  VNodeProps,\n  isSameVNodeType,\n  openBlock,\n  closeBlock,\n  currentBlock,\n  Comment,\n  createVNode,\n  isBlockTreeEnabled\n} from '../vnode'\nimport { isFunction, isArray, ShapeFlags, toNumber } from '@vue/shared'\nimport { ComponentInternalInstance, handleSetupResult } from '../component'\nimport { Slots } from '../componentSlots'\nimport {\n  RendererInternals,\n  MoveType,\n  SetupRenderEffectFn,\n  RendererNode,\n  RendererElement\n} from '../renderer'\nimport { queuePostFlushCb } from '../scheduler'\nimport { filterSingleRoot, updateHOCHostEl } from '../componentRenderUtils'\nimport {\n  pushWarningContext,\n  popWarningContext,\n  warn,\n  assertNumber\n} from '../warning'\nimport { handleError, ErrorCodes } from '../errorHandling'\n\nexport interface SuspenseProps {\n  onResolve?: () => void\n  onPending?: () => void\n  onFallback?: () => void\n  timeout?: string | number\n  /**\n   * Allow suspense to be captured by parent suspense\n   *\n   * @default false\n   */\n  suspensible?: boolean\n}\n\nexport const isSuspense = (type: any): boolean => type.__isSuspense\n\n// Suspense exposes a component-like API, and is treated like a component\n// in the compiler, but internally it's a special built-in type that hooks\n// directly into the renderer.\nexport const SuspenseImpl = {\n  name: 'Suspense',\n  // In order to make Suspense tree-shakable, we need to avoid importing it\n  // directly in the renderer. The renderer checks for the __isSuspense flag\n  // on a vnode's type and calls the `process` method, passing in renderer\n  // internals.\n  __isSuspense: true,\n  process(\n    n1: VNode | null,\n    n2: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    isSVG: boolean,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n    // platform-specific impl passed from renderer\n    rendererInternals: RendererInternals\n  ) {\n    if (n1 == null) {\n      mountSuspense(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      )\n    } else {\n      patchSuspense(\n        n1,\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      )\n    }\n  },\n  hydrate: hydrateSuspense,\n  create: createSuspenseBoundary,\n  normalize: normalizeSuspenseChildren\n}\n\n// Force-casted public typing for h and TSX props inference\nexport const Suspense = (__FEATURE_SUSPENSE__\n  ? SuspenseImpl\n  : null) as unknown as {\n  __isSuspense: true\n  new (): {\n    $props: VNodeProps & SuspenseProps\n    $slots: {\n      default(): VNode[]\n      fallback(): VNode[]\n    }\n  }\n}\n\nfunction triggerEvent(\n  vnode: VNode,\n  name: 'onResolve' | 'onPending' | 'onFallback'\n) {\n  const eventListener = vnode.props && vnode.props[name]\n  if (isFunction(eventListener)) {\n    eventListener()\n  }\n}\n\nfunction mountSuspense(\n  vnode: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  isSVG: boolean,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n  rendererInternals: RendererInternals\n) {\n  const {\n    p: patch,\n    o: { createElement }\n  } = rendererInternals\n  const hiddenContainer = createElement('div')\n  const suspense = (vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    container,\n    hiddenContainer,\n    anchor,\n    isSVG,\n    slotScopeIds,\n    optimized,\n    rendererInternals\n  ))\n\n  // start mounting the content subtree in an off-dom container\n  patch(\n    null,\n    (suspense.pendingBranch = vnode.ssContent!),\n    hiddenContainer,\n    null,\n    parentComponent,\n    suspense,\n    isSVG,\n    slotScopeIds\n  )\n  // now check if we have encountered any async deps\n  if (suspense.deps > 0) {\n    // has async\n    // invoke @fallback event\n    triggerEvent(vnode, 'onPending')\n    triggerEvent(vnode, 'onFallback')\n\n    // mount the fallback tree\n    patch(\n      null,\n      vnode.ssFallback!,\n      container,\n      anchor,\n      parentComponent,\n      null, // fallback tree will not have suspense context\n      isSVG,\n      slotScopeIds\n    )\n    setActiveBranch(suspense, vnode.ssFallback!)\n  } else {\n    // Suspense has no async deps. Just resolve.\n    suspense.resolve(false, true)\n  }\n}\n\nfunction patchSuspense(\n  n1: VNode,\n  n2: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  parentComponent: ComponentInternalInstance | null,\n  isSVG: boolean,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n  { p: patch, um: unmount, o: { createElement } }: RendererInternals\n) {\n  const suspense = (n2.suspense = n1.suspense)!\n  suspense.vnode = n2\n  n2.el = n1.el\n  const newBranch = n2.ssContent!\n  const newFallback = n2.ssFallback!\n\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense\n  if (pendingBranch) {\n    suspense.pendingBranch = newBranch\n    if (isSameVNodeType(newBranch, pendingBranch)) {\n      // same root type but content may have changed.\n      patch(\n        pendingBranch,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      )\n      if (suspense.deps <= 0) {\n        suspense.resolve()\n      } else if (isInFallback) {\n        patch(\n          activeBranch,\n          newFallback,\n          container,\n          anchor,\n          parentComponent,\n          null, // fallback tree will not have suspense context\n          isSVG,\n          slotScopeIds,\n          optimized\n        )\n        setActiveBranch(suspense, newFallback)\n      }\n    } else {\n      // toggled before pending tree is resolved\n      suspense.pendingId++\n      if (isHydrating) {\n        // if toggled before hydration is finished, the current DOM tree is\n        // no longer valid. set it as the active branch so it will be unmounted\n        // when resolved\n        suspense.isHydrating = false\n        suspense.activeBranch = pendingBranch\n      } else {\n        unmount(pendingBranch, parentComponent, suspense)\n      }\n      // increment pending ID. this is used to invalidate async callbacks\n      // reset suspense state\n      suspense.deps = 0\n      // discard effects from pending branch\n      suspense.effects.length = 0\n      // discard previous container\n      suspense.hiddenContainer = createElement('div')\n\n      if (isInFallback) {\n        // already in fallback state\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        )\n        if (suspense.deps <= 0) {\n          suspense.resolve()\n        } else {\n          patch(\n            activeBranch,\n            newFallback,\n            container,\n            anchor,\n            parentComponent,\n            null, // fallback tree will not have suspense context\n            isSVG,\n            slotScopeIds,\n            optimized\n          )\n          setActiveBranch(suspense, newFallback)\n        }\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n        // toggled \"back\" to current active branch\n        patch(\n          activeBranch,\n          newBranch,\n          container,\n          anchor,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        )\n        // force resolve\n        suspense.resolve(true)\n      } else {\n        // switched to a 3rd branch\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        )\n        if (suspense.deps <= 0) {\n          suspense.resolve()\n        }\n      }\n    }\n  } else {\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n      // root did not change, just normal patch\n      patch(\n        activeBranch,\n        newBranch,\n        container,\n        anchor,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      )\n      setActiveBranch(suspense, newBranch)\n    } else {\n      // root node toggled\n      // invoke @pending event\n      triggerEvent(n2, 'onPending')\n      // mount pending branch in off-dom container\n      suspense.pendingBranch = newBranch\n      suspense.pendingId++\n      patch(\n        null,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      )\n      if (suspense.deps <= 0) {\n        // incoming branch has no async deps, resolve now.\n        suspense.resolve()\n      } else {\n        const { timeout, pendingId } = suspense\n        if (timeout > 0) {\n          setTimeout(() => {\n            if (suspense.pendingId === pendingId) {\n              suspense.fallback(newFallback)\n            }\n          }, timeout)\n        } else if (timeout === 0) {\n          suspense.fallback(newFallback)\n        }\n      }\n    }\n  }\n}\n\nexport interface SuspenseBoundary {\n  vnode: VNode<RendererNode, RendererElement, SuspenseProps>\n  parent: SuspenseBoundary | null\n  parentComponent: ComponentInternalInstance | null\n  isSVG: boolean\n  container: RendererElement\n  hiddenContainer: RendererElement\n  anchor: RendererNode | null\n  activeBranch: VNode | null\n  pendingBranch: VNode | null\n  deps: number\n  pendingId: number\n  timeout: number\n  isInFallback: boolean\n  isHydrating: boolean\n  isUnmounted: boolean\n  effects: Function[]\n  resolve(force?: boolean, sync?: boolean): void\n  fallback(fallbackVNode: VNode): void\n  move(\n    container: RendererElement,\n    anchor: RendererNode | null,\n    type: MoveType\n  ): void\n  next(): RendererNode | null\n  registerDep(\n    instance: ComponentInternalInstance,\n    setupRenderEffect: SetupRenderEffectFn\n  ): void\n  unmount(parentSuspense: SuspenseBoundary | null, doRemove?: boolean): void\n}\n\nlet hasWarned = false\n\nfunction createSuspenseBoundary(\n  vnode: VNode,\n  parentSuspense: SuspenseBoundary | null,\n  parentComponent: ComponentInternalInstance | null,\n  container: RendererElement,\n  hiddenContainer: RendererElement,\n  anchor: RendererNode | null,\n  isSVG: boolean,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n  rendererInternals: RendererInternals,\n  isHydrating = false\n): SuspenseBoundary {\n  /* istanbul ignore if */\n  if (__DEV__ && !__TEST__ && !hasWarned) {\n    hasWarned = true\n    // @ts-ignore `console.info` cannot be null error\n    console[console.info ? 'info' : 'log'](\n      `<Suspense> is an experimental feature and its API will likely change.`\n    )\n  }\n\n  const {\n    p: patch,\n    m: move,\n    um: unmount,\n    n: next,\n    o: { parentNode, remove }\n  } = rendererInternals\n\n  // if set `suspensible: true`, set the current suspense as a dep of parent suspense\n  let parentSuspenseId: number | undefined\n  const isSuspensible = isVNodeSuspensible(vnode)\n  if (isSuspensible) {\n    if (parentSuspense?.pendingBranch) {\n      parentSuspenseId = parentSuspense.pendingId\n      parentSuspense.deps++\n    }\n  }\n\n  const timeout = vnode.props ? toNumber(vnode.props.timeout) : undefined\n  if (__DEV__) {\n    assertNumber(timeout, `Suspense timeout`)\n  }\n\n  const suspense: SuspenseBoundary = {\n    vnode,\n    parent: parentSuspense,\n    parentComponent,\n    isSVG,\n    container,\n    hiddenContainer,\n    anchor,\n    deps: 0,\n    pendingId: 0,\n    timeout: typeof timeout === 'number' ? timeout : -1,\n    activeBranch: null,\n    pendingBranch: null,\n    isInFallback: true,\n    isHydrating,\n    isUnmounted: false,\n    effects: [],\n\n    resolve(resume = false, sync = false) {\n      if (__DEV__) {\n        if (!resume && !suspense.pendingBranch) {\n          throw new Error(\n            `suspense.resolve() is called without a pending branch.`\n          )\n        }\n        if (suspense.isUnmounted) {\n          throw new Error(\n            `suspense.resolve() is called on an already unmounted suspense boundary.`\n          )\n        }\n      }\n      const {\n        vnode,\n        activeBranch,\n        pendingBranch,\n        pendingId,\n        effects,\n        parentComponent,\n        container\n      } = suspense\n\n      if (suspense.isHydrating) {\n        suspense.isHydrating = false\n      } else if (!resume) {\n        const delayEnter =\n          activeBranch &&\n          pendingBranch!.transition &&\n          pendingBranch!.transition.mode === 'out-in'\n        if (delayEnter) {\n          activeBranch!.transition!.afterLeave = () => {\n            if (pendingId === suspense.pendingId) {\n              move(pendingBranch!, container, anchor, MoveType.ENTER)\n            }\n          }\n        }\n        // this is initial anchor on mount\n        let { anchor } = suspense\n        // unmount current active tree\n        if (activeBranch) {\n          // if the fallback tree was mounted, it may have been moved\n          // as part of a parent suspense. get the latest anchor for insertion\n          anchor = next(activeBranch)\n          unmount(activeBranch, parentComponent, suspense, true)\n        }\n        if (!delayEnter) {\n          // move content from off-dom container to actual container\n          move(pendingBranch!, container, anchor, MoveType.ENTER)\n        }\n      }\n\n      setActiveBranch(suspense, pendingBranch!)\n      suspense.pendingBranch = null\n      suspense.isInFallback = false\n\n      // flush buffered effects\n      // check if there is a pending parent suspense\n      let parent = suspense.parent\n      let hasUnresolvedAncestor = false\n      while (parent) {\n        if (parent.pendingBranch) {\n          // found a pending parent suspense, merge buffered post jobs\n          // into that parent\n          parent.effects.push(...effects)\n          hasUnresolvedAncestor = true\n          break\n        }\n        parent = parent.parent\n      }\n      // no pending parent suspense, flush all jobs\n      if (!hasUnresolvedAncestor) {\n        queuePostFlushCb(effects)\n      }\n      suspense.effects = []\n\n      // resolve parent suspense if all async deps are resolved\n      if (isSuspensible) {\n        if (\n          parentSuspense &&\n          parentSuspense.pendingBranch &&\n          parentSuspenseId === parentSuspense.pendingId\n        ) {\n          parentSuspense.deps--\n          if (parentSuspense.deps === 0 && !sync) {\n            parentSuspense.resolve()\n          }\n        }\n      }\n\n      // invoke @resolve event\n      triggerEvent(vnode, 'onResolve')\n    },\n\n    fallback(fallbackVNode) {\n      if (!suspense.pendingBranch) {\n        return\n      }\n\n      const { vnode, activeBranch, parentComponent, container, isSVG } =\n        suspense\n\n      // invoke @fallback event\n      triggerEvent(vnode, 'onFallback')\n\n      const anchor = next(activeBranch!)\n      const mountFallback = () => {\n        if (!suspense.isInFallback) {\n          return\n        }\n        // mount the fallback tree\n        patch(\n          null,\n          fallbackVNode,\n          container,\n          anchor,\n          parentComponent,\n          null, // fallback tree will not have suspense context\n          isSVG,\n          slotScopeIds,\n          optimized\n        )\n        setActiveBranch(suspense, fallbackVNode)\n      }\n\n      const delayEnter =\n        fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in'\n      if (delayEnter) {\n        activeBranch!.transition!.afterLeave = mountFallback\n      }\n      suspense.isInFallback = true\n\n      // unmount current active branch\n      unmount(\n        activeBranch!,\n        parentComponent,\n        null, // no suspense so unmount hooks fire now\n        true // shouldRemove\n      )\n\n      if (!delayEnter) {\n        mountFallback()\n      }\n    },\n\n    move(container, anchor, type) {\n      suspense.activeBranch &&\n        move(suspense.activeBranch, container, anchor, type)\n      suspense.container = container\n    },\n\n    next() {\n      return suspense.activeBranch && next(suspense.activeBranch)\n    },\n\n    registerDep(instance, setupRenderEffect) {\n      const isInPendingSuspense = !!suspense.pendingBranch\n      if (isInPendingSuspense) {\n        suspense.deps++\n      }\n      const hydratedEl = instance.vnode.el\n      instance\n        .asyncDep!.catch(err => {\n          handleError(err, instance, ErrorCodes.SETUP_FUNCTION)\n        })\n        .then(asyncSetupResult => {\n          // retry when the setup() promise resolves.\n          // component may have been unmounted before resolve.\n          if (\n            instance.isUnmounted ||\n            suspense.isUnmounted ||\n            suspense.pendingId !== instance.suspenseId\n          ) {\n            return\n          }\n          // retry from this component\n          instance.asyncResolved = true\n          const { vnode } = instance\n          if (__DEV__) {\n            pushWarningContext(vnode)\n          }\n          handleSetupResult(instance, asyncSetupResult, false)\n          if (hydratedEl) {\n            // vnode may have been replaced if an update happened before the\n            // async dep is resolved.\n            vnode.el = hydratedEl\n          }\n          const placeholder = !hydratedEl && instance.subTree.el\n          setupRenderEffect(\n            instance,\n            vnode,\n            // component may have been moved before resolve.\n            // if this is not a hydration, instance.subTree will be the comment\n            // placeholder.\n            parentNode(hydratedEl || instance.subTree.el!)!,\n            // anchor will not be used if this is hydration, so only need to\n            // consider the comment placeholder case.\n            hydratedEl ? null : next(instance.subTree),\n            suspense,\n            isSVG,\n            optimized\n          )\n          if (placeholder) {\n            remove(placeholder)\n          }\n          updateHOCHostEl(instance, vnode.el)\n          if (__DEV__) {\n            popWarningContext()\n          }\n          // only decrease deps count if suspense is not already resolved\n          if (isInPendingSuspense && --suspense.deps === 0) {\n            suspense.resolve()\n          }\n        })\n    },\n\n    unmount(parentSuspense, doRemove) {\n      suspense.isUnmounted = true\n      if (suspense.activeBranch) {\n        unmount(\n          suspense.activeBranch,\n          parentComponent,\n          parentSuspense,\n          doRemove\n        )\n      }\n      if (suspense.pendingBranch) {\n        unmount(\n          suspense.pendingBranch,\n          parentComponent,\n          parentSuspense,\n          doRemove\n        )\n      }\n    }\n  }\n\n  return suspense\n}\n\nfunction hydrateSuspense(\n  node: Node,\n  vnode: VNode,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  isSVG: boolean,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n  rendererInternals: RendererInternals,\n  hydrateNode: (\n    node: Node,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized: boolean\n  ) => Node | null\n): Node | null {\n  /* eslint-disable no-restricted-globals */\n  const suspense = (vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    node.parentNode!,\n    document.createElement('div'),\n    null,\n    isSVG,\n    slotScopeIds,\n    optimized,\n    rendererInternals,\n    true /* hydrating */\n  ))\n  // there are two possible scenarios for server-rendered suspense:\n  // - success: ssr content should be fully resolved\n  // - failure: ssr content should be the fallback branch.\n  // however, on the client we don't really know if it has failed or not\n  // attempt to hydrate the DOM assuming it has succeeded, but we still\n  // need to construct a suspense boundary first\n  const result = hydrateNode(\n    node,\n    (suspense.pendingBranch = vnode.ssContent!),\n    parentComponent,\n    suspense,\n    slotScopeIds,\n    optimized\n  )\n  if (suspense.deps === 0) {\n    suspense.resolve(false, true)\n  }\n  return result\n  /* eslint-enable no-restricted-globals */\n}\n\nfunction normalizeSuspenseChildren(vnode: VNode) {\n  const { shapeFlag, children } = vnode\n  const isSlotChildren = shapeFlag & ShapeFlags.SLOTS_CHILDREN\n  vnode.ssContent = normalizeSuspenseSlot(\n    isSlotChildren ? (children as Slots).default : children\n  )\n  vnode.ssFallback = isSlotChildren\n    ? normalizeSuspenseSlot((children as Slots).fallback)\n    : createVNode(Comment)\n}\n\nfunction normalizeSuspenseSlot(s: any) {\n  let block: VNode[] | null | undefined\n  if (isFunction(s)) {\n    const trackBlock = isBlockTreeEnabled && s._c\n    if (trackBlock) {\n      // disableTracking: false\n      // allow block tracking for compiled slots\n      // (see ./componentRenderContext.ts)\n      s._d = false\n      openBlock()\n    }\n    s = s()\n    if (trackBlock) {\n      s._d = true\n      block = currentBlock\n      closeBlock()\n    }\n  }\n  if (isArray(s)) {\n    const singleChild = filterSingleRoot(s)\n    if (__DEV__ && !singleChild) {\n      warn(`<Suspense> slots expect a single root node.`)\n    }\n    s = singleChild\n  }\n  s = normalizeVNode(s)\n  if (block && !s.dynamicChildren) {\n    s.dynamicChildren = block.filter(c => c !== s)\n  }\n  return s\n}\n\nexport function queueEffectWithSuspense(\n  fn: Function | Function[],\n  suspense: SuspenseBoundary | null\n): void {\n  if (suspense && suspense.pendingBranch) {\n    if (isArray(fn)) {\n      suspense.effects.push(...fn)\n    } else {\n      suspense.effects.push(fn)\n    }\n  } else {\n    queuePostFlushCb(fn)\n  }\n}\n\nfunction setActiveBranch(suspense: SuspenseBoundary, branch: VNode) {\n  suspense.activeBranch = branch\n  const { vnode, parentComponent } = suspense\n  const el = (vnode.el = branch.el)\n  // in case suspense is the root node of a component,\n  // recursively update the HOC el\n  if (parentComponent && parentComponent.subTree === vnode) {\n    parentComponent.vnode.el = el\n    updateHOCHostEl(parentComponent, el)\n  }\n}\n\nfunction isVNodeSuspensible(vnode: VNode) {\n  return vnode.props?.suspensible != null && vnode.props.suspensible !== false\n}\n", "import { ComponentInternalInstance } from '../component'\nimport { SuspenseBoundary } from './Suspense'\nimport {\n  RendererInternals,\n  MoveType,\n  RendererElement,\n  RendererNode,\n  RendererOptions,\n  traverseStaticChildren\n} from '../renderer'\nimport { VNode, VNodeArrayChildren, VNodeProps } from '../vnode'\nimport { isString, ShapeFlags } from '@vue/shared'\nimport { warn } from '../warning'\nimport { isHmrUpdating } from '../hmr'\n\nexport type TeleportVNode = VNode<RendererNode, RendererElement, TeleportProps>\n\nexport interface TeleportProps {\n  to: string | RendererElement | null | undefined\n  disabled?: boolean\n}\n\nexport const isTeleport = (type: any): boolean => type.__isTeleport\n\nconst isTeleportDisabled = (props: VNode['props']): boolean =>\n  props && (props.disabled || props.disabled === '')\n\nconst isTargetSVG = (target: RendererElement): boolean =>\n  typeof SVGElement !== 'undefined' && target instanceof SVGElement\n\nconst resolveTarget = <T = RendererElement>(\n  props: TeleportProps | null,\n  select: RendererOptions['querySelector']\n): T | null => {\n  const targetSelector = props && props.to\n  if (isString(targetSelector)) {\n    if (!select) {\n      __DEV__ &&\n        warn(\n          `Current renderer does not support string target for Teleports. ` +\n            `(missing querySelector renderer option)`\n        )\n      return null\n    } else {\n      const target = select(targetSelector)\n      if (!target) {\n        __DEV__ &&\n          warn(\n            `Failed to locate Teleport target with selector \"${targetSelector}\". ` +\n              `Note the target element must exist before the component is mounted - ` +\n              `i.e. the target cannot be rendered by the component itself, and ` +\n              `ideally should be outside of the entire Vue component tree.`\n          )\n      }\n      return target as T\n    }\n  } else {\n    if (__DEV__ && !targetSelector && !isTeleportDisabled(props)) {\n      warn(`Invalid Teleport target: ${targetSelector}`)\n    }\n    return targetSelector as T\n  }\n}\n\nexport const TeleportImpl = {\n  __isTeleport: true,\n  process(\n    n1: TeleportVNode | null,\n    n2: TeleportVNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    isSVG: boolean,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n    internals: RendererInternals\n  ) {\n    const {\n      mc: mountChildren,\n      pc: patchChildren,\n      pbc: patchBlockChildren,\n      o: { insert, querySelector, createText, createComment }\n    } = internals\n\n    const disabled = isTeleportDisabled(n2.props)\n    let { shapeFlag, children, dynamicChildren } = n2\n\n    // #3302\n    // HMR updated, force full diff\n    if (__DEV__ && isHmrUpdating) {\n      optimized = false\n      dynamicChildren = null\n    }\n\n    if (n1 == null) {\n      // insert anchors in the main view\n      const placeholder = (n2.el = __DEV__\n        ? createComment('teleport start')\n        : createText(''))\n      const mainAnchor = (n2.anchor = __DEV__\n        ? createComment('teleport end')\n        : createText(''))\n      insert(placeholder, container, anchor)\n      insert(mainAnchor, container, anchor)\n      const target = (n2.target = resolveTarget(n2.props, querySelector))\n      const targetAnchor = (n2.targetAnchor = createText(''))\n      if (target) {\n        insert(targetAnchor, target)\n        // #2652 we could be teleporting from a non-SVG tree into an SVG tree\n        isSVG = isSVG || isTargetSVG(target)\n      } else if (__DEV__ && !disabled) {\n        warn('Invalid Teleport target on mount:', target, `(${typeof target})`)\n      }\n\n      const mount = (container: RendererElement, anchor: RendererNode) => {\n        // Teleport *always* has Array children. This is enforced in both the\n        // compiler and vnode children normalization.\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n          mountChildren(\n            children as VNodeArrayChildren,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          )\n        }\n      }\n\n      if (disabled) {\n        mount(container, mainAnchor)\n      } else if (target) {\n        mount(target, targetAnchor)\n      }\n    } else {\n      // update content\n      n2.el = n1.el\n      const mainAnchor = (n2.anchor = n1.anchor)!\n      const target = (n2.target = n1.target)!\n      const targetAnchor = (n2.targetAnchor = n1.targetAnchor)!\n      const wasDisabled = isTeleportDisabled(n1.props)\n      const currentContainer = wasDisabled ? container : target\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor\n      isSVG = isSVG || isTargetSVG(target)\n\n      if (dynamicChildren) {\n        // fast path when the teleport happens to be a block root\n        patchBlockChildren(\n          n1.dynamicChildren!,\n          dynamicChildren,\n          currentContainer,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds\n        )\n        // even in block tree mode we need to make sure all root-level nodes\n        // in the teleport inherit previous DOM references so that they can\n        // be moved in future patches.\n        traverseStaticChildren(n1, n2, true)\n      } else if (!optimized) {\n        patchChildren(\n          n1,\n          n2,\n          currentContainer,\n          currentAnchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          false\n        )\n      }\n\n      if (disabled) {\n        if (!wasDisabled) {\n          // enabled -> disabled\n          // move into main container\n          moveTeleport(\n            n2,\n            container,\n            mainAnchor,\n            internals,\n            TeleportMoveTypes.TOGGLE\n          )\n        } else {\n          // #7835\n          // When `teleport` is disabled, `to` may change, making it always old,\n          // to ensure the correct `to` when enabled\n          if (n2.props && n1.props && n2.props.to !== n1.props.to) {\n            n2.props.to = n1.props.to\n          }\n        }\n      } else {\n        // target changed\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\n          const nextTarget = (n2.target = resolveTarget(\n            n2.props,\n            querySelector\n          ))\n          if (nextTarget) {\n            moveTeleport(\n              n2,\n              nextTarget,\n              null,\n              internals,\n              TeleportMoveTypes.TARGET_CHANGE\n            )\n          } else if (__DEV__) {\n            warn(\n              'Invalid Teleport target on update:',\n              target,\n              `(${typeof target})`\n            )\n          }\n        } else if (wasDisabled) {\n          // disabled -> enabled\n          // move into teleport target\n          moveTeleport(\n            n2,\n            target,\n            targetAnchor,\n            internals,\n            TeleportMoveTypes.TOGGLE\n          )\n        }\n      }\n    }\n\n    updateCssVars(n2)\n  },\n\n  remove(\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    optimized: boolean,\n    { um: unmount, o: { remove: hostRemove } }: RendererInternals,\n    doRemove: Boolean\n  ) {\n    const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode\n\n    if (target) {\n      hostRemove(targetAnchor!)\n    }\n\n    // an unmounted teleport should always remove its children if not disabled\n    if (doRemove || !isTeleportDisabled(props)) {\n      hostRemove(anchor!)\n      if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n        for (let i = 0; i < (children as VNode[]).length; i++) {\n          const child = (children as VNode[])[i]\n          unmount(\n            child,\n            parentComponent,\n            parentSuspense,\n            true,\n            !!child.dynamicChildren\n          )\n        }\n      }\n    }\n  },\n\n  move: moveTeleport,\n  hydrate: hydrateTeleport\n}\n\nexport const enum TeleportMoveTypes {\n  TARGET_CHANGE,\n  TOGGLE, // enable / disable\n  REORDER // moved in the main view\n}\n\nfunction moveTeleport(\n  vnode: VNode,\n  container: RendererElement,\n  parentAnchor: RendererNode | null,\n  { o: { insert }, m: move }: RendererInternals,\n  moveType: TeleportMoveTypes = TeleportMoveTypes.REORDER\n) {\n  // move target anchor if this is a target change.\n  if (moveType === TeleportMoveTypes.TARGET_CHANGE) {\n    insert(vnode.targetAnchor!, container, parentAnchor)\n  }\n  const { el, anchor, shapeFlag, children, props } = vnode\n  const isReorder = moveType === TeleportMoveTypes.REORDER\n  // move main view anchor if this is a re-order.\n  if (isReorder) {\n    insert(el!, container, parentAnchor)\n  }\n  // if this is a re-order and teleport is enabled (content is in target)\n  // do not move children. So the opposite is: only move children if this\n  // is not a reorder, or the teleport is disabled\n  if (!isReorder || isTeleportDisabled(props)) {\n    // Teleport has either Array children or no children.\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n      for (let i = 0; i < (children as VNode[]).length; i++) {\n        move(\n          (children as VNode[])[i],\n          container,\n          parentAnchor,\n          MoveType.REORDER\n        )\n      }\n    }\n  }\n  // move main view anchor if this is a re-order.\n  if (isReorder) {\n    insert(anchor!, container, parentAnchor)\n  }\n}\n\ninterface TeleportTargetElement extends Element {\n  // last teleport target\n  _lpa?: Node | null\n}\n\nfunction hydrateTeleport(\n  node: Node,\n  vnode: TeleportVNode,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n  {\n    o: { nextSibling, parentNode, querySelector }\n  }: RendererInternals<Node, Element>,\n  hydrateChildren: (\n    node: Node | null,\n    vnode: VNode,\n    container: Element,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized: boolean\n  ) => Node | null\n): Node | null {\n  const target = (vnode.target = resolveTarget<Element>(\n    vnode.props,\n    querySelector\n  ))\n  if (target) {\n    // if multiple teleports rendered to the same target element, we need to\n    // pick up from where the last teleport finished instead of the first node\n    const targetNode =\n      (target as TeleportTargetElement)._lpa || target.firstChild\n    if (vnode.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n      if (isTeleportDisabled(vnode.props)) {\n        vnode.anchor = hydrateChildren(\n          nextSibling(node),\n          vnode,\n          parentNode(node)!,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        )\n        vnode.targetAnchor = targetNode\n      } else {\n        vnode.anchor = nextSibling(node)\n\n        // lookahead until we find the target anchor\n        // we cannot rely on return value of hydrateChildren() because there\n        // could be nested teleports\n        let targetAnchor = targetNode\n        while (targetAnchor) {\n          targetAnchor = nextSibling(targetAnchor)\n          if (\n            targetAnchor &&\n            targetAnchor.nodeType === 8 &&\n            (targetAnchor as Comment).data === 'teleport anchor'\n          ) {\n            vnode.targetAnchor = targetAnchor\n            ;(target as TeleportTargetElement)._lpa =\n              vnode.targetAnchor && nextSibling(vnode.targetAnchor as Node)\n            break\n          }\n        }\n\n        hydrateChildren(\n          targetNode,\n          vnode,\n          target,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        )\n      }\n    }\n    updateCssVars(vnode)\n  }\n  return vnode.anchor && nextSibling(vnode.anchor as Node)\n}\n\n// Force-casted public typing for h and TSX props inference\nexport const Teleport = TeleportImpl as unknown as {\n  __isTeleport: true\n  new (): {\n    $props: VNodeProps & TeleportProps\n    $slots: {\n      default(): VNode[]\n    }\n  }\n}\n\nfunction updateCssVars(vnode: VNode) {\n  // presence of .ut method indicates owner component uses css vars.\n  // code path here can assume browser environment.\n  const ctx = vnode.ctx\n  if (ctx && ctx.ut) {\n    let node = (vnode.children as VNode[])[0].el!\n    while (node !== vnode.targetAnchor) {\n      if (node.nodeType === 1) node.setAttribute('data-v-owner', ctx.uid)\n      node = node.nextSibling\n    }\n    ctx.ut()\n  }\n}\n", "import {\n  isArray,\n  isFunction,\n  isString,\n  isObject,\n  EMPTY_ARR,\n  extend,\n  normalizeClass,\n  normalizeStyle,\n  PatchFlags,\n  ShapeFlags,\n  SlotFlags,\n  isOn\n} from '@vue/shared'\nimport {\n  ComponentInternalInstance,\n  Data,\n  ConcreteComponent,\n  ClassComponent,\n  Component,\n  isClassComponent\n} from './component'\nimport { RawSlots } from './componentSlots'\nimport { isProxy, Ref, toRaw, ReactiveFlags, isRef } from '@vue/reactivity'\nimport { AppContext } from './apiCreateApp'\nimport {\n  Suspense,\n  SuspenseImpl,\n  isSuspense,\n  SuspenseBoundary\n} from './components/Suspense'\nimport { DirectiveBinding } from './directives'\nimport { TransitionHooks } from './components/BaseTransition'\nimport { warn } from './warning'\nimport { Teleport, TeleportImpl, isTeleport } from './components/Teleport'\nimport {\n  currentRenderingInstance,\n  currentScopeId\n} from './componentRenderContext'\nimport { RendererNode, RendererElement } from './renderer'\nimport { NULL_DYNAMIC_COMPONENT } from './helpers/resolveAssets'\nimport { hmrDirtyComponents } from './hmr'\nimport { convertLegacyComponent } from './compat/component'\nimport { convertLegacyVModelProps } from './compat/componentVModel'\nimport { defineLegacyVNodeProperties } from './compat/renderFn'\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\nimport { ComponentPublicInstance } from './componentPublicInstance'\n\nexport const Fragment = Symbol.for('v-fgt') as any as {\n  __isFragment: true\n  new (): {\n    $props: VNodeProps\n  }\n}\nexport const Text = Symbol.for('v-txt')\nexport const Comment = Symbol.for('v-cmt')\nexport const Static = Symbol.for('v-stc')\n\nexport type VNodeTypes =\n  | string\n  | VNode\n  | Component\n  | typeof Text\n  | typeof Static\n  | typeof Comment\n  | typeof Fragment\n  | typeof Teleport\n  | typeof TeleportImpl\n  | typeof Suspense\n  | typeof SuspenseImpl\n\nexport type VNodeRef =\n  | string\n  | Ref\n  | ((\n      ref: Element | ComponentPublicInstance | null,\n      refs: Record<string, any>\n    ) => void)\n\nexport type VNodeNormalizedRefAtom = {\n  i: ComponentInternalInstance\n  r: VNodeRef\n  k?: string // setup ref key\n  f?: boolean // refInFor marker\n}\n\nexport type VNodeNormalizedRef =\n  | VNodeNormalizedRefAtom\n  | VNodeNormalizedRefAtom[]\n\ntype VNodeMountHook = (vnode: VNode) => void\ntype VNodeUpdateHook = (vnode: VNode, oldVNode: VNode) => void\nexport type VNodeHook =\n  | VNodeMountHook\n  | VNodeUpdateHook\n  | VNodeMountHook[]\n  | VNodeUpdateHook[]\n\n// https://github.com/microsoft/TypeScript/issues/33099\nexport type VNodeProps = {\n  key?: string | number | symbol\n  ref?: VNodeRef\n  ref_for?: boolean\n  ref_key?: string\n\n  // vnode hooks\n  onVnodeBeforeMount?: VNodeMountHook | VNodeMountHook[]\n  onVnodeMounted?: VNodeMountHook | VNodeMountHook[]\n  onVnodeBeforeUpdate?: VNodeUpdateHook | VNodeUpdateHook[]\n  onVnodeUpdated?: VNodeUpdateHook | VNodeUpdateHook[]\n  onVnodeBeforeUnmount?: VNodeMountHook | VNodeMountHook[]\n  onVnodeUnmounted?: VNodeMountHook | VNodeMountHook[]\n}\n\ntype VNodeChildAtom =\n  | VNode\n  | string\n  | number\n  | boolean\n  | null\n  | undefined\n  | void\n\nexport type VNodeArrayChildren = Array<VNodeArrayChildren | VNodeChildAtom>\n\nexport type VNodeChild = VNodeChildAtom | VNodeArrayChildren\n\nexport type VNodeNormalizedChildren =\n  | string\n  | VNodeArrayChildren\n  | RawSlots\n  | null\n\nexport interface VNode<\n  HostNode = RendererNode,\n  HostElement = RendererElement,\n  ExtraProps = { [key: string]: any }\n> {\n  /**\n   * @internal\n   */\n  __v_isVNode: true\n\n  /**\n   * @internal\n   */\n  [ReactiveFlags.SKIP]: true\n\n  type: VNodeTypes\n  props: (VNodeProps & ExtraProps) | null\n  key: string | number | symbol | null\n  ref: VNodeNormalizedRef | null\n  /**\n   * SFC only. This is assigned on vnode creation using currentScopeId\n   * which is set alongside currentRenderingInstance.\n   */\n  scopeId: string | null\n  /**\n   * SFC only. This is assigned to:\n   * - Slot fragment vnodes with :slotted SFC styles.\n   * - Component vnodes (during patch/hydration) so that its root node can\n   *   inherit the component's slotScopeIds\n   * @internal\n   */\n  slotScopeIds: string[] | null\n  children: VNodeNormalizedChildren\n  component: ComponentInternalInstance | null\n  dirs: DirectiveBinding[] | null\n  transition: TransitionHooks<HostElement> | null\n\n  // DOM\n  el: HostNode | null\n  anchor: HostNode | null // fragment anchor\n  target: HostElement | null // teleport target\n  targetAnchor: HostNode | null // teleport target anchor\n  /**\n   * number of elements contained in a static vnode\n   * @internal\n   */\n  staticCount: number\n\n  // suspense\n  suspense: SuspenseBoundary | null\n  /**\n   * @internal\n   */\n  ssContent: VNode | null\n  /**\n   * @internal\n   */\n  ssFallback: VNode | null\n\n  // optimization only\n  shapeFlag: number\n  patchFlag: number\n  /**\n   * @internal\n   */\n  dynamicProps: string[] | null\n  /**\n   * @internal\n   */\n  dynamicChildren: VNode[] | null\n\n  // application root node only\n  appContext: AppContext | null\n\n  /**\n   * @internal lexical scope owner instance\n   */\n  ctx: ComponentInternalInstance | null\n\n  /**\n   * @internal attached by v-memo\n   */\n  memo?: any[]\n  /**\n   * @internal __COMPAT__ only\n   */\n  isCompatRoot?: true\n  /**\n   * @internal custom element interception hook\n   */\n  ce?: (instance: ComponentInternalInstance) => void\n}\n\n// Since v-if and v-for are the two possible ways node structure can dynamically\n// change, once we consider v-if branches and each v-for fragment a block, we\n// can divide a template into nested blocks, and within each block the node\n// structure would be stable. This allows us to skip most children diffing\n// and only worry about the dynamic nodes (indicated by patch flags).\nexport const blockStack: (VNode[] | null)[] = []\nexport let currentBlock: VNode[] | null = null\n\n/**\n * Open a block.\n * This must be called before `createBlock`. It cannot be part of `createBlock`\n * because the children of the block are evaluated before `createBlock` itself\n * is called. The generated code typically looks like this:\n *\n * ```js\n * function render() {\n *   return (openBlock(),createBlock('div', null, [...]))\n * }\n * ```\n * disableTracking is true when creating a v-for fragment block, since a v-for\n * fragment always diffs its children.\n *\n * @private\n */\nexport function openBlock(disableTracking = false) {\n  blockStack.push((currentBlock = disableTracking ? null : []))\n}\n\nexport function closeBlock() {\n  blockStack.pop()\n  currentBlock = blockStack[blockStack.length - 1] || null\n}\n\n// Whether we should be tracking dynamic child nodes inside a block.\n// Only tracks when this value is > 0\n// We are not using a simple boolean because this value may need to be\n// incremented/decremented by nested usage of v-once (see below)\nexport let isBlockTreeEnabled = 1\n\n/**\n * Block tracking sometimes needs to be disabled, for example during the\n * creation of a tree that needs to be cached by v-once. The compiler generates\n * code like this:\n *\n * ``` js\n * _cache[1] || (\n *   setBlockTracking(-1),\n *   _cache[1] = createVNode(...),\n *   setBlockTracking(1),\n *   _cache[1]\n * )\n * ```\n *\n * @private\n */\nexport function setBlockTracking(value: number) {\n  isBlockTreeEnabled += value\n}\n\nfunction setupBlock(vnode: VNode) {\n  // save current block children on the block vnode\n  vnode.dynamicChildren =\n    isBlockTreeEnabled > 0 ? currentBlock || (EMPTY_ARR as any) : null\n  // close block\n  closeBlock()\n  // a block is always going to be patched, so track it as a child of its\n  // parent block\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(vnode)\n  }\n  return vnode\n}\n\n/**\n * @private\n */\nexport function createElementBlock(\n  type: string | typeof Fragment,\n  props?: Record<string, any> | null,\n  children?: any,\n  patchFlag?: number,\n  dynamicProps?: string[],\n  shapeFlag?: number\n) {\n  return setupBlock(\n    createBaseVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      shapeFlag,\n      true /* isBlock */\n    )\n  )\n}\n\n/**\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\n * A block root keeps track of dynamic nodes within the block in the\n * `dynamicChildren` array.\n *\n * @private\n */\nexport function createBlock(\n  type: VNodeTypes | ClassComponent,\n  props?: Record<string, any> | null,\n  children?: any,\n  patchFlag?: number,\n  dynamicProps?: string[]\n): VNode {\n  return setupBlock(\n    createVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      true /* isBlock: prevent a block from tracking itself */\n    )\n  )\n}\n\nexport function isVNode(value: any): value is VNode {\n  return value ? value.__v_isVNode === true : false\n}\n\nexport function isSameVNodeType(n1: VNode, n2: VNode): boolean {\n  if (\n    __DEV__ &&\n    n2.shapeFlag & ShapeFlags.COMPONENT &&\n    hmrDirtyComponents.has(n2.type as ConcreteComponent)\n  ) {\n    // #7042, ensure the vnode being unmounted during HMR\n    // bitwise operations to remove keep alive flags\n    n1.shapeFlag &= ~ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\n    n2.shapeFlag &= ~ShapeFlags.COMPONENT_KEPT_ALIVE\n    // HMR only: if the component has been hot-updated, force a reload.\n    return false\n  }\n  return n1.type === n2.type && n1.key === n2.key\n}\n\nlet vnodeArgsTransformer:\n  | ((\n      args: Parameters<typeof _createVNode>,\n      instance: ComponentInternalInstance | null\n    ) => Parameters<typeof _createVNode>)\n  | undefined\n\n/**\n * Internal API for registering an arguments transform for createVNode\n * used for creating stubs in the test-utils\n * It is *internal* but needs to be exposed for test-utils to pick up proper\n * typings\n */\nexport function transformVNodeArgs(transformer?: typeof vnodeArgsTransformer) {\n  vnodeArgsTransformer = transformer\n}\n\nconst createVNodeWithArgsTransform = (\n  ...args: Parameters<typeof _createVNode>\n): VNode => {\n  return _createVNode(\n    ...(vnodeArgsTransformer\n      ? vnodeArgsTransformer(args, currentRenderingInstance)\n      : args)\n  )\n}\n\nexport const InternalObjectKey = `__vInternal`\n\nconst normalizeKey = ({ key }: VNodeProps): VNode['key'] =>\n  key != null ? key : null\n\nconst normalizeRef = ({\n  ref,\n  ref_key,\n  ref_for\n}: VNodeProps): VNodeNormalizedRefAtom | null => {\n  if (typeof ref === 'number') {\n    ref = '' + ref\n  }\n  return (\n    ref != null\n      ? isString(ref) || isRef(ref) || isFunction(ref)\n        ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\n        : ref\n      : null\n  ) as any\n}\n\nfunction createBaseVNode(\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\n  props: (Data & VNodeProps) | null = null,\n  children: unknown = null,\n  patchFlag = 0,\n  dynamicProps: string[] | null = null,\n  shapeFlag = type === Fragment ? 0 : ShapeFlags.ELEMENT,\n  isBlockNode = false,\n  needFullChildrenNormalization = false\n) {\n  const vnode = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type,\n    props,\n    key: props && normalizeKey(props),\n    ref: props && normalizeRef(props),\n    scopeId: currentScopeId,\n    slotScopeIds: null,\n    children,\n    component: null,\n    suspense: null,\n    ssContent: null,\n    ssFallback: null,\n    dirs: null,\n    transition: null,\n    el: null,\n    anchor: null,\n    target: null,\n    targetAnchor: null,\n    staticCount: 0,\n    shapeFlag,\n    patchFlag,\n    dynamicProps,\n    dynamicChildren: null,\n    appContext: null,\n    ctx: currentRenderingInstance\n  } as VNode\n\n  if (needFullChildrenNormalization) {\n    normalizeChildren(vnode, children)\n    // normalize suspense children\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\n      ;(type as typeof SuspenseImpl).normalize(vnode)\n    }\n  } else if (children) {\n    // compiled element vnode - if children is passed, only possible types are\n    // string or Array.\n    vnode.shapeFlag |= isString(children)\n      ? ShapeFlags.TEXT_CHILDREN\n      : ShapeFlags.ARRAY_CHILDREN\n  }\n\n  // validate key\n  if (__DEV__ && vnode.key !== vnode.key) {\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type)\n  }\n\n  // track vnode for block tree\n  if (\n    isBlockTreeEnabled > 0 &&\n    // avoid a block node from tracking itself\n    !isBlockNode &&\n    // has current parent block\n    currentBlock &&\n    // presence of a patch flag indicates this node needs patching on updates.\n    // component nodes also should always be patched, because even if the\n    // component doesn't need to update, it needs to persist the instance on to\n    // the next vnode so that it can be properly unmounted later.\n    (vnode.patchFlag > 0 || shapeFlag & ShapeFlags.COMPONENT) &&\n    // the EVENTS flag is only for hydration and if it is the only flag, the\n    // vnode should not be considered dynamic due to handler caching.\n    vnode.patchFlag !== PatchFlags.HYDRATE_EVENTS\n  ) {\n    currentBlock.push(vnode)\n  }\n\n  if (__COMPAT__) {\n    convertLegacyVModelProps(vnode)\n    defineLegacyVNodeProperties(vnode)\n  }\n\n  return vnode\n}\n\nexport { createBaseVNode as createElementVNode }\n\nexport const createVNode = (\n  __DEV__ ? createVNodeWithArgsTransform : _createVNode\n) as typeof _createVNode\n\nfunction _createVNode(\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\n  props: (Data & VNodeProps) | null = null,\n  children: unknown = null,\n  patchFlag: number = 0,\n  dynamicProps: string[] | null = null,\n  isBlockNode = false\n): VNode {\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\n    if (__DEV__ && !type) {\n      warn(`Invalid vnode type when creating vnode: ${type}.`)\n    }\n    type = Comment\n  }\n\n  if (isVNode(type)) {\n    // createVNode receiving an existing vnode. This happens in cases like\n    // <component :is=\"vnode\"/>\n    // #2078 make sure to merge refs during the clone instead of overwriting it\n    const cloned = cloneVNode(type, props, true /* mergeRef: true */)\n    if (children) {\n      normalizeChildren(cloned, children)\n    }\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\n      if (cloned.shapeFlag & ShapeFlags.COMPONENT) {\n        currentBlock[currentBlock.indexOf(type)] = cloned\n      } else {\n        currentBlock.push(cloned)\n      }\n    }\n    cloned.patchFlag |= PatchFlags.BAIL\n    return cloned\n  }\n\n  // class component normalization.\n  if (isClassComponent(type)) {\n    type = type.__vccOpts\n  }\n\n  // 2.x async/functional component compat\n  if (__COMPAT__) {\n    type = convertLegacyComponent(type, currentRenderingInstance)\n  }\n\n  // class & style normalization.\n  if (props) {\n    // for reactive or proxy objects, we need to clone it to enable mutation.\n    props = guardReactiveProps(props)!\n    let { class: klass, style } = props\n    if (klass && !isString(klass)) {\n      props.class = normalizeClass(klass)\n    }\n    if (isObject(style)) {\n      // reactive state objects need to be cloned since they are likely to be\n      // mutated\n      if (isProxy(style) && !isArray(style)) {\n        style = extend({}, style)\n      }\n      props.style = normalizeStyle(style)\n    }\n  }\n\n  // encode the vnode type information into a bitmap\n  const shapeFlag = isString(type)\n    ? ShapeFlags.ELEMENT\n    : __FEATURE_SUSPENSE__ && isSuspense(type)\n    ? ShapeFlags.SUSPENSE\n    : isTeleport(type)\n    ? ShapeFlags.TELEPORT\n    : isObject(type)\n    ? ShapeFlags.STATEFUL_COMPONENT\n    : isFunction(type)\n    ? ShapeFlags.FUNCTIONAL_COMPONENT\n    : 0\n\n  if (__DEV__ && shapeFlag & ShapeFlags.STATEFUL_COMPONENT && isProxy(type)) {\n    type = toRaw(type)\n    warn(\n      `Vue received a Component which was made a reactive object. This can ` +\n        `lead to unnecessary performance overhead, and should be avoided by ` +\n        `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\n        `instead of \\`ref\\`.`,\n      `\\nComponent that was made reactive: `,\n      type\n    )\n  }\n\n  return createBaseVNode(\n    type,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    shapeFlag,\n    isBlockNode,\n    true\n  )\n}\n\nexport function guardReactiveProps(props: (Data & VNodeProps) | null) {\n  if (!props) return null\n  return isProxy(props) || InternalObjectKey in props\n    ? extend({}, props)\n    : props\n}\n\nexport function cloneVNode<T, U>(\n  vnode: VNode<T, U>,\n  extraProps?: (Data & VNodeProps) | null,\n  mergeRef = false\n): VNode<T, U> {\n  // This is intentionally NOT using spread or extend to avoid the runtime\n  // key enumeration cost.\n  const { props, ref, patchFlag, children } = vnode\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props\n  const cloned: VNode<T, U> = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type: vnode.type,\n    props: mergedProps,\n    key: mergedProps && normalizeKey(mergedProps),\n    ref:\n      extraProps && extraProps.ref\n        ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n          // if the vnode itself already has a ref, cloneVNode will need to merge\n          // the refs so the single vnode can be set on multiple refs\n          mergeRef && ref\n          ? isArray(ref)\n            ? ref.concat(normalizeRef(extraProps)!)\n            : [ref, normalizeRef(extraProps)!]\n          : normalizeRef(extraProps)\n        : ref,\n    scopeId: vnode.scopeId,\n    slotScopeIds: vnode.slotScopeIds,\n    children:\n      __DEV__ && patchFlag === PatchFlags.HOISTED && isArray(children)\n        ? (children as VNode[]).map(deepCloneVNode)\n        : children,\n    target: vnode.target,\n    targetAnchor: vnode.targetAnchor,\n    staticCount: vnode.staticCount,\n    shapeFlag: vnode.shapeFlag,\n    // if the vnode is cloned with extra props, we can no longer assume its\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n    // note: preserve flag for fragments since they use the flag for children\n    // fast paths only.\n    patchFlag:\n      extraProps && vnode.type !== Fragment\n        ? patchFlag === -1 // hoisted node\n          ? PatchFlags.FULL_PROPS\n          : patchFlag | PatchFlags.FULL_PROPS\n        : patchFlag,\n    dynamicProps: vnode.dynamicProps,\n    dynamicChildren: vnode.dynamicChildren,\n    appContext: vnode.appContext,\n    dirs: vnode.dirs,\n    transition: vnode.transition,\n\n    // These should technically only be non-null on mounted VNodes. However,\n    // they *should* be copied for kept-alive vnodes. So we just always copy\n    // them since them being non-null during a mount doesn't affect the logic as\n    // they will simply be overwritten.\n    component: vnode.component,\n    suspense: vnode.suspense,\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n    el: vnode.el,\n    anchor: vnode.anchor,\n    ctx: vnode.ctx,\n    ce: vnode.ce\n  }\n  if (__COMPAT__) {\n    defineLegacyVNodeProperties(cloned as VNode)\n  }\n  return cloned\n}\n\n/**\n * Dev only, for HMR of hoisted vnodes reused in v-for\n * https://github.com/vitejs/vite/issues/2022\n */\nfunction deepCloneVNode(vnode: VNode): VNode {\n  const cloned = cloneVNode(vnode)\n  if (isArray(vnode.children)) {\n    cloned.children = (vnode.children as VNode[]).map(deepCloneVNode)\n  }\n  return cloned\n}\n\n/**\n * @private\n */\nexport function createTextVNode(text: string = ' ', flag: number = 0): VNode {\n  return createVNode(Text, null, text, flag)\n}\n\n/**\n * @private\n */\nexport function createStaticVNode(\n  content: string,\n  numberOfNodes: number\n): VNode {\n  // A static vnode can contain multiple stringified elements, and the number\n  // of elements is necessary for hydration.\n  const vnode = createVNode(Static, null, content)\n  vnode.staticCount = numberOfNodes\n  return vnode\n}\n\n/**\n * @private\n */\nexport function createCommentVNode(\n  text: string = '',\n  // when used as the v-else branch, the comment node must be created as a\n  // block to ensure correct updates.\n  asBlock: boolean = false\n): VNode {\n  return asBlock\n    ? (openBlock(), createBlock(Comment, null, text))\n    : createVNode(Comment, null, text)\n}\n\nexport function normalizeVNode(child: VNodeChild): VNode {\n  if (child == null || typeof child === 'boolean') {\n    // empty placeholder\n    return createVNode(Comment)\n  } else if (isArray(child)) {\n    // fragment\n    return createVNode(\n      Fragment,\n      null,\n      // #3666, avoid reference pollution when reusing vnode\n      child.slice()\n    )\n  } else if (typeof child === 'object') {\n    // already vnode, this should be the most common since compiled templates\n    // always produce all-vnode children arrays\n    return cloneIfMounted(child)\n  } else {\n    // strings and numbers\n    return createVNode(Text, null, String(child))\n  }\n}\n\n// optimized normalization for template-compiled render fns\nexport function cloneIfMounted(child: VNode): VNode {\n  return (child.el === null && child.patchFlag !== PatchFlags.HOISTED) ||\n    child.memo\n    ? child\n    : cloneVNode(child)\n}\n\nexport function normalizeChildren(vnode: VNode, children: unknown) {\n  let type = 0\n  const { shapeFlag } = vnode\n  if (children == null) {\n    children = null\n  } else if (isArray(children)) {\n    type = ShapeFlags.ARRAY_CHILDREN\n  } else if (typeof children === 'object') {\n    if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.TELEPORT)) {\n      // Normalize slot to plain children for plain element and Teleport\n      const slot = (children as any).default\n      if (slot) {\n        // _c marker is added by withCtx() indicating this is a compiled slot\n        slot._c && (slot._d = false)\n        normalizeChildren(vnode, slot())\n        slot._c && (slot._d = true)\n      }\n      return\n    } else {\n      type = ShapeFlags.SLOTS_CHILDREN\n      const slotFlag = (children as RawSlots)._\n      if (!slotFlag && !(InternalObjectKey in children!)) {\n        // if slots are not normalized, attach context instance\n        // (compiled / normalized slots already have context)\n        ;(children as RawSlots)._ctx = currentRenderingInstance\n      } else if (slotFlag === SlotFlags.FORWARDED && currentRenderingInstance) {\n        // a child component receives forwarded slots from the parent.\n        // its slot type is determined by its parent's slot type.\n        if (\n          (currentRenderingInstance.slots as RawSlots)._ === SlotFlags.STABLE\n        ) {\n          ;(children as RawSlots)._ = SlotFlags.STABLE\n        } else {\n          ;(children as RawSlots)._ = SlotFlags.DYNAMIC\n          vnode.patchFlag |= PatchFlags.DYNAMIC_SLOTS\n        }\n      }\n    }\n  } else if (isFunction(children)) {\n    children = { default: children, _ctx: currentRenderingInstance }\n    type = ShapeFlags.SLOTS_CHILDREN\n  } else {\n    children = String(children)\n    // force teleport children to array so it can be moved around\n    if (shapeFlag & ShapeFlags.TELEPORT) {\n      type = ShapeFlags.ARRAY_CHILDREN\n      children = [createTextVNode(children as string)]\n    } else {\n      type = ShapeFlags.TEXT_CHILDREN\n    }\n  }\n  vnode.children = children as VNodeNormalizedChildren\n  vnode.shapeFlag |= type\n}\n\nexport function mergeProps(...args: (Data & VNodeProps)[]) {\n  const ret: Data = {}\n  for (let i = 0; i < args.length; i++) {\n    const toMerge = args[i]\n    for (const key in toMerge) {\n      if (key === 'class') {\n        if (ret.class !== toMerge.class) {\n          ret.class = normalizeClass([ret.class, toMerge.class])\n        }\n      } else if (key === 'style') {\n        ret.style = normalizeStyle([ret.style, toMerge.style])\n      } else if (isOn(key)) {\n        const existing = ret[key]\n        const incoming = toMerge[key]\n        if (\n          incoming &&\n          existing !== incoming &&\n          !(isArray(existing) && existing.includes(incoming))\n        ) {\n          ret[key] = existing\n            ? [].concat(existing as any, incoming as any)\n            : incoming\n        }\n      } else if (key !== '') {\n        ret[key] = toMerge[key]\n      }\n    }\n  }\n  return ret\n}\n\nexport function invokeVNodeHook(\n  hook: VNodeHook,\n  instance: ComponentInternalInstance | null,\n  vnode: VNode,\n  prevVNode: VNode | null = null\n) {\n  callWithAsyncErrorHandling(hook, instance, ErrorCodes.VNODE_HOOK, [\n    vnode,\n    prevVNode\n  ])\n}\n", "import { VNode, VNodeChild, isVNode } from './vnode'\nimport {\n  isRef,\n  pauseTracking,\n  resetTracking,\n  shallowReadonly,\n  proxyRefs,\n  EffectScope,\n  markRaw,\n  track,\n  TrackOpTypes,\n  ReactiveEffect\n} from '@vue/reactivity'\nimport {\n  ComponentPublicInstance,\n  PublicInstanceProxyHandlers,\n  createDevRenderContext,\n  exposePropsOnRenderContext,\n  exposeSetupStateOnRenderContext,\n  ComponentPublicInstanceConstructor,\n  publicPropertiesMap,\n  RuntimeCompiledPublicInstanceProxyHandlers\n} from './componentPublicInstance'\nimport {\n  ComponentPropsOptions,\n  NormalizedPropsOptions,\n  initProps,\n  normalizePropsOptions\n} from './componentProps'\nimport {\n  initSlots,\n  InternalSlots,\n  Slots,\n  SlotsType,\n  UnwrapSlotsType\n} from './componentSlots'\nimport { warn } from './warning'\nimport { ErrorCodes, callWithErrorHandling, handleError } from './errorHandling'\nimport { AppContext, createAppContext, AppConfig } from './apiCreateApp'\nimport { Directive, validateDirectiveName } from './directives'\nimport {\n  applyOptions,\n  ComponentOptions,\n  ComputedOptions,\n  MethodOptions,\n  resolveMergedOptions\n} from './componentOptions'\nimport {\n  EmitsOptions,\n  ObjectEmitsOptions,\n  EmitFn,\n  emit,\n  normalizeEmitsOptions\n} from './componentEmits'\nimport {\n  EMPTY_OBJ,\n  isArray,\n  isFunction,\n  NOOP,\n  isObject,\n  NO,\n  makeMap,\n  isPromise,\n  ShapeFlags,\n  extend,\n  getGlobalThis,\n  IfAny\n} from '@vue/shared'\nimport { SuspenseBoundary } from './components/Suspense'\nimport { CompilerOptions } from '@vue/compiler-core'\nimport { markAttrsAccessed } from './componentRenderUtils'\nimport { currentRenderingInstance } from './componentRenderContext'\nimport { startMeasure, endMeasure } from './profiling'\nimport { convertLegacyRenderFn } from './compat/renderFn'\nimport {\n  CompatConfig,\n  globalCompatConfig,\n  validateCompatConfig\n} from './compat/compatConfig'\nimport { SchedulerJob } from './scheduler'\nimport { LifecycleHooks } from './enums'\n\nexport type Data = Record<string, unknown>\n\n/**\n * For extending allowed non-declared props on components in TSX\n */\nexport interface ComponentCustomProps {}\n\n/**\n * Default allowed non-declared props on component in TSX\n */\nexport interface AllowedComponentProps {\n  class?: unknown\n  style?: unknown\n}\n\n// Note: can't mark this whole interface internal because some public interfaces\n// extend it.\nexport interface ComponentInternalOptions {\n  /**\n   * @internal\n   */\n  __scopeId?: string\n  /**\n   * @internal\n   */\n  __cssModules?: Data\n  /**\n   * @internal\n   */\n  __hmrId?: string\n  /**\n   * Compat build only, for bailing out of certain compatibility behavior\n   */\n  __isBuiltIn?: boolean\n  /**\n   * This one should be exposed so that devtools can make use of it\n   */\n  __file?: string\n  /**\n   * name inferred from filename\n   */\n  __name?: string\n}\n\nexport interface FunctionalComponent<\n  P = {},\n  E extends EmitsOptions = {},\n  S extends Record<string, any> = any\n> extends ComponentInternalOptions {\n  // use of any here is intentional so it can be a valid JSX Element constructor\n  (\n    props: P,\n    ctx: Omit<SetupContext<E, IfAny<S, {}, SlotsType<S>>>, 'expose'>\n  ): any\n  props?: ComponentPropsOptions<P>\n  emits?: E | (keyof E)[]\n  slots?: IfAny<S, Slots, SlotsType<S>>\n  inheritAttrs?: boolean\n  displayName?: string\n  compatConfig?: CompatConfig\n}\n\nexport interface ClassComponent {\n  new (...args: any[]): ComponentPublicInstance<any, any, any, any, any>\n  __vccOpts: ComponentOptions\n}\n\n/**\n * Concrete component type matches its actual value: it's either an options\n * object, or a function. Use this where the code expects to work with actual\n * values, e.g. checking if its a function or not. This is mostly for internal\n * implementation code.\n */\nexport type ConcreteComponent<\n  Props = {},\n  RawBindings = any,\n  D = any,\n  C extends ComputedOptions = ComputedOptions,\n  M extends MethodOptions = MethodOptions\n> =\n  | ComponentOptions<Props, RawBindings, D, C, M>\n  | FunctionalComponent<Props, any>\n\n/**\n * A type used in public APIs where a component type is expected.\n * The constructor type is an artificial type returned by defineComponent().\n */\nexport type Component<\n  Props = any,\n  RawBindings = any,\n  D = any,\n  C extends ComputedOptions = ComputedOptions,\n  M extends MethodOptions = MethodOptions\n> =\n  | ConcreteComponent<Props, RawBindings, D, C, M>\n  | ComponentPublicInstanceConstructor<Props>\n\nexport type { ComponentOptions }\n\ntype LifecycleHook<TFn = Function> = TFn[] | null\n\n// use `E extends any` to force evaluating type to fix #2362\nexport type SetupContext<\n  E = EmitsOptions,\n  S extends SlotsType = {}\n> = E extends any\n  ? {\n      attrs: Data\n      slots: UnwrapSlotsType<S>\n      emit: EmitFn<E>\n      expose: (exposed?: Record<string, any>) => void\n    }\n  : never\n\n/**\n * @internal\n */\nexport type InternalRenderFunction = {\n  (\n    ctx: ComponentPublicInstance,\n    cache: ComponentInternalInstance['renderCache'],\n    // for compiler-optimized bindings\n    $props: ComponentInternalInstance['props'],\n    $setup: ComponentInternalInstance['setupState'],\n    $data: ComponentInternalInstance['data'],\n    $options: ComponentInternalInstance['ctx']\n  ): VNodeChild\n  _rc?: boolean // isRuntimeCompiled\n\n  // __COMPAT__ only\n  _compatChecked?: boolean // v3 and already checked for v2 compat\n  _compatWrapped?: boolean // is wrapped for v2 compat\n}\n\n/**\n * We expose a subset of properties on the internal instance as they are\n * useful for advanced external libraries and tools.\n */\nexport interface ComponentInternalInstance {\n  uid: number\n  type: ConcreteComponent\n  parent: ComponentInternalInstance | null\n  root: ComponentInternalInstance\n  appContext: AppContext\n  /**\n   * Vnode representing this component in its parent's vdom tree\n   */\n  vnode: VNode\n  /**\n   * The pending new vnode from parent updates\n   * @internal\n   */\n  next: VNode | null\n  /**\n   * Root vnode of this component's own vdom tree\n   */\n  subTree: VNode\n  /**\n   * Render effect instance\n   */\n  effect: ReactiveEffect\n  /**\n   * Bound effect runner to be passed to schedulers\n   */\n  update: SchedulerJob\n  /**\n   * The render function that returns vdom tree.\n   * @internal\n   */\n  render: InternalRenderFunction | null\n  /**\n   * SSR render function\n   * @internal\n   */\n  ssrRender?: Function | null\n  /**\n   * Object containing values this component provides for its descendants\n   * @internal\n   */\n  provides: Data\n  /**\n   * Tracking reactive effects (e.g. watchers) associated with this component\n   * so that they can be automatically stopped on component unmount\n   * @internal\n   */\n  scope: EffectScope\n  /**\n   * cache for proxy access type to avoid hasOwnProperty calls\n   * @internal\n   */\n  accessCache: Data | null\n  /**\n   * cache for render function values that rely on _ctx but won't need updates\n   * after initialized (e.g. inline handlers)\n   * @internal\n   */\n  renderCache: (Function | VNode)[]\n\n  /**\n   * Resolved component registry, only for components with mixins or extends\n   * @internal\n   */\n  components: Record<string, ConcreteComponent> | null\n  /**\n   * Resolved directive registry, only for components with mixins or extends\n   * @internal\n   */\n  directives: Record<string, Directive> | null\n  /**\n   * Resolved filters registry, v2 compat only\n   * @internal\n   */\n  filters?: Record<string, Function>\n  /**\n   * resolved props options\n   * @internal\n   */\n  propsOptions: NormalizedPropsOptions\n  /**\n   * resolved emits options\n   * @internal\n   */\n  emitsOptions: ObjectEmitsOptions | null\n  /**\n   * resolved inheritAttrs options\n   * @internal\n   */\n  inheritAttrs?: boolean\n  /**\n   * is custom element?\n   * @internal\n   */\n  isCE?: boolean\n  /**\n   * custom element specific HMR method\n   * @internal\n   */\n  ceReload?: (newStyles?: string[]) => void\n\n  // the rest are only for stateful components ---------------------------------\n\n  // main proxy that serves as the public instance (`this`)\n  proxy: ComponentPublicInstance | null\n\n  // exposed properties via expose()\n  exposed: Record<string, any> | null\n  exposeProxy: Record<string, any> | null\n\n  /**\n   * alternative proxy used only for runtime-compiled render functions using\n   * `with` block\n   * @internal\n   */\n  withProxy: ComponentPublicInstance | null\n  /**\n   * This is the target for the public instance proxy. It also holds properties\n   * injected by user options (computed, methods etc.) and user-attached\n   * custom properties (via `this.x = ...`)\n   * @internal\n   */\n  ctx: Data\n\n  // state\n  data: Data\n  props: Data\n  attrs: Data\n  slots: InternalSlots\n  refs: Data\n  emit: EmitFn\n\n  attrsProxy: Data | null\n  slotsProxy: Slots | null\n\n  /**\n   * used for keeping track of .once event handlers on components\n   * @internal\n   */\n  emitted: Record<string, boolean> | null\n  /**\n   * used for caching the value returned from props default factory functions to\n   * avoid unnecessary watcher trigger\n   * @internal\n   */\n  propsDefaults: Data\n  /**\n   * setup related\n   * @internal\n   */\n  setupState: Data\n  /**\n   * devtools access to additional info\n   * @internal\n   */\n  devtoolsRawSetupState?: any\n  /**\n   * @internal\n   */\n  setupContext: SetupContext | null\n\n  /**\n   * suspense related\n   * @internal\n   */\n  suspense: SuspenseBoundary | null\n  /**\n   * suspense pending batch id\n   * @internal\n   */\n  suspenseId: number\n  /**\n   * @internal\n   */\n  asyncDep: Promise<any> | null\n  /**\n   * @internal\n   */\n  asyncResolved: boolean\n\n  // lifecycle\n  isMounted: boolean\n  isUnmounted: boolean\n  isDeactivated: boolean\n  /**\n   * @internal\n   */\n  [LifecycleHooks.BEFORE_CREATE]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.CREATED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.BEFORE_MOUNT]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.MOUNTED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.BEFORE_UPDATE]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.UPDATED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.BEFORE_UNMOUNT]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.UNMOUNTED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.RENDER_TRACKED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.RENDER_TRIGGERED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.ACTIVATED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.DEACTIVATED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.ERROR_CAPTURED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.SERVER_PREFETCH]: LifecycleHook<() => Promise<unknown>>\n\n  /**\n   * For caching bound $forceUpdate on public proxy access\n   * @internal\n   */\n  f?: () => void\n  /**\n   * For caching bound $nextTick on public proxy access\n   * @internal\n   */\n  n?: () => Promise<void>\n  /**\n   * `updateTeleportCssVars`\n   * For updating css vars on contained teleports\n   * @internal\n   */\n  ut?: (vars?: Record<string, string>) => void\n}\n\nconst emptyAppContext = createAppContext()\n\nlet uid = 0\n\nexport function createComponentInstance(\n  vnode: VNode,\n  parent: ComponentInternalInstance | null,\n  suspense: SuspenseBoundary | null\n) {\n  const type = vnode.type as ConcreteComponent\n  // inherit parent app context - or - if root, adopt from root vnode\n  const appContext =\n    (parent ? parent.appContext : vnode.appContext) || emptyAppContext\n\n  const instance: ComponentInternalInstance = {\n    uid: uid++,\n    vnode,\n    type,\n    parent,\n    appContext,\n    root: null!, // to be immediately set\n    next: null,\n    subTree: null!, // will be set synchronously right after creation\n    effect: null!,\n    update: null!, // will be set synchronously right after creation\n    scope: new EffectScope(true /* detached */),\n    render: null,\n    proxy: null,\n    exposed: null,\n    exposeProxy: null,\n    withProxy: null,\n    provides: parent ? parent.provides : Object.create(appContext.provides),\n    accessCache: null!,\n    renderCache: [],\n\n    // local resolved assets\n    components: null,\n    directives: null,\n\n    // resolved props and emits options\n    propsOptions: normalizePropsOptions(type, appContext),\n    emitsOptions: normalizeEmitsOptions(type, appContext),\n\n    // emit\n    emit: null!, // to be set immediately\n    emitted: null,\n\n    // props default value\n    propsDefaults: EMPTY_OBJ,\n\n    // inheritAttrs\n    inheritAttrs: type.inheritAttrs,\n\n    // state\n    ctx: EMPTY_OBJ,\n    data: EMPTY_OBJ,\n    props: EMPTY_OBJ,\n    attrs: EMPTY_OBJ,\n    slots: EMPTY_OBJ,\n    refs: EMPTY_OBJ,\n    setupState: EMPTY_OBJ,\n    setupContext: null,\n\n    attrsProxy: null,\n    slotsProxy: null,\n\n    // suspense related\n    suspense,\n    suspenseId: suspense ? suspense.pendingId : 0,\n    asyncDep: null,\n    asyncResolved: false,\n\n    // lifecycle hooks\n    // not using enums here because it results in computed properties\n    isMounted: false,\n    isUnmounted: false,\n    isDeactivated: false,\n    bc: null,\n    c: null,\n    bm: null,\n    m: null,\n    bu: null,\n    u: null,\n    um: null,\n    bum: null,\n    da: null,\n    a: null,\n    rtg: null,\n    rtc: null,\n    ec: null,\n    sp: null\n  }\n  if (__DEV__) {\n    instance.ctx = createDevRenderContext(instance)\n  } else {\n    instance.ctx = { _: instance }\n  }\n  instance.root = parent ? parent.root : instance\n  instance.emit = emit.bind(null, instance)\n\n  // apply custom element special handling\n  if (vnode.ce) {\n    vnode.ce(instance)\n  }\n\n  return instance\n}\n\nexport let currentInstance: ComponentInternalInstance | null = null\n\nexport const getCurrentInstance: () => ComponentInternalInstance | null = () =>\n  currentInstance || currentRenderingInstance\n\ntype GlobalInstanceSetter = ((\n  instance: ComponentInternalInstance | null\n) => void) & { version?: string }\n\nlet internalSetCurrentInstance: GlobalInstanceSetter\nlet globalCurrentInstanceSetters: GlobalInstanceSetter[]\nlet settersKey = '__VUE_INSTANCE_SETTERS__'\n\n/**\n * The following makes getCurrentInstance() usage across multiple copies of Vue\n * work. Some cases of how this can happen are summarized in #7590. In principle\n * the duplication should be avoided, but in practice there are often cases\n * where the user is unable to resolve on their own, especially in complicated\n * SSR setups.\n *\n * Note this fix is technically incomplete, as we still rely on other singletons\n * for effectScope and global reactive dependency maps. However, it does make\n * some of the most common cases work. It also warns if the duplication is\n * found during browser execution.\n */\nif (__SSR__) {\n  if (!(globalCurrentInstanceSetters = getGlobalThis()[settersKey])) {\n    globalCurrentInstanceSetters = getGlobalThis()[settersKey] = []\n  }\n  globalCurrentInstanceSetters.push(i => (currentInstance = i))\n  internalSetCurrentInstance = instance => {\n    if (globalCurrentInstanceSetters.length > 1) {\n      globalCurrentInstanceSetters.forEach(s => s(instance))\n    } else {\n      globalCurrentInstanceSetters[0](instance)\n    }\n  }\n} else {\n  internalSetCurrentInstance = i => {\n    currentInstance = i\n  }\n}\n\nexport const setCurrentInstance = (instance: ComponentInternalInstance) => {\n  internalSetCurrentInstance(instance)\n  instance.scope.on()\n}\n\nexport const unsetCurrentInstance = () => {\n  currentInstance && currentInstance.scope.off()\n  internalSetCurrentInstance(null)\n}\n\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component')\n\nexport function validateComponentName(name: string, config: AppConfig) {\n  const appIsNativeTag = config.isNativeTag || NO\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component id: ' + name\n    )\n  }\n}\n\nexport function isStatefulComponent(instance: ComponentInternalInstance) {\n  return instance.vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\n}\n\nexport let isInSSRComponentSetup = false\n\nexport function setupComponent(\n  instance: ComponentInternalInstance,\n  isSSR = false\n) {\n  isInSSRComponentSetup = isSSR\n\n  const { props, children } = instance.vnode\n  const isStateful = isStatefulComponent(instance)\n  initProps(instance, props, isStateful, isSSR)\n  initSlots(instance, children)\n\n  const setupResult = isStateful\n    ? setupStatefulComponent(instance, isSSR)\n    : undefined\n  isInSSRComponentSetup = false\n  return setupResult\n}\n\nfunction setupStatefulComponent(\n  instance: ComponentInternalInstance,\n  isSSR: boolean\n) {\n  const Component = instance.type as ComponentOptions\n\n  if (__DEV__) {\n    if (Component.name) {\n      validateComponentName(Component.name, instance.appContext.config)\n    }\n    if (Component.components) {\n      const names = Object.keys(Component.components)\n      for (let i = 0; i < names.length; i++) {\n        validateComponentName(names[i], instance.appContext.config)\n      }\n    }\n    if (Component.directives) {\n      const names = Object.keys(Component.directives)\n      for (let i = 0; i < names.length; i++) {\n        validateDirectiveName(names[i])\n      }\n    }\n    if (Component.compilerOptions && isRuntimeOnly()) {\n      warn(\n        `\"compilerOptions\" is only supported when using a build of Vue that ` +\n          `includes the runtime compiler. Since you are using a runtime-only ` +\n          `build, the options should be passed via your build tool config instead.`\n      )\n    }\n  }\n  // 0. create render proxy property access cache\n  instance.accessCache = Object.create(null)\n  // 1. create public instance / render proxy\n  // also mark it raw so it's never observed\n  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers))\n  if (__DEV__) {\n    exposePropsOnRenderContext(instance)\n  }\n  // 2. call setup()\n  const { setup } = Component\n  if (setup) {\n    const setupContext = (instance.setupContext =\n      setup.length > 1 ? createSetupContext(instance) : null)\n\n    setCurrentInstance(instance)\n    pauseTracking()\n    const setupResult = callWithErrorHandling(\n      setup,\n      instance,\n      ErrorCodes.SETUP_FUNCTION,\n      [__DEV__ ? shallowReadonly(instance.props) : instance.props, setupContext]\n    )\n    resetTracking()\n    unsetCurrentInstance()\n\n    if (isPromise(setupResult)) {\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance)\n      if (isSSR) {\n        // return the promise so server-renderer can wait on it\n        return setupResult\n          .then((resolvedResult: unknown) => {\n            handleSetupResult(instance, resolvedResult, isSSR)\n          })\n          .catch(e => {\n            handleError(e, instance, ErrorCodes.SETUP_FUNCTION)\n          })\n      } else if (__FEATURE_SUSPENSE__) {\n        // async setup returned Promise.\n        // bail here and wait for re-entry.\n        instance.asyncDep = setupResult\n        if (__DEV__ && !instance.suspense) {\n          const name = Component.name ?? 'Anonymous'\n          warn(\n            `Component <${name}>: setup function returned a promise, but no ` +\n              `<Suspense> boundary was found in the parent component tree. ` +\n              `A component with async setup() must be nested in a <Suspense> ` +\n              `in order to be rendered.`\n          )\n        }\n      } else if (__DEV__) {\n        warn(\n          `setup() returned a Promise, but the version of Vue you are using ` +\n            `does not support it yet.`\n        )\n      }\n    } else {\n      handleSetupResult(instance, setupResult, isSSR)\n    }\n  } else {\n    finishComponentSetup(instance, isSSR)\n  }\n}\n\nexport function handleSetupResult(\n  instance: ComponentInternalInstance,\n  setupResult: unknown,\n  isSSR: boolean\n) {\n  if (isFunction(setupResult)) {\n    // setup returned an inline render function\n    if (__SSR__ && (instance.type as ComponentOptions).__ssrInlineRender) {\n      // when the function's name is `ssrRender` (compiled by SFC inline mode),\n      // set it as ssrRender instead.\n      instance.ssrRender = setupResult\n    } else {\n      instance.render = setupResult as InternalRenderFunction\n    }\n  } else if (isObject(setupResult)) {\n    if (__DEV__ && isVNode(setupResult)) {\n      warn(\n        `setup() should not return VNodes directly - ` +\n          `return a render function instead.`\n      )\n    }\n    // setup returned bindings.\n    // assuming a render function compiled from template is present.\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n      instance.devtoolsRawSetupState = setupResult\n    }\n    instance.setupState = proxyRefs(setupResult)\n    if (__DEV__) {\n      exposeSetupStateOnRenderContext(instance)\n    }\n  } else if (__DEV__ && setupResult !== undefined) {\n    warn(\n      `setup() should return an object. Received: ${\n        setupResult === null ? 'null' : typeof setupResult\n      }`\n    )\n  }\n  finishComponentSetup(instance, isSSR)\n}\n\ntype CompileFunction = (\n  template: string | object,\n  options?: CompilerOptions\n) => InternalRenderFunction\n\nlet compile: CompileFunction | undefined\nlet installWithProxy: (i: ComponentInternalInstance) => void\n\n/**\n * For runtime-dom to register the compiler.\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\n */\nexport function registerRuntimeCompiler(_compile: any) {\n  compile = _compile\n  installWithProxy = i => {\n    if (i.render!._rc) {\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers)\n    }\n  }\n}\n\n// dev only\nexport const isRuntimeOnly = () => !compile\n\nexport function finishComponentSetup(\n  instance: ComponentInternalInstance,\n  isSSR: boolean,\n  skipOptions?: boolean\n) {\n  const Component = instance.type as ComponentOptions\n\n  if (__COMPAT__) {\n    convertLegacyRenderFn(instance)\n\n    if (__DEV__ && Component.compatConfig) {\n      validateCompatConfig(Component.compatConfig)\n    }\n  }\n\n  // template / render function normalization\n  // could be already set when returned from setup()\n  if (!instance.render) {\n    // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\n    // is done by server-renderer\n    if (!isSSR && compile && !Component.render) {\n      const template =\n        (__COMPAT__ &&\n          instance.vnode.props &&\n          instance.vnode.props['inline-template']) ||\n        Component.template ||\n        resolveMergedOptions(instance).template\n      if (template) {\n        if (__DEV__) {\n          startMeasure(instance, `compile`)\n        }\n        const { isCustomElement, compilerOptions } = instance.appContext.config\n        const { delimiters, compilerOptions: componentCompilerOptions } =\n          Component\n        const finalCompilerOptions: CompilerOptions = extend(\n          extend(\n            {\n              isCustomElement,\n              delimiters\n            },\n            compilerOptions\n          ),\n          componentCompilerOptions\n        )\n        if (__COMPAT__) {\n          // pass runtime compat config into the compiler\n          finalCompilerOptions.compatConfig = Object.create(globalCompatConfig)\n          if (Component.compatConfig) {\n            // @ts-expect-error types are not compatible\n            extend(finalCompilerOptions.compatConfig, Component.compatConfig)\n          }\n        }\n        Component.render = compile(template, finalCompilerOptions)\n        if (__DEV__) {\n          endMeasure(instance, `compile`)\n        }\n      }\n    }\n\n    instance.render = (Component.render || NOOP) as InternalRenderFunction\n\n    // for runtime-compiled render functions using `with` blocks, the render\n    // proxy used needs a different `has` handler which is more performant and\n    // also only allows a whitelist of globals to fallthrough.\n    if (installWithProxy) {\n      installWithProxy(instance)\n    }\n  }\n\n  // support for 2.x options\n  if (__FEATURE_OPTIONS_API__ && !(__COMPAT__ && skipOptions)) {\n    setCurrentInstance(instance)\n    pauseTracking()\n    try {\n      applyOptions(instance)\n    } finally {\n      resetTracking()\n      unsetCurrentInstance()\n    }\n  }\n\n  // warn missing template/render\n  // the runtime compilation of template in SSR is done by server-render\n  if (__DEV__ && !Component.render && instance.render === NOOP && !isSSR) {\n    /* istanbul ignore if */\n    if (!compile && Component.template) {\n      warn(\n        `Component provided template option but ` +\n          `runtime compilation is not supported in this build of Vue.` +\n          (__ESM_BUNDLER__\n            ? ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\n            : __ESM_BROWSER__\n            ? ` Use \"vue.esm-browser.js\" instead.`\n            : __GLOBAL__\n            ? ` Use \"vue.global.js\" instead.`\n            : ``) /* should not happen */\n      )\n    } else {\n      warn(`Component is missing template or render function.`)\n    }\n  }\n}\n\nfunction getAttrsProxy(instance: ComponentInternalInstance): Data {\n  return (\n    instance.attrsProxy ||\n    (instance.attrsProxy = new Proxy(\n      instance.attrs,\n      __DEV__\n        ? {\n            get(target, key: string) {\n              markAttrsAccessed()\n              track(instance, TrackOpTypes.GET, '$attrs')\n              return target[key]\n            },\n            set() {\n              warn(`setupContext.attrs is readonly.`)\n              return false\n            },\n            deleteProperty() {\n              warn(`setupContext.attrs is readonly.`)\n              return false\n            }\n          }\n        : {\n            get(target, key: string) {\n              track(instance, TrackOpTypes.GET, '$attrs')\n              return target[key]\n            }\n          }\n    ))\n  )\n}\n\n/**\n * Dev-only\n */\nfunction getSlotsProxy(instance: ComponentInternalInstance): Slots {\n  return (\n    instance.slotsProxy ||\n    (instance.slotsProxy = new Proxy(instance.slots, {\n      get(target, key: string) {\n        track(instance, TrackOpTypes.GET, '$slots')\n        return target[key]\n      }\n    }))\n  )\n}\n\nexport function createSetupContext(\n  instance: ComponentInternalInstance\n): SetupContext {\n  const expose: SetupContext['expose'] = exposed => {\n    if (__DEV__) {\n      if (instance.exposed) {\n        warn(`expose() should be called only once per setup().`)\n      }\n      if (exposed != null) {\n        let exposedType: string = typeof exposed\n        if (exposedType === 'object') {\n          if (isArray(exposed)) {\n            exposedType = 'array'\n          } else if (isRef(exposed)) {\n            exposedType = 'ref'\n          }\n        }\n        if (exposedType !== 'object') {\n          warn(\n            `expose() should be passed a plain object, received ${exposedType}.`\n          )\n        }\n      }\n    }\n    instance.exposed = exposed || {}\n  }\n\n  if (__DEV__) {\n    // We use getters in dev in case libs like test-utils overwrite instance\n    // properties (overwrites should not be done in prod)\n    return Object.freeze({\n      get attrs() {\n        return getAttrsProxy(instance)\n      },\n      get slots() {\n        return getSlotsProxy(instance)\n      },\n      get emit() {\n        return (event: string, ...args: any[]) => instance.emit(event, ...args)\n      },\n      expose\n    })\n  } else {\n    return {\n      get attrs() {\n        return getAttrsProxy(instance)\n      },\n      slots: instance.slots,\n      emit: instance.emit,\n      expose\n    }\n  }\n}\n\nexport function getExposeProxy(instance: ComponentInternalInstance) {\n  if (instance.exposed) {\n    return (\n      instance.exposeProxy ||\n      (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\n        get(target, key: string) {\n          if (key in target) {\n            return target[key]\n          } else if (key in publicPropertiesMap) {\n            return publicPropertiesMap[key](instance)\n          }\n        },\n        has(target, key: string) {\n          return key in target || key in publicPropertiesMap\n        }\n      }))\n    )\n  }\n}\n\nconst classifyRE = /(?:^|[-_])(\\w)/g\nconst classify = (str: string): string =>\n  str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '')\n\nexport function getComponentName(\n  Component: ConcreteComponent,\n  includeInferred = true\n): string | false | undefined {\n  return isFunction(Component)\n    ? Component.displayName || Component.name\n    : Component.name || (includeInferred && Component.__name)\n}\n\n/* istanbul ignore next */\nexport function formatComponentName(\n  instance: ComponentInternalInstance | null,\n  Component: ConcreteComponent,\n  isRoot = false\n): string {\n  let name = getComponentName(Component)\n  if (!name && Component.__file) {\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/)\n    if (match) {\n      name = match[1]\n    }\n  }\n\n  if (!name && instance && instance.parent) {\n    // try to infer the name based on reverse resolution\n    const inferFromRegistry = (registry: Record<string, any> | undefined) => {\n      for (const key in registry) {\n        if (registry[key] === Component) {\n          return key\n        }\n      }\n    }\n    name =\n      inferFromRegistry(\n        instance.components ||\n          (instance.parent.type as ComponentOptions).components\n      ) || inferFromRegistry(instance.appContext.components)\n  }\n\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`\n}\n\nexport function isClassComponent(value: unknown): value is ClassComponent {\n  return isFunction(value) && '__vccOpts' in value\n}\n", "import { computed as _computed } from '@vue/reactivity'\nimport { isInSSRComponentSetup } from './component'\n\nexport const computed: typeof _computed = (\n  getterOrOptions: any,\n  debugOptions?: any\n) => {\n  // @ts-ignore\n  return _computed(getterOrOptions, debugOptions, isInSSRComponentSetup)\n}\n", "import {\n  VNode,\n  VNodeProps,\n  createVNode,\n  VNodeArrayChildren,\n  Fragment,\n  Text,\n  Comment,\n  isVNode\n} from './vnode'\nimport { Teleport, TeleportProps } from './components/Teleport'\nimport { Suspense, SuspenseProps } from './components/Suspense'\nimport { isObject, isArray } from '@vue/shared'\nimport { RawSlots } from './componentSlots'\nimport {\n  FunctionalComponent,\n  Component,\n  ComponentOptions,\n  ConcreteComponent\n} from './component'\nimport { EmitsOptions } from './componentEmits'\nimport { DefineComponent } from './apiDefineComponent'\n\n// `h` is a more user-friendly version of `createVNode` that allows omitting the\n// props when possible. It is intended for manually written render functions.\n// Compiler-generated code uses `createVNode` because\n// 1. it is monomorphic and avoids the extra call overhead\n// 2. it allows specifying patchFlags for optimization\n\n/*\n// type only\nh('div')\n\n// type + props\nh('div', {})\n\n// type + omit props + children\n// Omit props does NOT support named slots\nh('div', []) // array\nh('div', 'foo') // text\nh('div', h('br')) // vnode\nh(Component, () => {}) // default slot\n\n// type + props + children\nh('div', {}, []) // array\nh('div', {}, 'foo') // text\nh('div', {}, h('br')) // vnode\nh(Component, {}, () => {}) // default slot\nh(Component, {}, {}) // named slots\n\n// named slots without props requires explicit `null` to avoid ambiguity\nh(Component, null, {})\n**/\n\ntype RawProps = VNodeProps & {\n  // used to differ from a single VNode object as children\n  __v_isVNode?: never\n  // used to differ from Array children\n  [Symbol.iterator]?: never\n} & Record<string, any>\n\ntype RawChildren =\n  | string\n  | number\n  | boolean\n  | VNode\n  | VNodeArrayChildren\n  | (() => any)\n\n// fake constructor type returned from `defineComponent`\ninterface Constructor<P = any> {\n  __isFragment?: never\n  __isTeleport?: never\n  __isSuspense?: never\n  new (...args: any[]): { $props: P }\n}\n\n// The following is a series of overloads for providing props validation of\n// manually written render functions.\n\n// element\nexport function h(type: string, children?: RawChildren): VNode\nexport function h(\n  type: string,\n  props?: RawProps | null,\n  children?: RawChildren | RawSlots\n): VNode\n\n// text/comment\nexport function h(\n  type: typeof Text | typeof Comment,\n  children?: string | number | boolean\n): VNode\nexport function h(\n  type: typeof Text | typeof Comment,\n  props?: null,\n  children?: string | number | boolean\n): VNode\n// fragment\nexport function h(type: typeof Fragment, children?: VNodeArrayChildren): VNode\nexport function h(\n  type: typeof Fragment,\n  props?: RawProps | null,\n  children?: VNodeArrayChildren\n): VNode\n\n// teleport (target prop is required)\nexport function h(\n  type: typeof Teleport,\n  props: RawProps & TeleportProps,\n  children: RawChildren | RawSlots\n): VNode\n\n// suspense\nexport function h(type: typeof Suspense, children?: RawChildren): VNode\nexport function h(\n  type: typeof Suspense,\n  props?: (RawProps & SuspenseProps) | null,\n  children?: RawChildren | RawSlots\n): VNode\n\n// functional component\nexport function h<\n  P,\n  E extends EmitsOptions = {},\n  S extends Record<string, any> = {}\n>(\n  type: FunctionalComponent<P, E, S>,\n  props?: (RawProps & P) | ({} extends P ? null : never),\n  children?: RawChildren | RawSlots\n): VNode\n\n// catch-all for generic component types\nexport function h(type: Component, children?: RawChildren): VNode\n\n// concrete component\nexport function h<P>(\n  type: ConcreteComponent | string,\n  children?: RawChildren\n): VNode\nexport function h<P>(\n  type: ConcreteComponent<P> | string,\n  props?: (RawProps & P) | ({} extends P ? null : never),\n  children?: RawChildren\n): VNode\n\n// component without props\nexport function h<P>(\n  type: Component<P>,\n  props?: (RawProps & P) | null,\n  children?: RawChildren | RawSlots\n): VNode\n\n// exclude `defineComponent` constructors\nexport function h<P>(\n  type: ComponentOptions<P>,\n  props?: (RawProps & P) | ({} extends P ? null : never),\n  children?: RawChildren | RawSlots\n): VNode\n\n// fake constructor type returned by `defineComponent` or class component\nexport function h(type: Constructor, children?: RawChildren): VNode\nexport function h<P>(\n  type: Constructor<P>,\n  props?: (RawProps & P) | ({} extends P ? null : never),\n  children?: RawChildren | RawSlots\n): VNode\n\n// fake constructor type returned by `defineComponent`\nexport function h(type: DefineComponent, children?: RawChildren): VNode\nexport function h<P>(\n  type: DefineComponent<P>,\n  props?: (RawProps & P) | ({} extends P ? null : never),\n  children?: RawChildren | RawSlots\n): VNode\n\n// Actual implementation\nexport function h(type: any, propsOrChildren?: any, children?: any): VNode {\n  const l = arguments.length\n  if (l === 2) {\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n      // single vnode without props\n      if (isVNode(propsOrChildren)) {\n        return createVNode(type, null, [propsOrChildren])\n      }\n      // props without children\n      return createVNode(type, propsOrChildren)\n    } else {\n      // omit props\n      return createVNode(type, null, propsOrChildren)\n    }\n  } else {\n    if (l > 3) {\n      children = Array.prototype.slice.call(arguments, 2)\n    } else if (l === 3 && isVNode(children)) {\n      children = [children]\n    }\n    return createVNode(type, propsOrChildren, children)\n  }\n}\n", "import { inject } from '../apiInject'\nimport { warn } from '../warning'\n\nexport const ssrContextKey = Symbol.for('v-scx')\n\nexport const useSSRContext = <T = Record<string, any>>() => {\n  if (!__GLOBAL__) {\n    const ctx = inject<T>(ssrContextKey)\n    if (!ctx) {\n      __DEV__ &&\n        warn(\n          `Server rendering context not provided. Make sure to only call ` +\n            `useSSRContext() conditionally in the server build.`\n        )\n    }\n    return ctx\n  } else if (__DEV__) {\n    warn(`useSSRContext() is not supported in the global build.`)\n  }\n}\n", "import { isReactive, isReadonly, isRef, Ref, toRaw } from '@vue/reactivity'\nimport { EMPTY_OBJ, extend, isArray, isFunction, isObject } from '@vue/shared'\nimport { isShallow } from '../../reactivity/src/reactive'\nimport { ComponentInternalInstance, ComponentOptions } from './component'\nimport { ComponentPublicInstance } from './componentPublicInstance'\n\nexport function initCustomFormatter() {\n  /* eslint-disable no-restricted-globals */\n  if (!__DEV__ || typeof window === 'undefined') {\n    return\n  }\n\n  const vueStyle = { style: 'color:#3ba776' }\n  const numberStyle = { style: 'color:#0b1bc9' }\n  const stringStyle = { style: 'color:#b62e24' }\n  const keywordStyle = { style: 'color:#9d288c' }\n\n  // custom formatter for Chrome\n  // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\n  const formatter = {\n    header(obj: unknown) {\n      // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\n      if (!isObject(obj)) {\n        return null\n      }\n\n      if (obj.__isVue) {\n        return ['div', vueStyle, `VueInstance`]\n      } else if (isRef(obj)) {\n        return [\n          'div',\n          {},\n          ['span', vueStyle, genRefFlag(obj)],\n          '<',\n          formatValue(obj.value),\n          `>`\n        ]\n      } else if (isReactive(obj)) {\n        return [\n          'div',\n          {},\n          ['span', vueStyle, isShallow(obj) ? 'ShallowReactive' : 'Reactive'],\n          '<',\n          formatValue(obj),\n          `>${isReadonly(obj) ? ` (readonly)` : ``}`\n        ]\n      } else if (isReadonly(obj)) {\n        return [\n          'div',\n          {},\n          ['span', vueStyle, isShallow(obj) ? 'ShallowReadonly' : 'Readonly'],\n          '<',\n          formatValue(obj),\n          '>'\n        ]\n      }\n      return null\n    },\n    hasBody(obj: unknown) {\n      return obj && (obj as any).__isVue\n    },\n    body(obj: unknown) {\n      if (obj && (obj as any).__isVue) {\n        return [\n          'div',\n          {},\n          ...formatInstance((obj as ComponentPublicInstance).$)\n        ]\n      }\n    }\n  }\n\n  function formatInstance(instance: ComponentInternalInstance) {\n    const blocks = []\n    if (instance.type.props && instance.props) {\n      blocks.push(createInstanceBlock('props', toRaw(instance.props)))\n    }\n    if (instance.setupState !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock('setup', instance.setupState))\n    }\n    if (instance.data !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock('data', toRaw(instance.data)))\n    }\n    const computed = extractKeys(instance, 'computed')\n    if (computed) {\n      blocks.push(createInstanceBlock('computed', computed))\n    }\n    const injected = extractKeys(instance, 'inject')\n    if (injected) {\n      blocks.push(createInstanceBlock('injected', injected))\n    }\n\n    blocks.push([\n      'div',\n      {},\n      [\n        'span',\n        {\n          style: keywordStyle.style + ';opacity:0.66'\n        },\n        '$ (internal): '\n      ],\n      ['object', { object: instance }]\n    ])\n    return blocks\n  }\n\n  function createInstanceBlock(type: string, target: any) {\n    target = extend({}, target)\n    if (!Object.keys(target).length) {\n      return ['span', {}]\n    }\n    return [\n      'div',\n      { style: 'line-height:1.25em;margin-bottom:0.6em' },\n      [\n        'div',\n        {\n          style: 'color:#476582'\n        },\n        type\n      ],\n      [\n        'div',\n        {\n          style: 'padding-left:1.25em'\n        },\n        ...Object.keys(target).map(key => {\n          return [\n            'div',\n            {},\n            ['span', keywordStyle, key + ': '],\n            formatValue(target[key], false)\n          ]\n        })\n      ]\n    ]\n  }\n\n  function formatValue(v: unknown, asRaw = true) {\n    if (typeof v === 'number') {\n      return ['span', numberStyle, v]\n    } else if (typeof v === 'string') {\n      return ['span', stringStyle, JSON.stringify(v)]\n    } else if (typeof v === 'boolean') {\n      return ['span', keywordStyle, v]\n    } else if (isObject(v)) {\n      return ['object', { object: asRaw ? toRaw(v) : v }]\n    } else {\n      return ['span', stringStyle, String(v)]\n    }\n  }\n\n  function extractKeys(instance: ComponentInternalInstance, type: string) {\n    const Comp = instance.type\n    if (isFunction(Comp)) {\n      return\n    }\n    const extracted: Record<string, any> = {}\n    for (const key in instance.ctx) {\n      if (isKeyOfType(Comp, key, type)) {\n        extracted[key] = instance.ctx[key]\n      }\n    }\n    return extracted\n  }\n\n  function isKeyOfType(Comp: ComponentOptions, key: string, type: string) {\n    const opts = Comp[type]\n    if (\n      (isArray(opts) && opts.includes(key)) ||\n      (isObject(opts) && key in opts)\n    ) {\n      return true\n    }\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\n      return true\n    }\n    if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\n      return true\n    }\n  }\n\n  function genRefFlag(v: Ref) {\n    if (isShallow(v)) {\n      return `ShallowRef`\n    }\n    if ((v as any).effect) {\n      return `ComputedRef`\n    }\n    return `Ref`\n  }\n\n  if ((window as any).devtoolsFormatters) {\n    ;(window as any).devtoolsFormatters.push(formatter)\n  } else {\n    ;(window as any).devtoolsFormatters = [formatter]\n  }\n}\n", "import { hasChanged } from '@vue/shared'\nimport { currentBlock, isBlockTreeEnabled, VNode } from '../vnode'\n\nexport function withMemo(\n  memo: any[],\n  render: () => VNode<any, any>,\n  cache: any[],\n  index: number\n) {\n  const cached = cache[index] as VNode | undefined\n  if (cached && isMemoSame(cached, memo)) {\n    return cached\n  }\n  const ret = render()\n\n  // shallow clone\n  ret.memo = memo.slice()\n  return (cache[index] = ret)\n}\n\nexport function isMemoSame(cached: VNode, memo: any[]) {\n  const prev: any[] = cached.memo!\n  if (prev.length != memo.length) {\n    return false\n  }\n\n  for (let i = 0; i < prev.length; i++) {\n    if (hasChanged(prev[i], memo[i])) {\n      return false\n    }\n  }\n\n  // make sure to let parent block track it when returning cached\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(cached)\n  }\n  return true\n}\n", "// Core API ------------------------------------------------------------------\n\nexport const version = __VERSION__\nexport {\n  // core\n  reactive,\n  ref,\n  readonly,\n  // utilities\n  unref,\n  proxyRefs,\n  isRef,\n  toRef,\n  toValue,\n  toRefs,\n  isProxy,\n  isReactive,\n  isReadonly,\n  isShallow,\n  // advanced\n  customRef,\n  triggerRef,\n  shallowRef,\n  shallowReactive,\n  shallowReadonly,\n  markRaw,\n  toRaw,\n  // effect\n  effect,\n  stop,\n  ReactiveEffect,\n  // effect scope\n  effectScope,\n  EffectScope,\n  getCurrentScope,\n  onScopeDispose\n} from '@vue/reactivity'\nexport { computed } from './apiComputed'\nexport {\n  watch,\n  watchEffect,\n  watchPostEffect,\n  watchSyncEffect\n} from './apiWatch'\nexport {\n  onBeforeMount,\n  onMounted,\n  onBeforeUpdate,\n  onUpdated,\n  onBeforeUnmount,\n  onUnmounted,\n  onActivated,\n  onDeactivated,\n  onRenderTracked,\n  onRenderTriggered,\n  onErrorCaptured,\n  onServerPrefetch\n} from './apiLifecycle'\nexport { provide, inject, hasInjectionContext } from './apiInject'\nexport { nextTick } from './scheduler'\nexport { defineComponent } from './apiDefineComponent'\nexport { defineAsyncComponent } from './apiAsyncComponent'\nexport { useAttrs, useSlots } from './apiSetupHelpers'\n\n// <script setup> API ----------------------------------------------------------\n\nexport {\n  // macros runtime, for typing and warnings only\n  defineProps,\n  defineEmits,\n  defineExpose,\n  defineOptions,\n  defineSlots,\n  defineModel,\n  withDefaults,\n  useModel,\n  // internal\n  mergeDefaults,\n  mergeModels,\n  createPropsRestProxy,\n  withAsyncContext\n} from './apiSetupHelpers'\n\n// Advanced API ----------------------------------------------------------------\n\n// For getting a hold of the internal instance in setup() - useful for advanced\n// plugins\nexport { getCurrentInstance } from './component'\n\n// For raw render function users\nexport { h } from './h'\n// Advanced render function utilities\nexport { createVNode, cloneVNode, mergeProps, isVNode } from './vnode'\n// VNode types\nexport { Fragment, Text, Comment, Static, type VNodeRef } from './vnode'\n// Built-in components\nexport { Teleport, type TeleportProps } from './components/Teleport'\nexport { Suspense, type SuspenseProps } from './components/Suspense'\nexport { KeepAlive, type KeepAliveProps } from './components/KeepAlive'\nexport {\n  BaseTransition,\n  BaseTransitionPropsValidators,\n  type BaseTransitionProps\n} from './components/BaseTransition'\n// For using custom directives\nexport { withDirectives } from './directives'\n// SSR context\nexport { useSSRContext, ssrContextKey } from './helpers/useSsrContext'\n\n// Custom Renderer API ---------------------------------------------------------\n\nexport { createRenderer, createHydrationRenderer } from './renderer'\nexport { queuePostFlushCb } from './scheduler'\nexport { warn, assertNumber } from './warning'\nexport {\n  handleError,\n  callWithErrorHandling,\n  callWithAsyncErrorHandling,\n  ErrorCodes\n} from './errorHandling'\nexport {\n  resolveComponent,\n  resolveDirective,\n  resolveDynamicComponent\n} from './helpers/resolveAssets'\n// For integration with runtime compiler\nexport { registerRuntimeCompiler, isRuntimeOnly } from './component'\nexport {\n  useTransitionState,\n  resolveTransitionHooks,\n  setTransitionHooks,\n  getTransitionRawChildren\n} from './components/BaseTransition'\nexport { initCustomFormatter } from './customFormatter'\n\n// For devtools\nexport { devtools, setDevtoolsHook } from './devtools'\n\n// Types -------------------------------------------------------------------------\n\nimport { VNode } from './vnode'\nimport { ComponentInternalInstance } from './component'\n\n// Augment Ref unwrap bail types.\ndeclare module '@vue/reactivity' {\n  export interface RefUnwrapBailTypes {\n    runtimeCoreBailTypes:\n      | VNode\n      | {\n          // directly bailing on ComponentPublicInstance results in recursion\n          // so we use this as a bail hint\n          $: ComponentInternalInstance\n        }\n  }\n}\n\nexport { TrackOpTypes, TriggerOpTypes } from '@vue/reactivity'\nexport type {\n  Ref,\n  MaybeRef,\n  MaybeRefOrGetter,\n  ToRef,\n  ToRefs,\n  UnwrapRef,\n  ShallowRef,\n  ShallowUnwrapRef,\n  CustomRefFactory,\n  ReactiveFlags,\n  DeepReadonly,\n  ShallowReactive,\n  UnwrapNestedRefs,\n  ComputedRef,\n  WritableComputedRef,\n  WritableComputedOptions,\n  ComputedGetter,\n  ComputedSetter,\n  ReactiveEffectRunner,\n  ReactiveEffectOptions,\n  EffectScheduler,\n  DebuggerOptions,\n  DebuggerEvent,\n  DebuggerEventExtraInfo,\n  Raw\n} from '@vue/reactivity'\nexport type {\n  WatchEffect,\n  WatchOptions,\n  WatchOptionsBase,\n  WatchCallback,\n  WatchSource,\n  WatchStopHandle\n} from './apiWatch'\nexport type { InjectionKey } from './apiInject'\nexport type {\n  App,\n  AppConfig,\n  AppContext,\n  Plugin,\n  CreateAppFunction,\n  OptionMergeFunction\n} from './apiCreateApp'\nexport type {\n  VNode,\n  VNodeChild,\n  VNodeTypes,\n  VNodeProps,\n  VNodeArrayChildren,\n  VNodeNormalizedChildren\n} from './vnode'\nexport type {\n  Component,\n  ConcreteComponent,\n  FunctionalComponent,\n  ComponentInternalInstance,\n  SetupContext,\n  ComponentCustomProps,\n  AllowedComponentProps\n} from './component'\nexport type { DefineComponent } from './apiDefineComponent'\nexport type {\n  ComponentOptions,\n  ComponentOptionsMixin,\n  ComponentOptionsWithoutProps,\n  ComponentOptionsWithObjectProps,\n  ComponentOptionsWithArrayProps,\n  ComponentCustomOptions,\n  ComponentOptionsBase,\n  ComponentProvideOptions,\n  RenderFunction,\n  MethodOptions,\n  ComputedOptions,\n  RuntimeCompilerOptions,\n  ComponentInjectOptions\n} from './componentOptions'\nexport type { EmitsOptions, ObjectEmitsOptions } from './componentEmits'\nexport type {\n  ComponentPublicInstance,\n  ComponentCustomProperties,\n  CreateComponentPublicInstance\n} from './componentPublicInstance'\nexport type {\n  Renderer,\n  RendererNode,\n  RendererElement,\n  HydrationRenderer,\n  RendererOptions,\n  RootRenderFunction\n} from './renderer'\nexport type { RootHydrateFunction } from './hydration'\nexport type { Slot, Slots, SlotsType } from './componentSlots'\nexport type {\n  Prop,\n  PropType,\n  ComponentPropsOptions,\n  ComponentObjectPropsOptions,\n  ExtractPropTypes,\n  ExtractPublicPropTypes,\n  ExtractDefaultPropTypes\n} from './componentProps'\nexport type {\n  Directive,\n  DirectiveBinding,\n  DirectiveHook,\n  ObjectDirective,\n  FunctionDirective,\n  DirectiveArguments\n} from './directives'\nexport type { SuspenseBoundary } from './components/Suspense'\nexport type {\n  TransitionState,\n  TransitionHooks\n} from './components/BaseTransition'\nexport type {\n  AsyncComponentOptions,\n  AsyncComponentLoader\n} from './apiAsyncComponent'\nexport type { HMRRuntime } from './hmr'\n\n// Internal API ----------------------------------------------------------------\n\n// **IMPORTANT** Internal APIs may change without notice between versions and\n// user code should avoid relying on them.\n\n// For compiler generated code\n// should sync with '@vue/compiler-core/src/runtimeHelpers.ts'\nexport {\n  withCtx,\n  pushScopeId,\n  popScopeId,\n  withScopeId\n} from './componentRenderContext'\nexport { renderList } from './helpers/renderList'\nexport { toHandlers } from './helpers/toHandlers'\nexport { renderSlot } from './helpers/renderSlot'\nexport { createSlots } from './helpers/createSlots'\nexport { withMemo, isMemoSame } from './helpers/withMemo'\nexport {\n  openBlock,\n  createBlock,\n  setBlockTracking,\n  createTextVNode,\n  createCommentVNode,\n  createStaticVNode,\n  createElementVNode,\n  createElementBlock,\n  guardReactiveProps\n} from './vnode'\nexport {\n  toDisplayString,\n  camelize,\n  capitalize,\n  toHandlerKey,\n  normalizeProps,\n  normalizeClass,\n  normalizeStyle\n} from '@vue/shared'\n\n// For test-utils\nexport { transformVNodeArgs } from './vnode'\n\n// SSR -------------------------------------------------------------------------\n\n// **IMPORTANT** These APIs are exposed solely for @vue/server-renderer and may\n// change without notice between versions. User code should never rely on them.\n\nimport { createComponentInstance, setupComponent } from './component'\nimport { renderComponentRoot } from './componentRenderUtils'\nimport { setCurrentRenderingInstance } from './componentRenderContext'\nimport { isVNode, normalizeVNode } from './vnode'\n\nconst _ssrUtils = {\n  createComponentInstance,\n  setupComponent,\n  renderComponentRoot,\n  setCurrentRenderingInstance,\n  isVNode,\n  normalizeVNode\n}\n\n/**\n * SSR utils for \\@vue/server-renderer. Only exposed in ssr-possible builds.\n * @internal\n */\nexport const ssrUtils = (__SSR__ ? _ssrUtils : null) as typeof _ssrUtils\n\n// 2.x COMPAT ------------------------------------------------------------------\n\nexport { DeprecationTypes } from './compat/compatConfig'\nexport type { CompatVue } from './compat/global'\nexport type { LegacyConfig } from './compat/globalConfig'\n\nimport { warnDeprecation } from './compat/compatConfig'\nimport { createCompatVue } from './compat/global'\nimport {\n  isCompatEnabled,\n  checkCompatEnabled,\n  softAssertCompatEnabled\n} from './compat/compatConfig'\nimport { resolveFilter as _resolveFilter } from './helpers/resolveAssets'\n\n/**\n * @internal only exposed in compat builds\n */\nexport const resolveFilter = __COMPAT__ ? _resolveFilter : null\n\nconst _compatUtils = {\n  warnDeprecation,\n  createCompatVue,\n  isCompatEnabled,\n  checkCompatEnabled,\n  softAssertCompatEnabled\n}\n\n/**\n * @internal only exposed in compat builds.\n */\nexport const compatUtils = (\n  __COMPAT__ ? _compatUtils : null\n) as typeof _compatUtils\n", "import { RendererOptions } from '@vue/runtime-core'\n\nexport const svgNS = 'http://www.w3.org/2000/svg'\n\nconst doc = (typeof document !== 'undefined' ? document : null) as Document\n\nconst templateContainer = doc && /*#__PURE__*/ doc.createElement('template')\n\nexport const nodeOps: Omit<RendererOptions<Node, Element>, 'patchProp'> = {\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null)\n  },\n\n  remove: child => {\n    const parent = child.parentNode\n    if (parent) {\n      parent.removeChild(child)\n    }\n  },\n\n  createElement: (tag, isSVG, is, props): Element => {\n    const el = isSVG\n      ? doc.createElementNS(svgNS, tag)\n      : doc.createElement(tag, is ? { is } : undefined)\n\n    if (tag === 'select' && props && props.multiple != null) {\n      ;(el as HTMLSelectElement).setAttribute('multiple', props.multiple)\n    }\n\n    return el\n  },\n\n  createText: text => doc.createTextNode(text),\n\n  createComment: text => doc.createComment(text),\n\n  setText: (node, text) => {\n    node.nodeValue = text\n  },\n\n  setElementText: (el, text) => {\n    el.textContent = text\n  },\n\n  parentNode: node => node.parentNode as Element | null,\n\n  nextSibling: node => node.nextSibling,\n\n  querySelector: selector => doc.querySelector(selector),\n\n  setScopeId(el, id) {\n    el.setAttribute(id, '')\n  },\n\n  // __UNSAFE__\n  // Reason: innerHTML.\n  // Static content here can only come from compiled templates.\n  // As long as the user only uses trusted templates, this is safe.\n  insertStaticContent(content, parent, anchor, isSVG, start, end) {\n    // <parent> before | first ... last | anchor </parent>\n    const before = anchor ? anchor.previousSibling : parent.lastChild\n    // #5308 can only take cached path if:\n    // - has a single root node\n    // - nextSibling info is still available\n    if (start && (start === end || start.nextSibling)) {\n      // cached\n      while (true) {\n        parent.insertBefore(start!.cloneNode(true), anchor)\n        if (start === end || !(start = start!.nextSibling)) break\n      }\n    } else {\n      // fresh insert\n      templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content\n      const template = templateContainer.content\n      if (isSVG) {\n        // remove outer svg wrapper\n        const wrapper = template.firstChild!\n        while (wrapper.firstChild) {\n          template.appendChild(wrapper.firstChild)\n        }\n        template.removeChild(wrapper)\n      }\n      parent.insertBefore(template, anchor)\n    }\n    return [\n      // first\n      before ? before.nextSibling! : parent.firstChild!,\n      // last\n      anchor ? anchor.previousSibling! : parent.lastChild!\n    ]\n  }\n}\n", "import {\n  BaseTransition,\n  BaseTransitionProps,\n  BaseTransitionPropsValidators,\n  h,\n  assertNumber,\n  FunctionalComponent,\n  compatUtils,\n  DeprecationTypes\n} from '@vue/runtime-core'\nimport { isObject, toNumber, extend, isArray } from '@vue/shared'\n\nconst TRANSITION = 'transition'\nconst ANIMATION = 'animation'\n\ntype AnimationTypes = typeof TRANSITION | typeof ANIMATION\n\nexport interface TransitionProps extends BaseTransitionProps<Element> {\n  name?: string\n  type?: AnimationTypes\n  css?: boolean\n  duration?: number | { enter: number; leave: number }\n  // custom transition classes\n  enterFromClass?: string\n  enterActiveClass?: string\n  enterToClass?: string\n  appearFromClass?: string\n  appearActiveClass?: string\n  appearToClass?: string\n  leaveFromClass?: string\n  leaveActiveClass?: string\n  leaveToClass?: string\n}\n\nexport const vtcKey = Symbol('_vtc')\n\nexport interface ElementWithTransition extends HTMLElement {\n  // _vtc = Vue Transition Classes.\n  // Store the temporarily-added transition classes on the element\n  // so that we can avoid overwriting them if the element's class is patched\n  // during the transition.\n  [vtcKey]?: Set<string>\n}\n\n// DOM Transition is a higher-order-component based on the platform-agnostic\n// base Transition component, with DOM-specific logic.\nexport const Transition: FunctionalComponent<TransitionProps> = (\n  props,\n  { slots }\n) => h(BaseTransition, resolveTransitionProps(props), slots)\n\nTransition.displayName = 'Transition'\n\nif (__COMPAT__) {\n  Transition.__isBuiltIn = true\n}\n\nconst DOMTransitionPropsValidators = {\n  name: String,\n  type: String,\n  css: {\n    type: Boolean,\n    default: true\n  },\n  duration: [String, Number, Object],\n  enterFromClass: String,\n  enterActiveClass: String,\n  enterToClass: String,\n  appearFromClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  leaveFromClass: String,\n  leaveActiveClass: String,\n  leaveToClass: String\n}\n\nexport const TransitionPropsValidators = (Transition.props =\n  /*#__PURE__*/ extend(\n    {},\n    BaseTransitionPropsValidators as any,\n    DOMTransitionPropsValidators\n  ))\n\n/**\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\n * with custom HOCs.\n */\nconst callHook = (\n  hook: Function | Function[] | undefined,\n  args: any[] = []\n) => {\n  if (isArray(hook)) {\n    hook.forEach(h => h(...args))\n  } else if (hook) {\n    hook(...args)\n  }\n}\n\n/**\n * Check if a hook expects a callback (2nd arg), which means the user\n * intends to explicitly control the end of the transition.\n */\nconst hasExplicitCallback = (\n  hook: Function | Function[] | undefined\n): boolean => {\n  return hook\n    ? isArray(hook)\n      ? hook.some(h => h.length > 1)\n      : hook.length > 1\n    : false\n}\n\nexport function resolveTransitionProps(\n  rawProps: TransitionProps\n): BaseTransitionProps<Element> {\n  const baseProps: BaseTransitionProps<Element> = {}\n  for (const key in rawProps) {\n    if (!(key in DOMTransitionPropsValidators)) {\n      ;(baseProps as any)[key] = (rawProps as any)[key]\n    }\n  }\n\n  if (rawProps.css === false) {\n    return baseProps\n  }\n\n  const {\n    name = 'v',\n    type,\n    duration,\n    enterFromClass = `${name}-enter-from`,\n    enterActiveClass = `${name}-enter-active`,\n    enterToClass = `${name}-enter-to`,\n    appearFromClass = enterFromClass,\n    appearActiveClass = enterActiveClass,\n    appearToClass = enterToClass,\n    leaveFromClass = `${name}-leave-from`,\n    leaveActiveClass = `${name}-leave-active`,\n    leaveToClass = `${name}-leave-to`\n  } = rawProps\n\n  // legacy transition class compat\n  const legacyClassEnabled =\n    __COMPAT__ &&\n    compatUtils.isCompatEnabled(DeprecationTypes.TRANSITION_CLASSES, null)\n  let legacyEnterFromClass: string\n  let legacyAppearFromClass: string\n  let legacyLeaveFromClass: string\n  if (__COMPAT__ && legacyClassEnabled) {\n    const toLegacyClass = (cls: string) => cls.replace(/-from$/, '')\n    if (!rawProps.enterFromClass) {\n      legacyEnterFromClass = toLegacyClass(enterFromClass)\n    }\n    if (!rawProps.appearFromClass) {\n      legacyAppearFromClass = toLegacyClass(appearFromClass)\n    }\n    if (!rawProps.leaveFromClass) {\n      legacyLeaveFromClass = toLegacyClass(leaveFromClass)\n    }\n  }\n\n  const durations = normalizeDuration(duration)\n  const enterDuration = durations && durations[0]\n  const leaveDuration = durations && durations[1]\n  const {\n    onBeforeEnter,\n    onEnter,\n    onEnterCancelled,\n    onLeave,\n    onLeaveCancelled,\n    onBeforeAppear = onBeforeEnter,\n    onAppear = onEnter,\n    onAppearCancelled = onEnterCancelled\n  } = baseProps\n\n  const finishEnter = (el: Element, isAppear: boolean, done?: () => void) => {\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass)\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass)\n    done && done()\n  }\n\n  const finishLeave = (\n    el: Element & { _isLeaving?: boolean },\n    done?: () => void\n  ) => {\n    el._isLeaving = false\n    removeTransitionClass(el, leaveFromClass)\n    removeTransitionClass(el, leaveToClass)\n    removeTransitionClass(el, leaveActiveClass)\n    done && done()\n  }\n\n  const makeEnterHook = (isAppear: boolean) => {\n    return (el: Element, done: () => void) => {\n      const hook = isAppear ? onAppear : onEnter\n      const resolve = () => finishEnter(el, isAppear, done)\n      callHook(hook, [el, resolve])\n      nextFrame(() => {\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass)\n        if (__COMPAT__ && legacyClassEnabled) {\n          const legacyClass = isAppear\n            ? legacyAppearFromClass\n            : legacyEnterFromClass\n          if (legacyClass) {\n            removeTransitionClass(el, legacyClass)\n          }\n        }\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass)\n        if (!hasExplicitCallback(hook)) {\n          whenTransitionEnds(el, type, enterDuration, resolve)\n        }\n      })\n    }\n  }\n\n  return extend(baseProps, {\n    onBeforeEnter(el) {\n      callHook(onBeforeEnter, [el])\n      addTransitionClass(el, enterFromClass)\n      if (__COMPAT__ && legacyClassEnabled && legacyEnterFromClass) {\n        addTransitionClass(el, legacyEnterFromClass)\n      }\n      addTransitionClass(el, enterActiveClass)\n    },\n    onBeforeAppear(el) {\n      callHook(onBeforeAppear, [el])\n      addTransitionClass(el, appearFromClass)\n      if (__COMPAT__ && legacyClassEnabled && legacyAppearFromClass) {\n        addTransitionClass(el, legacyAppearFromClass)\n      }\n      addTransitionClass(el, appearActiveClass)\n    },\n    onEnter: makeEnterHook(false),\n    onAppear: makeEnterHook(true),\n    onLeave(el: Element & { _isLeaving?: boolean }, done) {\n      el._isLeaving = true\n      const resolve = () => finishLeave(el, done)\n      addTransitionClass(el, leaveFromClass)\n      if (__COMPAT__ && legacyClassEnabled && legacyLeaveFromClass) {\n        addTransitionClass(el, legacyLeaveFromClass)\n      }\n      // force reflow so *-leave-from classes immediately take effect (#2593)\n      forceReflow()\n      addTransitionClass(el, leaveActiveClass)\n      nextFrame(() => {\n        if (!el._isLeaving) {\n          // cancelled\n          return\n        }\n        removeTransitionClass(el, leaveFromClass)\n        if (__COMPAT__ && legacyClassEnabled && legacyLeaveFromClass) {\n          removeTransitionClass(el, legacyLeaveFromClass)\n        }\n        addTransitionClass(el, leaveToClass)\n        if (!hasExplicitCallback(onLeave)) {\n          whenTransitionEnds(el, type, leaveDuration, resolve)\n        }\n      })\n      callHook(onLeave, [el, resolve])\n    },\n    onEnterCancelled(el) {\n      finishEnter(el, false)\n      callHook(onEnterCancelled, [el])\n    },\n    onAppearCancelled(el) {\n      finishEnter(el, true)\n      callHook(onAppearCancelled, [el])\n    },\n    onLeaveCancelled(el) {\n      finishLeave(el)\n      callHook(onLeaveCancelled, [el])\n    }\n  } as BaseTransitionProps<Element>)\n}\n\nfunction normalizeDuration(\n  duration: TransitionProps['duration']\n): [number, number] | null {\n  if (duration == null) {\n    return null\n  } else if (isObject(duration)) {\n    return [NumberOf(duration.enter), NumberOf(duration.leave)]\n  } else {\n    const n = NumberOf(duration)\n    return [n, n]\n  }\n}\n\nfunction NumberOf(val: unknown): number {\n  const res = toNumber(val)\n  if (__DEV__) {\n    assertNumber(res, '<transition> explicit duration')\n  }\n  return res\n}\n\nexport function addTransitionClass(el: Element, cls: string) {\n  cls.split(/\\s+/).forEach(c => c && el.classList.add(c))\n  ;(\n    (el as ElementWithTransition)[vtcKey] ||\n    ((el as ElementWithTransition)[vtcKey] = new Set())\n  ).add(cls)\n}\n\nexport function removeTransitionClass(el: Element, cls: string) {\n  cls.split(/\\s+/).forEach(c => c && el.classList.remove(c))\n  const _vtc = (el as ElementWithTransition)[vtcKey]\n  if (_vtc) {\n    _vtc.delete(cls)\n    if (!_vtc!.size) {\n      ;(el as ElementWithTransition)[vtcKey] = undefined\n    }\n  }\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(cb)\n  })\n}\n\nlet endId = 0\n\nfunction whenTransitionEnds(\n  el: Element & { _endId?: number },\n  expectedType: TransitionProps['type'] | undefined,\n  explicitTimeout: number | null,\n  resolve: () => void\n) {\n  const id = (el._endId = ++endId)\n  const resolveIfNotStale = () => {\n    if (id === el._endId) {\n      resolve()\n    }\n  }\n\n  if (explicitTimeout) {\n    return setTimeout(resolveIfNotStale, explicitTimeout)\n  }\n\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType)\n  if (!type) {\n    return resolve()\n  }\n\n  const endEvent = type + 'end'\n  let ended = 0\n  const end = () => {\n    el.removeEventListener(endEvent, onEnd)\n    resolveIfNotStale()\n  }\n  const onEnd = (e: Event) => {\n    if (e.target === el && ++ended >= propCount) {\n      end()\n    }\n  }\n  setTimeout(() => {\n    if (ended < propCount) {\n      end()\n    }\n  }, timeout + 1)\n  el.addEventListener(endEvent, onEnd)\n}\n\ninterface CSSTransitionInfo {\n  type: AnimationTypes | null\n  propCount: number\n  timeout: number\n  hasTransform: boolean\n}\n\ntype AnimationProperties = 'Delay' | 'Duration'\ntype StylePropertiesKey =\n  | `${AnimationTypes}${AnimationProperties}`\n  | `${typeof TRANSITION}Property`\n\nexport function getTransitionInfo(\n  el: Element,\n  expectedType?: TransitionProps['type']\n): CSSTransitionInfo {\n  const styles = window.getComputedStyle(el) as Pick<\n    CSSStyleDeclaration,\n    StylePropertiesKey\n  >\n  // JSDOM may return undefined for transition properties\n  const getStyleProperties = (key: StylePropertiesKey) =>\n    (styles[key] || '').split(', ')\n  const transitionDelays = getStyleProperties(`${TRANSITION}Delay`)\n  const transitionDurations = getStyleProperties(`${TRANSITION}Duration`)\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations)\n  const animationDelays = getStyleProperties(`${ANIMATION}Delay`)\n  const animationDurations = getStyleProperties(`${ANIMATION}Duration`)\n  const animationTimeout = getTimeout(animationDelays, animationDurations)\n\n  let type: CSSTransitionInfo['type'] = null\n  let timeout = 0\n  let propCount = 0\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION\n      timeout = transitionTimeout\n      propCount = transitionDurations.length\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION\n      timeout = animationTimeout\n      propCount = animationDurations.length\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout)\n    type =\n      timeout > 0\n        ? transitionTimeout > animationTimeout\n          ? TRANSITION\n          : ANIMATION\n        : null\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0\n  }\n  const hasTransform =\n    type === TRANSITION &&\n    /\\b(transform|all)(,|$)/.test(\n      getStyleProperties(`${TRANSITION}Property`).toString()\n    )\n  return {\n    type,\n    timeout,\n    propCount,\n    hasTransform\n  }\n}\n\nfunction getTimeout(delays: string[], durations: string[]): number {\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays)\n  }\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\n// numbers in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down\n// (i.e. acting as a floor function) causing unexpected behaviors\nfunction toMs(s: string): number {\n  // #8409 default value for CSS durations can be 'auto'\n  if (s === 'auto') return 0\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n// synchronously force layout to put elements into a certain state\nexport function forceReflow() {\n  return document.body.offsetHeight\n}\n", "import { ElementWithTransition, vtcKey } from '../components/Transition'\n\n// compiler should normalize class + :class bindings on the same element\n// into a single binding ['staticClass', dynamic]\nexport function patchClass(el: Element, value: string | null, isSVG: boolean) {\n  // directly setting className should be faster than setAttribute in theory\n  // if this is an element during a transition, take the temporary transition\n  // classes into account.\n  const transitionClasses = (el as ElementWithTransition)[vtcKey]\n  if (transitionClasses) {\n    value = (\n      value ? [value, ...transitionClasses] : [...transitionClasses]\n    ).join(' ')\n  }\n  if (value == null) {\n    el.removeAttribute('class')\n  } else if (isSVG) {\n    el.setAttribute('class', value)\n  } else {\n    el.className = value\n  }\n}\n", "import { ObjectDirective } from '@vue/runtime-core'\n\nexport const vShowOldKey = Symbol('_vod')\n\ninterface VShowElement extends HTMLElement {\n  // _vod = vue original display\n  [vShowOldKey]: string\n}\n\nexport const vShow: ObjectDirective<VShowElement> = {\n  beforeMount(el, { value }, { transition }) {\n    el[vShowOldKey] = el.style.display === 'none' ? '' : el.style.display\n    if (transition && value) {\n      transition.beforeEnter(el)\n    } else {\n      setDisplay(el, value)\n    }\n  },\n  mounted(el, { value }, { transition }) {\n    if (transition && value) {\n      transition.enter(el)\n    }\n  },\n  updated(el, { value, oldValue }, { transition }) {\n    if (!value === !oldValue) return\n    if (transition) {\n      if (value) {\n        transition.beforeEnter(el)\n        setDisplay(el, true)\n        transition.enter(el)\n      } else {\n        transition.leave(el, () => {\n          setDisplay(el, false)\n        })\n      }\n    } else {\n      setDisplay(el, value)\n    }\n  },\n  beforeUnmount(el, { value }) {\n    setDisplay(el, value)\n  }\n}\n\nfunction setDisplay(el: VShowElement, value: unknown): void {\n  el.style.display = value ? el[vShowOldKey] : 'none'\n}\n\n// SSR vnode transforms, only used when user includes client-oriented render\n// function in SSR\nexport function initVShowForSSR() {\n  vShow.getSSRProps = ({ value }) => {\n    if (!value) {\n      return { style: { display: 'none' } }\n    }\n  }\n}\n", "import { isString, hyphenate, capitalize, isArray } from '@vue/shared'\nimport { camelize, warn } from '@vue/runtime-core'\nimport { vShowOldKey } from '../directives/vShow'\n\ntype Style = string | Record<string, string | string[]> | null\n\nexport function patchStyle(el: Element, prev: Style, next: Style) {\n  const style = (el as HTMLElement).style\n  const isCssString = isString(next)\n  if (next && !isCssString) {\n    if (prev && !isString(prev)) {\n      for (const key in prev) {\n        if (next[key] == null) {\n          setStyle(style, key, '')\n        }\n      }\n    }\n    for (const key in next) {\n      setStyle(style, key, next[key])\n    }\n  } else {\n    const currentDisplay = style.display\n    if (isCssString) {\n      if (prev !== next) {\n        style.cssText = next as string\n      }\n    } else if (prev) {\n      el.removeAttribute('style')\n    }\n    // indicates that the `display` of the element is controlled by `v-show`,\n    // so we always keep the current `display` value regardless of the `style`\n    // value, thus handing over control to `v-show`.\n    if (vShowOldKey in el) {\n      style.display = currentDisplay\n    }\n  }\n}\n\nconst semicolonRE = /[^\\\\];\\s*$/\nconst importantRE = /\\s*!important$/\n\nfunction setStyle(\n  style: CSSStyleDeclaration,\n  name: string,\n  val: string | string[]\n) {\n  if (isArray(val)) {\n    val.forEach(v => setStyle(style, name, v))\n  } else {\n    if (val == null) val = ''\n    if (__DEV__) {\n      if (semicolonRE.test(val)) {\n        warn(\n          `Unexpected semicolon at the end of '${name}' style value: '${val}'`\n        )\n      }\n    }\n    if (name.startsWith('--')) {\n      // custom property definition\n      style.setProperty(name, val)\n    } else {\n      const prefixed = autoPrefix(style, name)\n      if (importantRE.test(val)) {\n        // !important\n        style.setProperty(\n          hyphenate(prefixed),\n          val.replace(importantRE, ''),\n          'important'\n        )\n      } else {\n        style[prefixed as any] = val\n      }\n    }\n  }\n}\n\nconst prefixes = ['Webkit', 'Moz', 'ms']\nconst prefixCache: Record<string, string> = {}\n\nfunction autoPrefix(style: CSSStyleDeclaration, rawName: string): string {\n  const cached = prefixCache[rawName]\n  if (cached) {\n    return cached\n  }\n  let name = camelize(rawName)\n  if (name !== 'filter' && name in style) {\n    return (prefixCache[rawName] = name)\n  }\n  name = capitalize(name)\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefixed = prefixes[i] + name\n    if (prefixed in style) {\n      return (prefixCache[rawName] = prefixed)\n    }\n  }\n  return rawName\n}\n", "import {\n  includeBooleanAttr,\n  isSpecialBooleanAttr,\n  makeMap,\n  NOOP\n} from '@vue/shared'\nimport {\n  compatUtils,\n  ComponentInternalInstance,\n  DeprecationTypes\n} from '@vue/runtime-core'\n\nexport const xlinkNS = 'http://www.w3.org/1999/xlink'\n\nexport function patchAttr(\n  el: Element,\n  key: string,\n  value: any,\n  isSVG: boolean,\n  instance?: ComponentInternalInstance | null\n) {\n  if (isSVG && key.startsWith('xlink:')) {\n    if (value == null) {\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length))\n    } else {\n      el.setAttributeNS(xlinkNS, key, value)\n    }\n  } else {\n    if (__COMPAT__ && compatCoerceAttr(el, key, value, instance)) {\n      return\n    }\n\n    // note we are only checking boolean attributes that don't have a\n    // corresponding dom prop of the same name here.\n    const isBoolean = isSpecialBooleanAttr(key)\n    if (value == null || (isBoolean && !includeBooleanAttr(value))) {\n      el.removeAttribute(key)\n    } else {\n      el.setAttribute(key, isBoolean ? '' : value)\n    }\n  }\n}\n\n// 2.x compat\nconst isEnumeratedAttr = __COMPAT__\n  ? /*#__PURE__*/ makeMap('contenteditable,draggable,spellcheck')\n  : NOOP\n\nexport function compatCoerceAttr(\n  el: Element,\n  key: string,\n  value: unknown,\n  instance: ComponentInternalInstance | null = null\n): boolean {\n  if (isEnumeratedAttr(key)) {\n    const v2CoercedValue =\n      value === null\n        ? 'false'\n        : typeof value !== 'boolean' && value !== undefined\n        ? 'true'\n        : null\n    if (\n      v2CoercedValue &&\n      compatUtils.softAssertCompatEnabled(\n        DeprecationTypes.ATTR_ENUMERATED_COERCION,\n        instance,\n        key,\n        value,\n        v2CoercedValue\n      )\n    ) {\n      el.setAttribute(key, v2CoercedValue)\n      return true\n    }\n  } else if (\n    value === false &&\n    !isSpecialBooleanAttr(key) &&\n    compatUtils.softAssertCompatEnabled(\n      DeprecationTypes.ATTR_FALSE_VALUE,\n      instance,\n      key\n    )\n  ) {\n    el.removeAttribute(key)\n    return true\n  }\n  return false\n}\n", "// __UNSAFE__\n// Reason: potentially setting innerHTML.\n// This can come from explicit usage of v-html or innerHTML as a prop in render\n\nimport { warn, DeprecationTypes, compatUtils } from '@vue/runtime-core'\nimport { includeBooleanAttr } from '@vue/shared'\n\n// functions. The user is responsible for using them with only trusted content.\nexport function patchDOMProp(\n  el: any,\n  key: string,\n  value: any,\n  // the following args are passed only due to potential innerHTML/textContent\n  // overriding existing VNodes, in which case the old tree must be properly\n  // unmounted.\n  prevChildren: any,\n  parentComponent: any,\n  parentSuspense: any,\n  unmountChildren: any\n) {\n  if (key === 'innerHTML' || key === 'textContent') {\n    if (prevChildren) {\n      unmountChildren(prevChildren, parentComponent, parentSuspense)\n    }\n    el[key] = value == null ? '' : value\n    return\n  }\n\n  const tag = el.tagName\n\n  if (\n    key === 'value' &&\n    tag !== 'PROGRESS' &&\n    // custom elements may use _value internally\n    !tag.includes('-')\n  ) {\n    // store value as _value as well since\n    // non-string values will be stringified.\n    el._value = value\n    // #4956: <option> value will fallback to its text content so we need to\n    // compare against its attribute value instead.\n    const oldValue = tag === 'OPTION' ? el.getAttribute('value') : el.value\n    const newValue = value == null ? '' : value\n    if (oldValue !== newValue) {\n      el.value = newValue\n    }\n    if (value == null) {\n      el.removeAttribute(key)\n    }\n    return\n  }\n\n  let needRemove = false\n  if (value === '' || value == null) {\n    const type = typeof el[key]\n    if (type === 'boolean') {\n      // e.g. <select multiple> compiles to { multiple: '' }\n      value = includeBooleanAttr(value)\n    } else if (value == null && type === 'string') {\n      // e.g. <div :id=\"null\">\n      value = ''\n      needRemove = true\n    } else if (type === 'number') {\n      // e.g. <img :width=\"null\">\n      value = 0\n      needRemove = true\n    }\n  } else {\n    if (\n      __COMPAT__ &&\n      value === false &&\n      compatUtils.isCompatEnabled(\n        DeprecationTypes.ATTR_FALSE_VALUE,\n        parentComponent\n      )\n    ) {\n      const type = typeof el[key]\n      if (type === 'string' || type === 'number') {\n        __DEV__ &&\n          compatUtils.warnDeprecation(\n            DeprecationTypes.ATTR_FALSE_VALUE,\n            parentComponent,\n            key\n          )\n        value = type === 'number' ? 0 : ''\n        needRemove = true\n      }\n    }\n  }\n\n  // some properties perform value validation and throw,\n  // some properties has getter, no setter, will error in 'use strict'\n  // eg. <select :type=\"null\"></select> <select :willValidate=\"null\"></select>\n  try {\n    el[key] = value\n  } catch (e: any) {\n    // do not warn if value is auto-coerced from nullish values\n    if (__DEV__ && !needRemove) {\n      warn(\n        `Failed setting prop \"${key}\" on <${tag.toLowerCase()}>: ` +\n          `value ${value} is invalid.`,\n        e\n      )\n    }\n  }\n  needRemove && el.removeAttribute(key)\n}\n", "import { hyphenate, isArray } from '@vue/shared'\nimport {\n  ErrorCodes,\n  ComponentInternalInstance,\n  callWithAsyncErrorHandling\n} from '@vue/runtime-core'\n\ninterface Invoker extends EventListener {\n  value: EventValue\n  attached: number\n}\n\ntype EventValue = Function | Function[]\n\nexport function addEventListener(\n  el: Element,\n  event: string,\n  handler: EventListener,\n  options?: EventListenerOptions\n) {\n  el.addEventListener(event, handler, options)\n}\n\nexport function removeEventListener(\n  el: Element,\n  event: string,\n  handler: EventListener,\n  options?: EventListenerOptions\n) {\n  el.removeEventListener(event, handler, options)\n}\n\nconst veiKey = Symbol('_vei')\n\nexport function patchEvent(\n  el: Element & { [veiKey]?: Record<string, Invoker | undefined> },\n  rawName: string,\n  prevValue: EventValue | null,\n  nextValue: EventValue | null,\n  instance: ComponentInternalInstance | null = null\n) {\n  // vei = vue event invokers\n  const invokers = el[veiKey] || (el[veiKey] = {})\n  const existingInvoker = invokers[rawName]\n  if (nextValue && existingInvoker) {\n    // patch\n    existingInvoker.value = nextValue\n  } else {\n    const [name, options] = parseName(rawName)\n    if (nextValue) {\n      // add\n      const invoker = (invokers[rawName] = createInvoker(nextValue, instance))\n      addEventListener(el, name, invoker, options)\n    } else if (existingInvoker) {\n      // remove\n      removeEventListener(el, name, existingInvoker, options)\n      invokers[rawName] = undefined\n    }\n  }\n}\n\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/\n\nfunction parseName(name: string): [string, EventListenerOptions | undefined] {\n  let options: EventListenerOptions | undefined\n  if (optionsModifierRE.test(name)) {\n    options = {}\n    let m\n    while ((m = name.match(optionsModifierRE))) {\n      name = name.slice(0, name.length - m[0].length)\n      ;(options as any)[m[0].toLowerCase()] = true\n    }\n  }\n  const event = name[2] === ':' ? name.slice(3) : hyphenate(name.slice(2))\n  return [event, options]\n}\n\n// To avoid the overhead of repeatedly calling Date.now(), we cache\n// and use the same timestamp for all event listeners attached in the same tick.\nlet cachedNow: number = 0\nconst p = /*#__PURE__*/ Promise.resolve()\nconst getNow = () =>\n  cachedNow || (p.then(() => (cachedNow = 0)), (cachedNow = Date.now()))\n\nfunction createInvoker(\n  initialValue: EventValue,\n  instance: ComponentInternalInstance | null\n) {\n  const invoker: Invoker = (e: Event & { _vts?: number }) => {\n    // async edge case vuejs/vue#6566\n    // inner click event triggers patch, event handler\n    // attached to outer element during patch, and triggered again. This\n    // happens because browsers fire microtask ticks between event propagation.\n    // this no longer happens for templates in Vue 3, but could still be\n    // theoretically possible for hand-written render functions.\n    // the solution: we save the timestamp when a handler is attached,\n    // and also attach the timestamp to any event that was handled by vue\n    // for the first time (to avoid inconsistent event timestamp implementations\n    // or events fired from iframes, e.g. #2513)\n    // The handler would only fire if the event passed to it was fired\n    // AFTER it was attached.\n    if (!e._vts) {\n      e._vts = Date.now()\n    } else if (e._vts <= invoker.attached) {\n      return\n    }\n    callWithAsyncErrorHandling(\n      patchStopImmediatePropagation(e, invoker.value),\n      instance,\n      ErrorCodes.NATIVE_EVENT_HANDLER,\n      [e]\n    )\n  }\n  invoker.value = initialValue\n  invoker.attached = getNow()\n  return invoker\n}\n\nfunction patchStopImmediatePropagation(\n  e: Event,\n  value: EventValue\n): EventValue {\n  if (isArray(value)) {\n    const originalStop = e.stopImmediatePropagation\n    e.stopImmediatePropagation = () => {\n      originalStop.call(e)\n      ;(e as any)._stopped = true\n    }\n    return value.map(fn => (e: Event) => !(e as any)._stopped && fn && fn(e))\n  } else {\n    return value\n  }\n}\n", "import { patchClass } from './modules/class'\nimport { patchStyle } from './modules/style'\nimport { patchAttr } from './modules/attrs'\nimport { patchDOMProp } from './modules/props'\nimport { patchEvent } from './modules/events'\nimport { isOn, isString, isFunction, isModelListener } from '@vue/shared'\nimport { RendererOptions } from '@vue/runtime-core'\n\nconst nativeOnRE = /^on[a-z]/\n\ntype DOMRendererOptions = RendererOptions<Node, Element>\n\nexport const patchProp: DOMRendererOptions['patchProp'] = (\n  el,\n  key,\n  prevValue,\n  nextValue,\n  isSVG = false,\n  prevChildren,\n  parentComponent,\n  parentSuspense,\n  unmountChildren\n) => {\n  if (key === 'class') {\n    patchClass(el, nextValue, isSVG)\n  } else if (key === 'style') {\n    patchStyle(el, prevValue, nextValue)\n  } else if (isOn(key)) {\n    // ignore v-model listeners\n    if (!isModelListener(key)) {\n      patchEvent(el, key, prevValue, nextValue, parentComponent)\n    }\n  } else if (\n    key[0] === '.'\n      ? ((key = key.slice(1)), true)\n      : key[0] === '^'\n      ? ((key = key.slice(1)), false)\n      : shouldSetAsProp(el, key, nextValue, isSVG)\n  ) {\n    patchDOMProp(\n      el,\n      key,\n      nextValue,\n      prevChildren,\n      parentComponent,\n      parentSuspense,\n      unmountChildren\n    )\n  } else {\n    // special case for <input v-model type=\"checkbox\"> with\n    // :true-value & :false-value\n    // store value as dom properties since non-string values will be\n    // stringified.\n    if (key === 'true-value') {\n      ;(el as any)._trueValue = nextValue\n    } else if (key === 'false-value') {\n      ;(el as any)._falseValue = nextValue\n    }\n    patchAttr(el, key, nextValue, isSVG, parentComponent)\n  }\n}\n\nfunction shouldSetAsProp(\n  el: Element,\n  key: string,\n  value: unknown,\n  isSVG: boolean\n) {\n  if (isSVG) {\n    // most keys must be set as attribute on svg elements to work\n    // ...except innerHTML & textContent\n    if (key === 'innerHTML' || key === 'textContent') {\n      return true\n    }\n    // or native onclick with function values\n    if (key in el && nativeOnRE.test(key) && isFunction(value)) {\n      return true\n    }\n    return false\n  }\n\n  // these are enumerated attrs, however their corresponding DOM properties\n  // are actually booleans - this leads to setting it with a string \"false\"\n  // value leading it to be coerced to `true`, so we need to always treat\n  // them as attributes.\n  // Note that `contentEditable` doesn't have this problem: its DOM\n  // property is also enumerated string values.\n  if (key === 'spellcheck' || key === 'draggable' || key === 'translate') {\n    return false\n  }\n\n  // #1787, #2840 form property on form elements is readonly and must be set as\n  // attribute.\n  if (key === 'form') {\n    return false\n  }\n\n  // #1526 <input list> must be set as attribute\n  if (key === 'list' && el.tagName === 'INPUT') {\n    return false\n  }\n\n  // #2766 <textarea type> must be set as attribute\n  if (key === 'type' && el.tagName === 'TEXTAREA') {\n    return false\n  }\n\n  // native onclick with string value, must be set as attribute\n  if (nativeOnRE.test(key) && isString(value)) {\n    return false\n  }\n\n  return key in el\n}\n", "import {\n  ComponentOptionsMixin,\n  ComponentOptionsWithArrayProps,\n  ComponentOptionsWithObjectProps,\n  ComponentOptionsWithoutProps,\n  ComponentPropsOptions,\n  ComponentPublicInstance,\n  ComputedOptions,\n  EmitsOptions,\n  MethodOptions,\n  RenderFunction,\n  SetupContext,\n  ComponentInternalInstance,\n  VNode,\n  RootHydrateFunction,\n  ExtractPropTypes,\n  createVNode,\n  defineComponent,\n  nextTick,\n  warn,\n  ConcreteComponent,\n  ComponentOptions,\n  ComponentInjectOptions,\n  SlotsType\n} from '@vue/runtime-core'\nimport { camelize, extend, hyphenate, isArray, toNumber } from '@vue/shared'\nimport { hydrate, render } from '.'\n\nexport type VueElementConstructor<P = {}> = {\n  new (initialProps?: Record<string, any>): VueElement & P\n}\n\n// defineCustomElement provides the same type inference as defineComponent\n// so most of the following overloads should be kept in sync w/ defineComponent.\n\n// overload 1: direct setup function\nexport function defineCustomElement<Props, RawBindings = object>(\n  setup: (\n    props: Readonly<Props>,\n    ctx: SetupContext\n  ) => RawBindings | RenderFunction\n): VueElementConstructor<Props>\n\n// overload 2: object format with no props\nexport function defineCustomElement<\n  Props = {},\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = EmitsOptions,\n  EE extends string = string,\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  S extends SlotsType = {}\n>(\n  options: ComponentOptionsWithoutProps<\n    Props,\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    EE,\n    I,\n    II,\n    S\n  > & { styles?: string[] }\n): VueElementConstructor<Props>\n\n// overload 3: object format with array props declaration\nexport function defineCustomElement<\n  PropNames extends string,\n  RawBindings,\n  D,\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = Record<string, any>,\n  EE extends string = string,\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  S extends SlotsType = {}\n>(\n  options: ComponentOptionsWithArrayProps<\n    PropNames,\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    EE,\n    I,\n    II,\n    S\n  > & { styles?: string[] }\n): VueElementConstructor<{ [K in PropNames]: any }>\n\n// overload 4: object format with object props declaration\nexport function defineCustomElement<\n  PropsOptions extends Readonly<ComponentPropsOptions>,\n  RawBindings,\n  D,\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = Record<string, any>,\n  EE extends string = string,\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  S extends SlotsType = {}\n>(\n  options: ComponentOptionsWithObjectProps<\n    PropsOptions,\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    EE,\n    I,\n    II,\n    S\n  > & { styles?: string[] }\n): VueElementConstructor<ExtractPropTypes<PropsOptions>>\n\n// overload 5: defining a custom element from the returned value of\n// `defineComponent`\nexport function defineCustomElement(options: {\n  new (...args: any[]): ComponentPublicInstance\n}): VueElementConstructor\n\n/*! #__NO_SIDE_EFFECTS__ */\nexport function defineCustomElement(\n  options: any,\n  hydrate?: RootHydrateFunction\n): VueElementConstructor {\n  const Comp = defineComponent(options) as any\n  class VueCustomElement extends VueElement {\n    static def = Comp\n    constructor(initialProps?: Record<string, any>) {\n      super(Comp, initialProps, hydrate)\n    }\n  }\n\n  return VueCustomElement\n}\n\n/*! #__NO_SIDE_EFFECTS__ */\nexport const defineSSRCustomElement = ((options: any) => {\n  // @ts-ignore\n  return defineCustomElement(options, hydrate)\n}) as typeof defineCustomElement\n\nconst BaseClass = (\n  typeof HTMLElement !== 'undefined' ? HTMLElement : class {}\n) as typeof HTMLElement\n\ntype InnerComponentDef = ConcreteComponent & { styles?: string[] }\n\nexport class VueElement extends BaseClass {\n  /**\n   * @internal\n   */\n  _instance: ComponentInternalInstance | null = null\n\n  private _connected = false\n  private _resolved = false\n  private _numberProps: Record<string, true> | null = null\n  private _styles?: HTMLStyleElement[]\n  private _ob?: MutationObserver | null = null\n  constructor(\n    private _def: InnerComponentDef,\n    private _props: Record<string, any> = {},\n    hydrate?: RootHydrateFunction\n  ) {\n    super()\n    if (this.shadowRoot && hydrate) {\n      hydrate(this._createVNode(), this.shadowRoot)\n    } else {\n      if (__DEV__ && this.shadowRoot) {\n        warn(\n          `Custom element has pre-rendered declarative shadow root but is not ` +\n            `defined as hydratable. Use \\`defineSSRCustomElement\\`.`\n        )\n      }\n      this.attachShadow({ mode: 'open' })\n      if (!(this._def as ComponentOptions).__asyncLoader) {\n        // for sync component defs we can immediately resolve props\n        this._resolveProps(this._def)\n      }\n    }\n  }\n\n  connectedCallback() {\n    this._connected = true\n    if (!this._instance) {\n      if (this._resolved) {\n        this._update()\n      } else {\n        this._resolveDef()\n      }\n    }\n  }\n\n  disconnectedCallback() {\n    this._connected = false\n    if (this._ob) {\n      this._ob.disconnect()\n      this._ob = null\n    }\n    nextTick(() => {\n      if (!this._connected) {\n        render(null, this.shadowRoot!)\n        this._instance = null\n      }\n    })\n  }\n\n  /**\n   * resolve inner component definition (handle possible async component)\n   */\n  private _resolveDef() {\n    this._resolved = true\n\n    // set initial attrs\n    for (let i = 0; i < this.attributes.length; i++) {\n      this._setAttr(this.attributes[i].name)\n    }\n\n    // watch future attr changes\n    this._ob = new MutationObserver(mutations => {\n      for (const m of mutations) {\n        this._setAttr(m.attributeName!)\n      }\n    })\n\n    this._ob.observe(this, { attributes: true })\n\n    const resolve = (def: InnerComponentDef, isAsync = false) => {\n      const { props, styles } = def\n\n      // cast Number-type props set before resolve\n      let numberProps\n      if (props && !isArray(props)) {\n        for (const key in props) {\n          const opt = props[key]\n          if (opt === Number || (opt && opt.type === Number)) {\n            if (key in this._props) {\n              this._props[key] = toNumber(this._props[key])\n            }\n            ;(numberProps || (numberProps = Object.create(null)))[\n              camelize(key)\n            ] = true\n          }\n        }\n      }\n      this._numberProps = numberProps\n\n      if (isAsync) {\n        // defining getter/setters on prototype\n        // for sync defs, this already happened in the constructor\n        this._resolveProps(def)\n      }\n\n      // apply CSS\n      this._applyStyles(styles)\n\n      // initial render\n      this._update()\n    }\n\n    const asyncDef = (this._def as ComponentOptions).__asyncLoader\n    if (asyncDef) {\n      asyncDef().then(def => resolve(def, true))\n    } else {\n      resolve(this._def)\n    }\n  }\n\n  private _resolveProps(def: InnerComponentDef) {\n    const { props } = def\n    const declaredPropKeys = isArray(props) ? props : Object.keys(props || {})\n\n    // check if there are props set pre-upgrade or connect\n    for (const key of Object.keys(this)) {\n      if (key[0] !== '_' && declaredPropKeys.includes(key)) {\n        this._setProp(key, this[key as keyof this], true, false)\n      }\n    }\n\n    // defining getter/setters on prototype\n    for (const key of declaredPropKeys.map(camelize)) {\n      Object.defineProperty(this, key, {\n        get() {\n          return this._getProp(key)\n        },\n        set(val) {\n          this._setProp(key, val)\n        }\n      })\n    }\n  }\n\n  protected _setAttr(key: string) {\n    let value = this.getAttribute(key)\n    const camelKey = camelize(key)\n    if (this._numberProps && this._numberProps[camelKey]) {\n      value = toNumber(value)\n    }\n    this._setProp(camelKey, value, false)\n  }\n\n  /**\n   * @internal\n   */\n  protected _getProp(key: string) {\n    return this._props[key]\n  }\n\n  /**\n   * @internal\n   */\n  protected _setProp(\n    key: string,\n    val: any,\n    shouldReflect = true,\n    shouldUpdate = true\n  ) {\n    if (val !== this._props[key]) {\n      this._props[key] = val\n      if (shouldUpdate && this._instance) {\n        this._update()\n      }\n      // reflect\n      if (shouldReflect) {\n        if (val === true) {\n          this.setAttribute(hyphenate(key), '')\n        } else if (typeof val === 'string' || typeof val === 'number') {\n          this.setAttribute(hyphenate(key), val + '')\n        } else if (!val) {\n          this.removeAttribute(hyphenate(key))\n        }\n      }\n    }\n  }\n\n  private _update() {\n    render(this._createVNode(), this.shadowRoot!)\n  }\n\n  private _createVNode(): VNode<any, any> {\n    const vnode = createVNode(this._def, extend({}, this._props))\n    if (!this._instance) {\n      vnode.ce = instance => {\n        this._instance = instance\n        instance.isCE = true\n        // HMR\n        if (__DEV__) {\n          instance.ceReload = newStyles => {\n            // always reset styles\n            if (this._styles) {\n              this._styles.forEach(s => this.shadowRoot!.removeChild(s))\n              this._styles.length = 0\n            }\n            this._applyStyles(newStyles)\n            this._instance = null\n            this._update()\n          }\n        }\n\n        const dispatch = (event: string, args: any[]) => {\n          this.dispatchEvent(\n            new CustomEvent(event, {\n              detail: args\n            })\n          )\n        }\n\n        // intercept emit\n        instance.emit = (event: string, ...args: any[]) => {\n          // dispatch both the raw and hyphenated versions of an event\n          // to match Vue behavior\n          dispatch(event, args)\n          if (hyphenate(event) !== event) {\n            dispatch(hyphenate(event), args)\n          }\n        }\n\n        // locate nearest Vue custom element parent for provide/inject\n        let parent: Node | null = this\n        while (\n          (parent =\n            parent && (parent.parentNode || (parent as ShadowRoot).host))\n        ) {\n          if (parent instanceof VueElement) {\n            instance.parent = parent._instance\n            instance.provides = parent._instance!.provides\n            break\n          }\n        }\n      }\n    }\n    return vnode\n  }\n\n  private _applyStyles(styles: string[] | undefined) {\n    if (styles) {\n      styles.forEach(css => {\n        const s = document.createElement('style')\n        s.textContent = css\n        this.shadowRoot!.appendChild(s)\n        // record for HMR\n        if (__DEV__) {\n          ;(this._styles || (this._styles = [])).push(s)\n        }\n      })\n    }\n  }\n}\n", "import { warn, getCurrentInstance } from '@vue/runtime-core'\nimport { EMPTY_OBJ } from '@vue/shared'\n\nexport function useCssModule(name = '$style'): Record<string, string> {\n  /* istanbul ignore else */\n  if (!__GLOBAL__) {\n    const instance = getCurrentInstance()!\n    if (!instance) {\n      __DEV__ && warn(`useCssModule must be called inside setup()`)\n      return EMPTY_OBJ\n    }\n    const modules = instance.type.__cssModules\n    if (!modules) {\n      __DEV__ && warn(`Current instance does not have CSS modules injected.`)\n      return EMPTY_OBJ\n    }\n    const mod = modules[name]\n    if (!mod) {\n      __DEV__ &&\n        warn(`Current instance does not have CSS module named \"${name}\".`)\n      return EMPTY_OBJ\n    }\n    return mod as Record<string, string>\n  } else {\n    if (__DEV__) {\n      warn(`useCssModule() is not supported in the global build.`)\n    }\n    return EMPTY_OBJ\n  }\n}\n", "import {\n  getCurrentInstance,\n  warn,\n  VNode,\n  Fragment,\n  Static,\n  watchPostEffect,\n  onMounted,\n  onUnmounted\n} from '@vue/runtime-core'\nimport { ShapeFlags } from '@vue/shared'\n\n/**\n * Runtime helper for SFC's CSS variable injection feature.\n * @private\n */\nexport function useCssVars(getter: (ctx: any) => Record<string, string>) {\n  if (!__BROWSER__ && !__TEST__) return\n\n  const instance = getCurrentInstance()\n  /* istanbul ignore next */\n  if (!instance) {\n    __DEV__ &&\n      warn(`useCssVars is called without current active component instance.`)\n    return\n  }\n\n  const updateTeleports = (instance.ut = (vars = getter(instance.proxy)) => {\n    Array.from(\n      document.querySelectorAll(`[data-v-owner=\"${instance.uid}\"]`)\n    ).forEach(node => setVarsOnNode(node, vars))\n  })\n\n  const setVars = () => {\n    const vars = getter(instance.proxy)\n    setVarsOnVNode(instance.subTree, vars)\n    updateTeleports(vars)\n  }\n\n  watchPostEffect(setVars)\n\n  onMounted(() => {\n    const ob = new MutationObserver(setVars)\n    ob.observe(instance.subTree.el!.parentNode, { childList: true })\n    onUnmounted(() => ob.disconnect())\n  })\n}\n\nfunction setVarsOnVNode(vnode: VNode, vars: Record<string, string>) {\n  if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\n    const suspense = vnode.suspense!\n    vnode = suspense.activeBranch!\n    if (suspense.pendingBranch && !suspense.isHydrating) {\n      suspense.effects.push(() => {\n        setVarsOnVNode(suspense.activeBranch!, vars)\n      })\n    }\n  }\n\n  // drill down HOCs until it's a non-component vnode\n  while (vnode.component) {\n    vnode = vnode.component.subTree\n  }\n\n  if (vnode.shapeFlag & ShapeFlags.ELEMENT && vnode.el) {\n    setVarsOnNode(vnode.el as Node, vars)\n  } else if (vnode.type === Fragment) {\n    ;(vnode.children as VNode[]).forEach(c => setVarsOnVNode(c, vars))\n  } else if (vnode.type === Static) {\n    let { el, anchor } = vnode\n    while (el) {\n      setVarsOnNode(el as Node, vars)\n      if (el === anchor) break\n      el = el.nextSibling\n    }\n  }\n}\n\nfunction setVarsOnNode(el: Node, vars: Record<string, string>) {\n  if (el.nodeType === 1) {\n    const style = (el as HTMLElement).style\n    for (const key in vars) {\n      style.setProperty(`--${key}`, vars[key])\n    }\n  }\n}\n", "import {\n  TransitionProps,\n  addTransitionClass,\n  removeTransitionClass,\n  ElementWithTransition,\n  getTransitionInfo,\n  resolveTransitionProps,\n  TransitionPropsValidators,\n  forceReflow,\n  vtcKey\n} from './Transition'\nimport {\n  Fragment,\n  VNode,\n  warn,\n  resolveTransitionHooks,\n  useTransitionState,\n  getTransitionRawChildren,\n  getCurrentInstance,\n  setTransitionHooks,\n  createVNode,\n  onUpdated,\n  SetupContext,\n  toRaw,\n  compatUtils,\n  DeprecationTypes,\n  ComponentOptions\n} from '@vue/runtime-core'\nimport { extend } from '@vue/shared'\n\nconst positionMap = new WeakMap<VNode, DOMRect>()\nconst newPositionMap = new WeakMap<VNode, DOMRect>()\nconst moveCbKey = Symbol('_moveCb')\nconst enterCbKey = Symbol('_enterCb')\nexport type TransitionGroupProps = Omit<TransitionProps, 'mode'> & {\n  tag?: string\n  moveClass?: string\n}\n\nconst TransitionGroupImpl: ComponentOptions = {\n  name: 'TransitionGroup',\n\n  props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\n    tag: String,\n    moveClass: String\n  }),\n\n  setup(props: TransitionGroupProps, { slots }: SetupContext) {\n    const instance = getCurrentInstance()!\n    const state = useTransitionState()\n    let prevChildren: VNode[]\n    let children: VNode[]\n\n    onUpdated(() => {\n      // children is guaranteed to exist after initial render\n      if (!prevChildren.length) {\n        return\n      }\n      const moveClass = props.moveClass || `${props.name || 'v'}-move`\n\n      if (\n        !hasCSSTransform(\n          prevChildren[0].el as ElementWithTransition,\n          instance.vnode.el as Node,\n          moveClass\n        )\n      ) {\n        return\n      }\n\n      // we divide the work into three loops to avoid mixing DOM reads and writes\n      // in each iteration - which helps prevent layout thrashing.\n      prevChildren.forEach(callPendingCbs)\n      prevChildren.forEach(recordPosition)\n      const movedChildren = prevChildren.filter(applyTranslation)\n\n      // force reflow to put everything in position\n      forceReflow()\n\n      movedChildren.forEach(c => {\n        const el = c.el as ElementWithTransition\n        const style = el.style\n        addTransitionClass(el, moveClass)\n        style.transform = style.webkitTransform = style.transitionDuration = ''\n        const cb = ((el as any)[moveCbKey] = (e: TransitionEvent) => {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener('transitionend', cb)\n            ;(el as any)[moveCbKey] = null\n            removeTransitionClass(el, moveClass)\n          }\n        })\n        el.addEventListener('transitionend', cb)\n      })\n    })\n\n    return () => {\n      const rawProps = toRaw(props)\n      const cssTransitionProps = resolveTransitionProps(rawProps)\n      let tag = rawProps.tag || Fragment\n\n      if (\n        __COMPAT__ &&\n        !rawProps.tag &&\n        compatUtils.checkCompatEnabled(\n          DeprecationTypes.TRANSITION_GROUP_ROOT,\n          instance.parent\n        )\n      ) {\n        tag = 'span'\n      }\n\n      prevChildren = children\n      children = slots.default ? getTransitionRawChildren(slots.default()) : []\n\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i]\n        if (child.key != null) {\n          setTransitionHooks(\n            child,\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\n          )\n        } else if (__DEV__) {\n          warn(`<TransitionGroup> children must be keyed.`)\n        }\n      }\n\n      if (prevChildren) {\n        for (let i = 0; i < prevChildren.length; i++) {\n          const child = prevChildren[i]\n          setTransitionHooks(\n            child,\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\n          )\n          positionMap.set(child, (child.el as Element).getBoundingClientRect())\n        }\n      }\n\n      return createVNode(tag, null, children)\n    }\n  }\n}\n\nif (__COMPAT__) {\n  TransitionGroupImpl.__isBuiltIn = true\n}\n\n/**\n * TransitionGroup does not support \"mode\" so we need to remove it from the\n * props declarations, but direct delete operation is considered a side effect\n * and will make the entire transition feature non-tree-shakeable, so we do it\n * in a function and mark the function's invocation as pure.\n */\nconst removeMode = (props: any) => delete props.mode\n/*#__PURE__*/ removeMode(TransitionGroupImpl.props)\n\nexport const TransitionGroup = TransitionGroupImpl as unknown as {\n  new (): {\n    $props: TransitionGroupProps\n  }\n}\n\nfunction callPendingCbs(c: VNode) {\n  const el = c.el as any\n  if (el[moveCbKey]) {\n    el[moveCbKey]()\n  }\n  if (el[enterCbKey]) {\n    el[enterCbKey]()\n  }\n}\n\nfunction recordPosition(c: VNode) {\n  newPositionMap.set(c, (c.el as Element).getBoundingClientRect())\n}\n\nfunction applyTranslation(c: VNode): VNode | undefined {\n  const oldPos = positionMap.get(c)!\n  const newPos = newPositionMap.get(c)!\n  const dx = oldPos.left - newPos.left\n  const dy = oldPos.top - newPos.top\n  if (dx || dy) {\n    const s = (c.el as HTMLElement).style\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`\n    s.transitionDuration = '0s'\n    return c\n  }\n}\n\nfunction hasCSSTransform(\n  el: ElementWithTransition,\n  root: Node,\n  moveClass: string\n): boolean {\n  // Detect whether an element with the move class applied has\n  // CSS transitions. Since the element may be inside an entering\n  // transition at this very moment, we make a clone of it and remove\n  // all other transition classes applied to ensure only the move class\n  // is applied.\n  const clone = el.cloneNode() as HTMLElement\n  const _vtc = el[vtcKey]\n  if (_vtc) {\n    _vtc.forEach(cls => {\n      cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c))\n    })\n  }\n  moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c))\n  clone.style.display = 'none'\n  const container = (\n    root.nodeType === 1 ? root : root.parentNode\n  ) as HTMLElement\n  container.appendChild(clone)\n  const { hasTransform } = getTransitionInfo(clone)\n  container.removeChild(clone)\n  return hasTransform\n}\n", "import {\n  ObjectDirective,\n  VNode,\n  DirectiveHook,\n  DirectiveBinding,\n  warn\n} from '@vue/runtime-core'\nimport { addEventListener } from '../modules/events'\nimport {\n  isArray,\n  looseEqual,\n  looseIndexOf,\n  invokeArrayFns,\n  looseToNumber,\n  isSet\n} from '@vue/shared'\n\ntype AssignerFn = (value: any) => void\n\nconst getModelAssigner = (vnode: VNode): AssignerFn => {\n  const fn =\n    vnode.props!['onUpdate:modelValue'] ||\n    (__COMPAT__ && vnode.props!['onModelCompat:input'])\n  return isArray(fn) ? value => invokeArrayFns(fn, value) : fn\n}\n\nfunction onCompositionStart(e: Event) {\n  ;(e.target as any).composing = true\n}\n\nfunction onCompositionEnd(e: Event) {\n  const target = e.target as any\n  if (target.composing) {\n    target.composing = false\n    target.dispatchEvent(new Event('input'))\n  }\n}\n\nconst assignKey = Symbol('_assign')\n\ntype ModelDirective<T> = ObjectDirective<T & { [assignKey]: AssignerFn }>\n\n// We are exporting the v-model runtime directly as vnode hooks so that it can\n// be tree-shaken in case v-model is never used.\nexport const vModelText: ModelDirective<\n  HTMLInputElement | HTMLTextAreaElement\n> = {\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\n    el[assignKey] = getModelAssigner(vnode)\n    const castToNumber =\n      number || (vnode.props && vnode.props.type === 'number')\n    addEventListener(el, lazy ? 'change' : 'input', e => {\n      if ((e.target as any).composing) return\n      let domValue: string | number = el.value\n      if (trim) {\n        domValue = domValue.trim()\n      }\n      if (castToNumber) {\n        domValue = looseToNumber(domValue)\n      }\n      el[assignKey](domValue)\n    })\n    if (trim) {\n      addEventListener(el, 'change', () => {\n        el.value = el.value.trim()\n      })\n    }\n    if (!lazy) {\n      addEventListener(el, 'compositionstart', onCompositionStart)\n      addEventListener(el, 'compositionend', onCompositionEnd)\n      // Safari < 10.2 & UIWebView doesn't fire compositionend when\n      // switching focus before confirming composition choice\n      // this also fixes the issue where some browsers e.g. iOS Chrome\n      // fires \"change\" instead of \"input\" on autocomplete.\n      addEventListener(el, 'change', onCompositionEnd)\n    }\n  },\n  // set value on mounted so it's after min/max for type=\"range\"\n  mounted(el, { value }) {\n    el.value = value == null ? '' : value\n  },\n  beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\n    el[assignKey] = getModelAssigner(vnode)\n    // avoid clearing unresolved text. #2302\n    if ((el as any).composing) return\n    if (document.activeElement === el && el.type !== 'range') {\n      if (lazy) {\n        return\n      }\n      if (trim && el.value.trim() === value) {\n        return\n      }\n      if (\n        (number || el.type === 'number') &&\n        looseToNumber(el.value) === value\n      ) {\n        return\n      }\n    }\n    const newValue = value == null ? '' : value\n    if (el.value !== newValue) {\n      el.value = newValue\n    }\n  }\n}\n\nexport const vModelCheckbox: ModelDirective<HTMLInputElement> = {\n  // #4096 array checkboxes need to be deep traversed\n  deep: true,\n  created(el, _, vnode) {\n    el[assignKey] = getModelAssigner(vnode)\n    addEventListener(el, 'change', () => {\n      const modelValue = (el as any)._modelValue\n      const elementValue = getValue(el)\n      const checked = el.checked\n      const assign = el[assignKey]\n      if (isArray(modelValue)) {\n        const index = looseIndexOf(modelValue, elementValue)\n        const found = index !== -1\n        if (checked && !found) {\n          assign(modelValue.concat(elementValue))\n        } else if (!checked && found) {\n          const filtered = [...modelValue]\n          filtered.splice(index, 1)\n          assign(filtered)\n        }\n      } else if (isSet(modelValue)) {\n        const cloned = new Set(modelValue)\n        if (checked) {\n          cloned.add(elementValue)\n        } else {\n          cloned.delete(elementValue)\n        }\n        assign(cloned)\n      } else {\n        assign(getCheckboxValue(el, checked))\n      }\n    })\n  },\n  // set initial checked on mount to wait for true-value/false-value\n  mounted: setChecked,\n  beforeUpdate(el, binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode)\n    setChecked(el, binding, vnode)\n  }\n}\n\nfunction setChecked(\n  el: HTMLInputElement,\n  { value, oldValue }: DirectiveBinding,\n  vnode: VNode\n) {\n  // store the v-model value on the element so it can be accessed by the\n  // change listener.\n  ;(el as any)._modelValue = value\n  if (isArray(value)) {\n    el.checked = looseIndexOf(value, vnode.props!.value) > -1\n  } else if (isSet(value)) {\n    el.checked = value.has(vnode.props!.value)\n  } else if (value !== oldValue) {\n    el.checked = looseEqual(value, getCheckboxValue(el, true))\n  }\n}\n\nexport const vModelRadio: ModelDirective<HTMLInputElement> = {\n  created(el, { value }, vnode) {\n    el.checked = looseEqual(value, vnode.props!.value)\n    el[assignKey] = getModelAssigner(vnode)\n    addEventListener(el, 'change', () => {\n      el[assignKey](getValue(el))\n    })\n  },\n  beforeUpdate(el, { value, oldValue }, vnode) {\n    el[assignKey] = getModelAssigner(vnode)\n    if (value !== oldValue) {\n      el.checked = looseEqual(value, vnode.props!.value)\n    }\n  }\n}\n\nexport const vModelSelect: ModelDirective<HTMLSelectElement> = {\n  // <select multiple> value need to be deep traversed\n  deep: true,\n  created(el, { value, modifiers: { number } }, vnode) {\n    const isSetModel = isSet(value)\n    addEventListener(el, 'change', () => {\n      const selectedVal = Array.prototype.filter\n        .call(el.options, (o: HTMLOptionElement) => o.selected)\n        .map((o: HTMLOptionElement) =>\n          number ? looseToNumber(getValue(o)) : getValue(o)\n        )\n      el[assignKey](\n        el.multiple\n          ? isSetModel\n            ? new Set(selectedVal)\n            : selectedVal\n          : selectedVal[0]\n      )\n    })\n    el[assignKey] = getModelAssigner(vnode)\n  },\n  // set value in mounted & updated because <select> relies on its children\n  // <option>s.\n  mounted(el, { value }) {\n    setSelected(el, value)\n  },\n  beforeUpdate(el, _binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode)\n  },\n  updated(el, { value }) {\n    setSelected(el, value)\n  }\n}\n\nfunction setSelected(el: HTMLSelectElement, value: any) {\n  const isMultiple = el.multiple\n  if (isMultiple && !isArray(value) && !isSet(value)) {\n    __DEV__ &&\n      warn(\n        `<select multiple v-model> expects an Array or Set value for its binding, ` +\n          `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\n      )\n    return\n  }\n  for (let i = 0, l = el.options.length; i < l; i++) {\n    const option = el.options[i]\n    const optionValue = getValue(option)\n    if (isMultiple) {\n      if (isArray(value)) {\n        option.selected = looseIndexOf(value, optionValue) > -1\n      } else {\n        option.selected = value.has(optionValue)\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) el.selectedIndex = i\n        return\n      }\n    }\n  }\n  if (!isMultiple && el.selectedIndex !== -1) {\n    el.selectedIndex = -1\n  }\n}\n\n// retrieve raw value set via :value bindings\nfunction getValue(el: HTMLOptionElement | HTMLInputElement) {\n  return '_value' in el ? (el as any)._value : el.value\n}\n\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\nfunction getCheckboxValue(\n  el: HTMLInputElement & { _trueValue?: any; _falseValue?: any },\n  checked: boolean\n) {\n  const key = checked ? '_trueValue' : '_falseValue'\n  return key in el ? el[key] : checked\n}\n\nexport const vModelDynamic: ObjectDirective<\n  HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\n> = {\n  created(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, 'created')\n  },\n  mounted(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, 'mounted')\n  },\n  beforeUpdate(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate')\n  },\n  updated(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, 'updated')\n  }\n}\n\nfunction resolveDynamicModel(tagName: string, type: string | undefined) {\n  switch (tagName) {\n    case 'SELECT':\n      return vModelSelect\n    case 'TEXTAREA':\n      return vModelText\n    default:\n      switch (type) {\n        case 'checkbox':\n          return vModelCheckbox\n        case 'radio':\n          return vModelRadio\n        default:\n          return vModelText\n      }\n  }\n}\n\nfunction callModelHook(\n  el: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement,\n  binding: DirectiveBinding,\n  vnode: VNode,\n  prevVNode: VNode | null,\n  hook: keyof ObjectDirective\n) {\n  const modelToUse = resolveDynamicModel(\n    el.tagName,\n    vnode.props && vnode.props.type\n  )\n  const fn = modelToUse[hook] as DirectiveHook\n  fn && fn(el, binding, vnode, prevVNode)\n}\n\n// SSR vnode transforms, only used when user includes client-oriented render\n// function in SSR\nexport function initVModelForSSR() {\n  vModelText.getSSRProps = ({ value }) => ({ value })\n\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\n      return { checked: true }\n    }\n  }\n\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\n    if (isArray(value)) {\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\n        return { checked: true }\n      }\n    } else if (isSet(value)) {\n      if (vnode.props && value.has(vnode.props.value)) {\n        return { checked: true }\n      }\n    } else if (value) {\n      return { checked: true }\n    }\n  }\n\n  vModelDynamic.getSSRProps = (binding, vnode) => {\n    if (typeof vnode.type !== 'string') {\n      return\n    }\n    const modelToUse = resolveDynamicModel(\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\n      vnode.type.toUpperCase(),\n      vnode.props && vnode.props.type\n    )\n    if (modelToUse.getSSRProps) {\n      return modelToUse.getSSRProps(binding, vnode)\n    }\n  }\n}\n", "import {\n  getCurrentInstance,\n  DeprecationTypes,\n  LegacyConfig,\n  compatUtils,\n  ComponentInternalInstance\n} from '@vue/runtime-core'\nimport { hyphenate, isArray } from '@vue/shared'\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta']\n\ntype KeyedEvent = KeyboardEvent | MouseEvent | TouchEvent\n\nconst modifierGuards: Record<\n  string,\n  (e: Event, modifiers: string[]) => void | boolean\n> = {\n  stop: e => e.stopPropagation(),\n  prevent: e => e.preventDefault(),\n  self: e => e.target !== e.currentTarget,\n  ctrl: e => !(e as KeyedEvent).ctrlKey,\n  shift: e => !(e as KeyedEvent).shiftKey,\n  alt: e => !(e as KeyedEvent).altKey,\n  meta: e => !(e as KeyedEvent).metaKey,\n  left: e => 'button' in e && (e as MouseEvent).button !== 0,\n  middle: e => 'button' in e && (e as MouseEvent).button !== 1,\n  right: e => 'button' in e && (e as MouseEvent).button !== 2,\n  exact: (e, modifiers) =>\n    systemModifiers.some(m => (e as any)[`${m}Key`] && !modifiers.includes(m))\n}\n\n/**\n * @private\n */\nexport const withModifiers = (fn: Function, modifiers: string[]) => {\n  return (event: Event, ...args: unknown[]) => {\n    for (let i = 0; i < modifiers.length; i++) {\n      const guard = modifierGuards[modifiers[i]]\n      if (guard && guard(event, modifiers)) return\n    }\n    return fn(event, ...args)\n  }\n}\n\n// Kept for 2.x compat.\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\nconst keyNames: Record<string, string | string[]> = {\n  esc: 'escape',\n  space: ' ',\n  up: 'arrow-up',\n  left: 'arrow-left',\n  right: 'arrow-right',\n  down: 'arrow-down',\n  delete: 'backspace'\n}\n\n/**\n * @private\n */\nexport const withKeys = (fn: Function, modifiers: string[]) => {\n  let globalKeyCodes: LegacyConfig['keyCodes']\n  let instance: ComponentInternalInstance | null = null\n  if (__COMPAT__) {\n    instance = getCurrentInstance()\n    if (\n      compatUtils.isCompatEnabled(DeprecationTypes.CONFIG_KEY_CODES, instance)\n    ) {\n      if (instance) {\n        globalKeyCodes = (instance.appContext.config as LegacyConfig).keyCodes\n      }\n    }\n    if (__DEV__ && modifiers.some(m => /^\\d+$/.test(m))) {\n      compatUtils.warnDeprecation(\n        DeprecationTypes.V_ON_KEYCODE_MODIFIER,\n        instance\n      )\n    }\n  }\n\n  return (event: KeyboardEvent) => {\n    if (!('key' in event)) {\n      return\n    }\n\n    const eventKey = hyphenate(event.key)\n    if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\n      return fn(event)\n    }\n\n    if (__COMPAT__) {\n      const keyCode = String(event.keyCode)\n      if (\n        compatUtils.isCompatEnabled(\n          DeprecationTypes.V_ON_KEYCODE_MODIFIER,\n          instance\n        ) &&\n        modifiers.some(mod => mod == keyCode)\n      ) {\n        return fn(event)\n      }\n      if (globalKeyCodes) {\n        for (const mod of modifiers) {\n          const codes = globalKeyCodes[mod]\n          if (codes) {\n            const matches = isArray(codes)\n              ? codes.some(code => String(code) === keyCode)\n              : String(codes) === keyCode\n            if (matches) {\n              return fn(event)\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "import {\n  createRenderer,\n  createHydrationRenderer,\n  warn,\n  RootRenderFunction,\n  CreateAppFunction,\n  Renderer,\n  HydrationRenderer,\n  App,\n  RootHydrateFunction,\n  isRuntimeOnly,\n  DeprecationTypes,\n  compatUtils\n} from '@vue/runtime-core'\nimport { nodeOps } from './nodeOps'\nimport { patchProp } from './patchProp'\n// Importing from the compiler, will be tree-shaken in prod\nimport {\n  isFunction,\n  isString,\n  isHTMLTag,\n  isSVGTag,\n  extend,\n  NOOP\n} from '@vue/shared'\n\ndeclare module '@vue/reactivity' {\n  export interface RefUnwrapBailTypes {\n    runtimeDOMBailTypes: Node | Window\n  }\n}\n\nconst rendererOptions = /*#__PURE__*/ extend({ patchProp }, nodeOps)\n\n// lazy create the renderer - this makes core renderer logic tree-shakable\n// in case the user only imports reactivity utilities from Vue.\nlet renderer: Renderer<Element | ShadowRoot> | HydrationRenderer\n\nlet enabledHydration = false\n\nfunction ensureRenderer() {\n  return (\n    renderer ||\n    (renderer = createRenderer<Node, Element | ShadowRoot>(rendererOptions))\n  )\n}\n\nfunction ensureHydrationRenderer() {\n  renderer = enabledHydration\n    ? renderer\n    : createHydrationRenderer(rendererOptions)\n  enabledHydration = true\n  return renderer as HydrationRenderer\n}\n\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\nexport const render = ((...args) => {\n  ensureRenderer().render(...args)\n}) as RootRenderFunction<Element | ShadowRoot>\n\nexport const hydrate = ((...args) => {\n  ensureHydrationRenderer().hydrate(...args)\n}) as RootHydrateFunction\n\nexport const createApp = ((...args) => {\n  const app = ensureRenderer().createApp(...args)\n\n  if (__DEV__) {\n    injectNativeTagCheck(app)\n    injectCompilerOptionsCheck(app)\n  }\n\n  const { mount } = app\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\n    const container = normalizeContainer(containerOrSelector)\n    if (!container) return\n\n    const component = app._component\n    if (!isFunction(component) && !component.render && !component.template) {\n      // __UNSAFE__\n      // Reason: potential execution of JS expressions in in-DOM template.\n      // The user must make sure the in-DOM template is trusted. If it's\n      // rendered by the server, the template should not contain any user data.\n      component.template = container.innerHTML\n      // 2.x compat check\n      if (__COMPAT__ && __DEV__) {\n        for (let i = 0; i < container.attributes.length; i++) {\n          const attr = container.attributes[i]\n          if (attr.name !== 'v-cloak' && /^(v-|:|@)/.test(attr.name)) {\n            compatUtils.warnDeprecation(\n              DeprecationTypes.GLOBAL_MOUNT_CONTAINER,\n              null\n            )\n            break\n          }\n        }\n      }\n    }\n\n    // clear content before mounting\n    container.innerHTML = ''\n    const proxy = mount(container, false, container instanceof SVGElement)\n    if (container instanceof Element) {\n      container.removeAttribute('v-cloak')\n      container.setAttribute('data-v-app', '')\n    }\n    return proxy\n  }\n\n  return app\n}) as CreateAppFunction<Element>\n\nexport const createSSRApp = ((...args) => {\n  const app = ensureHydrationRenderer().createApp(...args)\n\n  if (__DEV__) {\n    injectNativeTagCheck(app)\n    injectCompilerOptionsCheck(app)\n  }\n\n  const { mount } = app\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\n    const container = normalizeContainer(containerOrSelector)\n    if (container) {\n      return mount(container, true, container instanceof SVGElement)\n    }\n  }\n\n  return app\n}) as CreateAppFunction<Element>\n\nfunction injectNativeTagCheck(app: App) {\n  // Inject `isNativeTag`\n  // this is used for component name validation (dev only)\n  Object.defineProperty(app.config, 'isNativeTag', {\n    value: (tag: string) => isHTMLTag(tag) || isSVGTag(tag),\n    writable: false\n  })\n}\n\n// dev only\nfunction injectCompilerOptionsCheck(app: App) {\n  if (isRuntimeOnly()) {\n    const isCustomElement = app.config.isCustomElement\n    Object.defineProperty(app.config, 'isCustomElement', {\n      get() {\n        return isCustomElement\n      },\n      set() {\n        warn(\n          `The \\`isCustomElement\\` config option is deprecated. Use ` +\n            `\\`compilerOptions.isCustomElement\\` instead.`\n        )\n      }\n    })\n\n    const compilerOptions = app.config.compilerOptions\n    const msg =\n      `The \\`compilerOptions\\` config option is only respected when using ` +\n      `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\n      `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\n      `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\n      `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\n      `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\n      `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-sfc`\n\n    Object.defineProperty(app.config, 'compilerOptions', {\n      get() {\n        warn(msg)\n        return compilerOptions\n      },\n      set() {\n        warn(msg)\n      }\n    })\n  }\n}\n\nfunction normalizeContainer(\n  container: Element | ShadowRoot | string\n): Element | null {\n  if (isString(container)) {\n    const res = document.querySelector(container)\n    if (__DEV__ && !res) {\n      warn(\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\n      )\n    }\n    return res\n  }\n  if (\n    __DEV__ &&\n    window.ShadowRoot &&\n    container instanceof window.ShadowRoot &&\n    container.mode === 'closed'\n  ) {\n    warn(\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\n    )\n  }\n  return container as any\n}\n\n// Custom element support\nexport {\n  defineCustomElement,\n  defineSSRCustomElement,\n  VueElement,\n  type VueElementConstructor\n} from './apiCustomElement'\n\n// SFC CSS utilities\nexport { useCssModule } from './helpers/useCssModule'\nexport { useCssVars } from './helpers/useCssVars'\n\n// DOM-only components\nexport { Transition, type TransitionProps } from './components/Transition'\nexport {\n  TransitionGroup,\n  type TransitionGroupProps\n} from './components/TransitionGroup'\n\n// **Internal** DOM-only runtime directive helpers\nexport {\n  vModelText,\n  vModelCheckbox,\n  vModelRadio,\n  vModelSelect,\n  vModelDynamic\n} from './directives/vModel'\nexport { withModifiers, withKeys } from './directives/vOn'\nexport { vShow } from './directives/vShow'\n\nimport { initVModelForSSR } from './directives/vModel'\nimport { initVShowForSSR } from './directives/vShow'\n\nlet ssrDirectiveInitialized = false\n\n/**\n * @internal\n */\nexport const initDirectivesForSSR = __SSR__\n  ? () => {\n      if (!ssrDirectiveInitialized) {\n        ssrDirectiveInitialized = true\n        initVModelForSSR()\n        initVShowForSSR()\n      }\n    }\n  : NOOP\n\n// re-export everything from core\n// h, Component, reactivity API, nextTick, flags & types\nexport * from '@vue/runtime-core'\n\nexport * from './jsx'\n", "import { initCustomFormatter } from '@vue/runtime-dom'\n\nexport function initDev() {\n  if (__BROWSER__) {\n    /* istanbul ignore if */\n    if (!__ESM_BUNDLER__) {\n      console.info(\n        `You are running a development build of Vue.\\n` +\n          `Make sure to use the production build (*.prod.js) when deploying for production.`\n      )\n    }\n\n    initCustomFormatter()\n  }\n}\n", "import { SourceLocation } from './ast'\n\nexport interface CompilerError extends SyntaxError {\n  code: number | string\n  loc?: SourceLocation\n}\n\nexport interface CoreCompilerError extends CompilerError {\n  code: ErrorCodes\n}\n\nexport function defaultOnError(error: CompilerError) {\n  throw error\n}\n\nexport function defaultOnWarn(msg: CompilerError) {\n  __DEV__ && console.warn(`[Vue warn] ${msg.message}`)\n}\n\ntype InferCompilerError<T> = T extends ErrorCodes\n  ? CoreCompilerError\n  : CompilerError\n\nexport function createCompilerError<T extends number>(\n  code: T,\n  loc?: SourceLocation,\n  messages?: { [code: number]: string },\n  additionalMessage?: string\n): InferCompilerError<T> {\n  const msg =\n    __DEV__ || !__BROWSER__\n      ? (messages || errorMessages)[code] + (additionalMessage || ``)\n      : code\n  const error = new SyntaxError(String(msg)) as InferCompilerError<T>\n  error.code = code\n  error.loc = loc\n  return error\n}\n\nexport const enum ErrorCodes {\n  // parse errors\n  ABRUPT_CLOSING_OF_EMPTY_COMMENT,\n  CDATA_IN_HTML_CONTENT,\n  DUPLICATE_ATTRIBUTE,\n  END_TAG_WITH_ATTRIBUTES,\n  END_TAG_WITH_TRAILING_SOLIDUS,\n  EOF_BEFORE_TAG_NAME,\n  EOF_IN_CDATA,\n  EOF_IN_COMMENT,\n  EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT,\n  EOF_IN_TAG,\n  INCORRECTLY_CLOSED_COMMENT,\n  INCORRECTLY_OPENED_COMMENT,\n  INVALID_FIRST_CHARACTER_OF_TAG_NAME,\n  MISSING_ATTRIBUTE_VALUE,\n  MISSING_END_TAG_NAME,\n  MISSING_WHITESPACE_BETWEEN_ATTRIBUTES,\n  NESTED_COMMENT,\n  UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\n  UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\n  UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME,\n  UNEXPECTED_NULL_CHARACTER,\n  UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\n  UNEXPECTED_SOLIDUS_IN_TAG,\n\n  // Vue-specific parse errors\n  X_INVALID_END_TAG,\n  X_MISSING_END_TAG,\n  X_MISSING_INTERPOLATION_END,\n  X_MISSING_DIRECTIVE_NAME,\n  X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END,\n\n  // transform errors\n  X_V_IF_NO_EXPRESSION,\n  X_V_IF_SAME_KEY,\n  X_V_ELSE_NO_ADJACENT_IF,\n  X_V_FOR_NO_EXPRESSION,\n  X_V_FOR_MALFORMED_EXPRESSION,\n  X_V_FOR_TEMPLATE_KEY_PLACEMENT,\n  X_V_BIND_NO_EXPRESSION,\n  X_V_ON_NO_EXPRESSION,\n  X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\n  X_V_SLOT_MIXED_SLOT_USAGE,\n  X_V_SLOT_DUPLICATE_SLOT_NAMES,\n  X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\n  X_V_SLOT_MISPLACED,\n  X_V_MODEL_NO_EXPRESSION,\n  X_V_MODEL_MALFORMED_EXPRESSION,\n  X_V_MODEL_ON_SCOPE_VARIABLE,\n  X_V_MODEL_ON_PROPS,\n  X_INVALID_EXPRESSION,\n  X_KEEP_ALIVE_INVALID_CHILDREN,\n\n  // generic errors\n  X_PREFIX_ID_NOT_SUPPORTED,\n  X_MODULE_MODE_NOT_SUPPORTED,\n  X_CACHE_HANDLER_NOT_SUPPORTED,\n  X_SCOPE_ID_NOT_SUPPORTED,\n\n  // deprecations\n  DEPRECATION_VNODE_HOOKS,\n  DEPRECATION_V_IS,\n\n  // Special value for higher-order compilers to pick up the last code\n  // to avoid collision of error codes. This should always be kept as the last\n  // item.\n  __EXTEND_POINT__\n}\n\nexport const errorMessages: Record<ErrorCodes, string> = {\n  // parse errors\n  [ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT]: 'Illegal comment.',\n  [ErrorCodes.CDATA_IN_HTML_CONTENT]:\n    'CDATA section is allowed only in XML context.',\n  [ErrorCodes.DUPLICATE_ATTRIBUTE]: 'Duplicate attribute.',\n  [ErrorCodes.END_TAG_WITH_ATTRIBUTES]: 'End tag cannot have attributes.',\n  [ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS]: \"Illegal '/' in tags.\",\n  [ErrorCodes.EOF_BEFORE_TAG_NAME]: 'Unexpected EOF in tag.',\n  [ErrorCodes.EOF_IN_CDATA]: 'Unexpected EOF in CDATA section.',\n  [ErrorCodes.EOF_IN_COMMENT]: 'Unexpected EOF in comment.',\n  [ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT]:\n    'Unexpected EOF in script.',\n  [ErrorCodes.EOF_IN_TAG]: 'Unexpected EOF in tag.',\n  [ErrorCodes.INCORRECTLY_CLOSED_COMMENT]: 'Incorrectly closed comment.',\n  [ErrorCodes.INCORRECTLY_OPENED_COMMENT]: 'Incorrectly opened comment.',\n  [ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME]:\n    \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [ErrorCodes.MISSING_ATTRIBUTE_VALUE]: 'Attribute value was expected.',\n  [ErrorCodes.MISSING_END_TAG_NAME]: 'End tag name was expected.',\n  [ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES]:\n    'Whitespace was expected.',\n  [ErrorCodes.NESTED_COMMENT]: \"Unexpected '<!--' in comment.\",\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME]:\n    'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE]:\n    'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\n  [ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME]:\n    \"Attribute name cannot start with '='.\",\n  [ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME]:\n    \"'<?' is allowed only in XML context.\",\n  [ErrorCodes.UNEXPECTED_NULL_CHARACTER]: `Unexpected null character.`,\n  [ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG]: \"Illegal '/' in tags.\",\n\n  // Vue-specific parse errors\n  [ErrorCodes.X_INVALID_END_TAG]: 'Invalid end tag.',\n  [ErrorCodes.X_MISSING_END_TAG]: 'Element is missing end tag.',\n  [ErrorCodes.X_MISSING_INTERPOLATION_END]:\n    'Interpolation end sign was not found.',\n  [ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END]:\n    'End bracket for dynamic directive argument was not found. ' +\n    'Note that dynamic directive argument cannot contain spaces.',\n  [ErrorCodes.X_MISSING_DIRECTIVE_NAME]: 'Legal directive name was expected.',\n\n  // transform errors\n  [ErrorCodes.X_V_IF_NO_EXPRESSION]: `v-if/v-else-if is missing expression.`,\n  [ErrorCodes.X_V_IF_SAME_KEY]: `v-if/else branches must use unique keys.`,\n  [ErrorCodes.X_V_ELSE_NO_ADJACENT_IF]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [ErrorCodes.X_V_FOR_NO_EXPRESSION]: `v-for is missing expression.`,\n  [ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION]: `v-for has invalid expression.`,\n  [ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT]: `<template v-for> key should be placed on the <template> tag.`,\n  [ErrorCodes.X_V_BIND_NO_EXPRESSION]: `v-bind is missing expression.`,\n  [ErrorCodes.X_V_ON_NO_EXPRESSION]: `v-on is missing expression.`,\n  [ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET]: `Unexpected custom directive on <slot> outlet.`,\n  [ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE]:\n    `Mixed v-slot usage on both the component and nested <template>. ` +\n    `When there are multiple named slots, all slots should use <template> ` +\n    `syntax to avoid scope ambiguity.`,\n  [ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES]: `Duplicate slot names found. `,\n  [ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN]:\n    `Extraneous children found when component already has explicitly named ` +\n    `default slot. These children will be ignored.`,\n  [ErrorCodes.X_V_SLOT_MISPLACED]: `v-slot can only be used on components or <template> tags.`,\n  [ErrorCodes.X_V_MODEL_NO_EXPRESSION]: `v-model is missing expression.`,\n  [ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION]: `v-model value must be a valid JavaScript member expression.`,\n  [ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [ErrorCodes.X_V_MODEL_ON_PROPS]: `v-model cannot be used on a prop, because local prop bindings are not writable.\\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n  [ErrorCodes.X_INVALID_EXPRESSION]: `Error parsing JavaScript expression: `,\n  [ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN]: `<KeepAlive> expects exactly one child component.`,\n\n  // generic errors\n  [ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED]: `ES module mode is not supported in this build of compiler.`,\n  [ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED]: `\"scopeId\" option is only supported in module mode.`,\n\n  // deprecations\n  [ErrorCodes.DEPRECATION_VNODE_HOOKS]: `@vnode-* hooks in templates are deprecated. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support will be removed in 3.4.`,\n  [ErrorCodes.DEPRECATION_V_IS]: `v-is=\"component-name\" has been deprecated. Use is=\"vue:component-name\" instead. v-is support will be removed in 3.4.`,\n\n  // just to fulfill types\n  [ErrorCodes.__EXTEND_POINT__]: ``\n}\n", "export const FRAGMENT = Symbol(__DEV__ ? `Fragment` : ``)\nexport const TELEPORT = Symbol(__DEV__ ? `Teleport` : ``)\nexport const SUSPENSE = Symbol(__DEV__ ? `Suspense` : ``)\nexport const KEEP_ALIVE = Symbol(__DEV__ ? `KeepAlive` : ``)\nexport const BASE_TRANSITION = Symbol(__DEV__ ? `BaseTransition` : ``)\nexport const OPEN_BLOCK = Symbol(__DEV__ ? `openBlock` : ``)\nexport const CREATE_BLOCK = Symbol(__DEV__ ? `createBlock` : ``)\nexport const CREATE_ELEMENT_BLOCK = Symbol(__DEV__ ? `createElementBlock` : ``)\nexport const CREATE_VNODE = Symbol(__DEV__ ? `createVNode` : ``)\nexport const CREATE_ELEMENT_VNODE = Symbol(__DEV__ ? `createElementVNode` : ``)\nexport const CREATE_COMMENT = Symbol(__DEV__ ? `createCommentVNode` : ``)\nexport const CREATE_TEXT = Symbol(__DEV__ ? `createTextVNode` : ``)\nexport const CREATE_STATIC = Symbol(__DEV__ ? `createStaticVNode` : ``)\nexport const RESOLVE_COMPONENT = Symbol(__DEV__ ? `resolveComponent` : ``)\nexport const RESOLVE_DYNAMIC_COMPONENT = Symbol(\n  __DEV__ ? `resolveDynamicComponent` : ``\n)\nexport const RESOLVE_DIRECTIVE = Symbol(__DEV__ ? `resolveDirective` : ``)\nexport const RESOLVE_FILTER = Symbol(__DEV__ ? `resolveFilter` : ``)\nexport const WITH_DIRECTIVES = Symbol(__DEV__ ? `withDirectives` : ``)\nexport const RENDER_LIST = Symbol(__DEV__ ? `renderList` : ``)\nexport const RENDER_SLOT = Symbol(__DEV__ ? `renderSlot` : ``)\nexport const CREATE_SLOTS = Symbol(__DEV__ ? `createSlots` : ``)\nexport const TO_DISPLAY_STRING = Symbol(__DEV__ ? `toDisplayString` : ``)\nexport const MERGE_PROPS = Symbol(__DEV__ ? `mergeProps` : ``)\nexport const NORMALIZE_CLASS = Symbol(__DEV__ ? `normalizeClass` : ``)\nexport const NORMALIZE_STYLE = Symbol(__DEV__ ? `normalizeStyle` : ``)\nexport const NORMALIZE_PROPS = Symbol(__DEV__ ? `normalizeProps` : ``)\nexport const GUARD_REACTIVE_PROPS = Symbol(__DEV__ ? `guardReactiveProps` : ``)\nexport const TO_HANDLERS = Symbol(__DEV__ ? `toHandlers` : ``)\nexport const CAMELIZE = Symbol(__DEV__ ? `camelize` : ``)\nexport const CAPITALIZE = Symbol(__DEV__ ? `capitalize` : ``)\nexport const TO_HANDLER_KEY = Symbol(__DEV__ ? `toHandlerKey` : ``)\nexport const SET_BLOCK_TRACKING = Symbol(__DEV__ ? `setBlockTracking` : ``)\nexport const PUSH_SCOPE_ID = Symbol(__DEV__ ? `pushScopeId` : ``)\nexport const POP_SCOPE_ID = Symbol(__DEV__ ? `popScopeId` : ``)\nexport const WITH_CTX = Symbol(__DEV__ ? `withCtx` : ``)\nexport const UNREF = Symbol(__DEV__ ? `unref` : ``)\nexport const IS_REF = Symbol(__DEV__ ? `isRef` : ``)\nexport const WITH_MEMO = Symbol(__DEV__ ? `withMemo` : ``)\nexport const IS_MEMO_SAME = Symbol(__DEV__ ? `isMemoSame` : ``)\n\n// Name mapping for runtime helpers that need to be imported from 'vue' in\n// generated code. Make sure these are correctly exported in the runtime!\nexport const helperNameMap: Record<symbol, string> = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n}\n\nexport function registerRuntimeHelpers(helpers: Record<symbol, string>) {\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\n    helperNameMap[s] = helpers[s]\n  })\n}\n", "import { isString } from '@vue/shared'\nimport { ForParseResult } from './transforms/vFor'\nimport {\n  RENDER_SLOT,\n  CREATE_SLOTS,\n  RENDER_LIST,\n  OPEN_BLOCK,\n  FRAGMENT,\n  WITH_DIRECTIVES,\n  WITH_MEMO,\n  CREATE_VNODE,\n  CREATE_ELEMENT_VNODE,\n  CREATE_BLOCK,\n  CREATE_ELEMENT_BLOCK\n} from './runtimeHelpers'\nimport { PropsExpression } from './transforms/transformElement'\nimport { ImportItem, TransformContext } from './transform'\n\n// Vue template is a platform-agnostic superset of HTML (syntax only).\n// More namespaces like SVG and MathML are declared by platform specific\n// compilers.\nexport type Namespace = number\n\nexport const enum Namespaces {\n  HTML\n}\n\nexport const enum NodeTypes {\n  ROOT,\n  ELEMENT,\n  TEXT,\n  COMMENT,\n  SIMPLE_EXPRESSION,\n  INTERPOLATION,\n  ATTRIBUTE,\n  DIRECTIVE,\n  // containers\n  COMPOUND_EXPRESSION,\n  IF,\n  IF_BRANCH,\n  FOR,\n  TEXT_CALL,\n  // codegen\n  VNODE_CALL,\n  JS_CALL_EXPRESSION,\n  JS_OBJECT_EXPRESSION,\n  JS_PROPERTY,\n  JS_ARRAY_EXPRESSION,\n  JS_FUNCTION_EXPRESSION,\n  JS_CONDITIONAL_EXPRESSION,\n  JS_CACHE_EXPRESSION,\n\n  // ssr codegen\n  JS_BLOCK_STATEMENT,\n  JS_TEMPLATE_LITERAL,\n  JS_IF_STATEMENT,\n  JS_ASSIGNMENT_EXPRESSION,\n  JS_SEQUENCE_EXPRESSION,\n  JS_RETURN_STATEMENT\n}\n\nexport const enum ElementTypes {\n  ELEMENT,\n  COMPONENT,\n  SLOT,\n  TEMPLATE\n}\n\nexport interface Node {\n  type: NodeTypes\n  loc: SourceLocation\n}\n\n// The node's range. The `start` is inclusive and `end` is exclusive.\n// [start, end)\nexport interface SourceLocation {\n  start: Position\n  end: Position\n  source: string\n}\n\nexport interface Position {\n  offset: number // from start of file\n  line: number\n  column: number\n}\n\nexport type ParentNode = RootNode | ElementNode | IfBranchNode | ForNode\n\nexport type ExpressionNode = SimpleExpressionNode | CompoundExpressionNode\n\nexport type TemplateChildNode =\n  | ElementNode\n  | InterpolationNode\n  | CompoundExpressionNode\n  | TextNode\n  | CommentNode\n  | IfNode\n  | IfBranchNode\n  | ForNode\n  | TextCallNode\n\nexport interface RootNode extends Node {\n  type: NodeTypes.ROOT\n  children: TemplateChildNode[]\n  helpers: Set<symbol>\n  components: string[]\n  directives: string[]\n  hoists: (JSChildNode | null)[]\n  imports: ImportItem[]\n  cached: number\n  temps: number\n  ssrHelpers?: symbol[]\n  codegenNode?: TemplateChildNode | JSChildNode | BlockStatement\n\n  // v2 compat only\n  filters?: string[]\n}\n\nexport type ElementNode =\n  | PlainElementNode\n  | ComponentNode\n  | SlotOutletNode\n  | TemplateNode\n\nexport interface BaseElementNode extends Node {\n  type: NodeTypes.ELEMENT\n  ns: Namespace\n  tag: string\n  tagType: ElementTypes\n  isSelfClosing: boolean\n  props: Array<AttributeNode | DirectiveNode>\n  children: TemplateChildNode[]\n}\n\nexport interface PlainElementNode extends BaseElementNode {\n  tagType: ElementTypes.ELEMENT\n  codegenNode:\n    | VNodeCall\n    | SimpleExpressionNode // when hoisted\n    | CacheExpression // when cached by v-once\n    | MemoExpression // when cached by v-memo\n    | undefined\n  ssrCodegenNode?: TemplateLiteral\n}\n\nexport interface ComponentNode extends BaseElementNode {\n  tagType: ElementTypes.COMPONENT\n  codegenNode:\n    | VNodeCall\n    | CacheExpression // when cached by v-once\n    | MemoExpression // when cached by v-memo\n    | undefined\n  ssrCodegenNode?: CallExpression\n}\n\nexport interface SlotOutletNode extends BaseElementNode {\n  tagType: ElementTypes.SLOT\n  codegenNode:\n    | RenderSlotCall\n    | CacheExpression // when cached by v-once\n    | undefined\n  ssrCodegenNode?: CallExpression\n}\n\nexport interface TemplateNode extends BaseElementNode {\n  tagType: ElementTypes.TEMPLATE\n  // TemplateNode is a container type that always gets compiled away\n  codegenNode: undefined\n}\n\nexport interface TextNode extends Node {\n  type: NodeTypes.TEXT\n  content: string\n}\n\nexport interface CommentNode extends Node {\n  type: NodeTypes.COMMENT\n  content: string\n}\n\nexport interface AttributeNode extends Node {\n  type: NodeTypes.ATTRIBUTE\n  name: string\n  value: TextNode | undefined\n}\n\nexport interface DirectiveNode extends Node {\n  type: NodeTypes.DIRECTIVE\n  name: string\n  exp: ExpressionNode | undefined\n  arg: ExpressionNode | undefined\n  modifiers: string[]\n  /**\n   * optional property to cache the expression parse result for v-for\n   */\n  parseResult?: ForParseResult\n}\n\n/**\n * Static types have several levels.\n * Higher levels implies lower levels. e.g. a node that can be stringified\n * can always be hoisted and skipped for patch.\n */\nexport const enum ConstantTypes {\n  NOT_CONSTANT = 0,\n  CAN_SKIP_PATCH,\n  CAN_HOIST,\n  CAN_STRINGIFY\n}\n\nexport interface SimpleExpressionNode extends Node {\n  type: NodeTypes.SIMPLE_EXPRESSION\n  content: string\n  isStatic: boolean\n  constType: ConstantTypes\n  /**\n   * Indicates this is an identifier for a hoist vnode call and points to the\n   * hoisted node.\n   */\n  hoisted?: JSChildNode\n  /**\n   * an expression parsed as the params of a function will track\n   * the identifiers declared inside the function body.\n   */\n  identifiers?: string[]\n  isHandlerKey?: boolean\n}\n\nexport interface InterpolationNode extends Node {\n  type: NodeTypes.INTERPOLATION\n  content: ExpressionNode\n}\n\nexport interface CompoundExpressionNode extends Node {\n  type: NodeTypes.COMPOUND_EXPRESSION\n  children: (\n    | SimpleExpressionNode\n    | CompoundExpressionNode\n    | InterpolationNode\n    | TextNode\n    | string\n    | symbol\n  )[]\n\n  /**\n   * an expression parsed as the params of a function will track\n   * the identifiers declared inside the function body.\n   */\n  identifiers?: string[]\n  isHandlerKey?: boolean\n}\n\nexport interface IfNode extends Node {\n  type: NodeTypes.IF\n  branches: IfBranchNode[]\n  codegenNode?: IfConditionalExpression | CacheExpression // <div v-if v-once>\n}\n\nexport interface IfBranchNode extends Node {\n  type: NodeTypes.IF_BRANCH\n  condition: ExpressionNode | undefined // else\n  children: TemplateChildNode[]\n  userKey?: AttributeNode | DirectiveNode\n  isTemplateIf?: boolean\n}\n\nexport interface ForNode extends Node {\n  type: NodeTypes.FOR\n  source: ExpressionNode\n  valueAlias: ExpressionNode | undefined\n  keyAlias: ExpressionNode | undefined\n  objectIndexAlias: ExpressionNode | undefined\n  parseResult: ForParseResult\n  children: TemplateChildNode[]\n  codegenNode?: ForCodegenNode\n}\n\nexport interface TextCallNode extends Node {\n  type: NodeTypes.TEXT_CALL\n  content: TextNode | InterpolationNode | CompoundExpressionNode\n  codegenNode: CallExpression | SimpleExpressionNode // when hoisted\n}\n\nexport type TemplateTextChildNode =\n  | TextNode\n  | InterpolationNode\n  | CompoundExpressionNode\n\nexport interface VNodeCall extends Node {\n  type: NodeTypes.VNODE_CALL\n  tag: string | symbol | CallExpression\n  props: PropsExpression | undefined\n  children:\n    | TemplateChildNode[] // multiple children\n    | TemplateTextChildNode // single text child\n    | SlotsExpression // component slots\n    | ForRenderListExpression // v-for fragment call\n    | SimpleExpressionNode // hoisted\n    | undefined\n  patchFlag: string | undefined\n  dynamicProps: string | SimpleExpressionNode | undefined\n  directives: DirectiveArguments | undefined\n  isBlock: boolean\n  disableTracking: boolean\n  isComponent: boolean\n}\n\n// JS Node Types ---------------------------------------------------------------\n\n// We also include a number of JavaScript AST nodes for code generation.\n// The AST is an intentionally minimal subset just to meet the exact needs of\n// Vue render function generation.\n\nexport type JSChildNode =\n  | VNodeCall\n  | CallExpression\n  | ObjectExpression\n  | ArrayExpression\n  | ExpressionNode\n  | FunctionExpression\n  | ConditionalExpression\n  | CacheExpression\n  | AssignmentExpression\n  | SequenceExpression\n\nexport interface CallExpression extends Node {\n  type: NodeTypes.JS_CALL_EXPRESSION\n  callee: string | symbol\n  arguments: (\n    | string\n    | symbol\n    | JSChildNode\n    | SSRCodegenNode\n    | TemplateChildNode\n    | TemplateChildNode[]\n  )[]\n}\n\nexport interface ObjectExpression extends Node {\n  type: NodeTypes.JS_OBJECT_EXPRESSION\n  properties: Array<Property>\n}\n\nexport interface Property extends Node {\n  type: NodeTypes.JS_PROPERTY\n  key: ExpressionNode\n  value: JSChildNode\n}\n\nexport interface ArrayExpression extends Node {\n  type: NodeTypes.JS_ARRAY_EXPRESSION\n  elements: Array<string | Node>\n}\n\nexport interface FunctionExpression extends Node {\n  type: NodeTypes.JS_FUNCTION_EXPRESSION\n  params: ExpressionNode | string | (ExpressionNode | string)[] | undefined\n  returns?: TemplateChildNode | TemplateChildNode[] | JSChildNode\n  body?: BlockStatement | IfStatement\n  newline: boolean\n  /**\n   * This flag is for codegen to determine whether it needs to generate the\n   * withScopeId() wrapper\n   */\n  isSlot: boolean\n  /**\n   * __COMPAT__ only, indicates a slot function that should be excluded from\n   * the legacy $scopedSlots instance property.\n   */\n  isNonScopedSlot?: boolean\n}\n\nexport interface ConditionalExpression extends Node {\n  type: NodeTypes.JS_CONDITIONAL_EXPRESSION\n  test: JSChildNode\n  consequent: JSChildNode\n  alternate: JSChildNode\n  newline: boolean\n}\n\nexport interface CacheExpression extends Node {\n  type: NodeTypes.JS_CACHE_EXPRESSION\n  index: number\n  value: JSChildNode\n  isVNode: boolean\n}\n\nexport interface MemoExpression extends CallExpression {\n  callee: typeof WITH_MEMO\n  arguments: [ExpressionNode, MemoFactory, string, string]\n}\n\ninterface MemoFactory extends FunctionExpression {\n  returns: BlockCodegenNode\n}\n\n// SSR-specific Node Types -----------------------------------------------------\n\nexport type SSRCodegenNode =\n  | BlockStatement\n  | TemplateLiteral\n  | IfStatement\n  | AssignmentExpression\n  | ReturnStatement\n  | SequenceExpression\n\nexport interface BlockStatement extends Node {\n  type: NodeTypes.JS_BLOCK_STATEMENT\n  body: (JSChildNode | IfStatement)[]\n}\n\nexport interface TemplateLiteral extends Node {\n  type: NodeTypes.JS_TEMPLATE_LITERAL\n  elements: (string | JSChildNode)[]\n}\n\nexport interface IfStatement extends Node {\n  type: NodeTypes.JS_IF_STATEMENT\n  test: ExpressionNode\n  consequent: BlockStatement\n  alternate: IfStatement | BlockStatement | ReturnStatement | undefined\n}\n\nexport interface AssignmentExpression extends Node {\n  type: NodeTypes.JS_ASSIGNMENT_EXPRESSION\n  left: SimpleExpressionNode\n  right: JSChildNode\n}\n\nexport interface SequenceExpression extends Node {\n  type: NodeTypes.JS_SEQUENCE_EXPRESSION\n  expressions: JSChildNode[]\n}\n\nexport interface ReturnStatement extends Node {\n  type: NodeTypes.JS_RETURN_STATEMENT\n  returns: TemplateChildNode | TemplateChildNode[] | JSChildNode\n}\n\n// Codegen Node Types ----------------------------------------------------------\n\nexport interface DirectiveArguments extends ArrayExpression {\n  elements: DirectiveArgumentNode[]\n}\n\nexport interface DirectiveArgumentNode extends ArrayExpression {\n  elements: // dir, exp, arg, modifiers\n  | [string]\n    | [string, ExpressionNode]\n    | [string, ExpressionNode, ExpressionNode]\n    | [string, ExpressionNode, ExpressionNode, ObjectExpression]\n}\n\n// renderSlot(...)\nexport interface RenderSlotCall extends CallExpression {\n  callee: typeof RENDER_SLOT\n  arguments: // $slots, name, props, fallback\n  | [string, string | ExpressionNode]\n    | [string, string | ExpressionNode, PropsExpression]\n    | [\n        string,\n        string | ExpressionNode,\n        PropsExpression | '{}',\n        TemplateChildNode[]\n      ]\n}\n\nexport type SlotsExpression = SlotsObjectExpression | DynamicSlotsExpression\n\n// { foo: () => [...] }\nexport interface SlotsObjectExpression extends ObjectExpression {\n  properties: SlotsObjectProperty[]\n}\n\nexport interface SlotsObjectProperty extends Property {\n  value: SlotFunctionExpression\n}\n\nexport interface SlotFunctionExpression extends FunctionExpression {\n  returns: TemplateChildNode[]\n}\n\n// createSlots({ ... }, [\n//    foo ? () => [] : undefined,\n//    renderList(list, i => () => [i])\n// ])\nexport interface DynamicSlotsExpression extends CallExpression {\n  callee: typeof CREATE_SLOTS\n  arguments: [SlotsObjectExpression, DynamicSlotEntries]\n}\n\nexport interface DynamicSlotEntries extends ArrayExpression {\n  elements: (ConditionalDynamicSlotNode | ListDynamicSlotNode)[]\n}\n\nexport interface ConditionalDynamicSlotNode extends ConditionalExpression {\n  consequent: DynamicSlotNode\n  alternate: DynamicSlotNode | SimpleExpressionNode\n}\n\nexport interface ListDynamicSlotNode extends CallExpression {\n  callee: typeof RENDER_LIST\n  arguments: [ExpressionNode, ListDynamicSlotIterator]\n}\n\nexport interface ListDynamicSlotIterator extends FunctionExpression {\n  returns: DynamicSlotNode\n}\n\nexport interface DynamicSlotNode extends ObjectExpression {\n  properties: [Property, DynamicSlotFnProperty]\n}\n\nexport interface DynamicSlotFnProperty extends Property {\n  value: SlotFunctionExpression\n}\n\nexport type BlockCodegenNode = VNodeCall | RenderSlotCall\n\nexport interface IfConditionalExpression extends ConditionalExpression {\n  consequent: BlockCodegenNode | MemoExpression\n  alternate: BlockCodegenNode | IfConditionalExpression | MemoExpression\n}\n\nexport interface ForCodegenNode extends VNodeCall {\n  isBlock: true\n  tag: typeof FRAGMENT\n  props: undefined\n  children: ForRenderListExpression\n  patchFlag: string\n  disableTracking: boolean\n}\n\nexport interface ForRenderListExpression extends CallExpression {\n  callee: typeof RENDER_LIST\n  arguments: [ExpressionNode, ForIteratorExpression]\n}\n\nexport interface ForIteratorExpression extends FunctionExpression {\n  returns: BlockCodegenNode\n}\n\n// AST Utilities ---------------------------------------------------------------\n\n// Some expressions, e.g. sequence and conditional expressions, are never\n// associated with template nodes, so their source locations are just a stub.\n// Container types like CompoundExpression also don't need a real location.\nexport const locStub: SourceLocation = {\n  source: '',\n  start: { line: 1, column: 1, offset: 0 },\n  end: { line: 1, column: 1, offset: 0 }\n}\n\nexport function createRoot(\n  children: TemplateChildNode[],\n  loc = locStub\n): RootNode {\n  return {\n    type: NodeTypes.ROOT,\n    children,\n    helpers: new Set(),\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: 0,\n    temps: 0,\n    codegenNode: undefined,\n    loc\n  }\n}\n\nexport function createVNodeCall(\n  context: TransformContext | null,\n  tag: VNodeCall['tag'],\n  props?: VNodeCall['props'],\n  children?: VNodeCall['children'],\n  patchFlag?: VNodeCall['patchFlag'],\n  dynamicProps?: VNodeCall['dynamicProps'],\n  directives?: VNodeCall['directives'],\n  isBlock: VNodeCall['isBlock'] = false,\n  disableTracking: VNodeCall['disableTracking'] = false,\n  isComponent: VNodeCall['isComponent'] = false,\n  loc = locStub\n): VNodeCall {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK)\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent))\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent))\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES)\n    }\n  }\n\n  return {\n    type: NodeTypes.VNODE_CALL,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n    loc\n  }\n}\n\nexport function createArrayExpression(\n  elements: ArrayExpression['elements'],\n  loc: SourceLocation = locStub\n): ArrayExpression {\n  return {\n    type: NodeTypes.JS_ARRAY_EXPRESSION,\n    loc,\n    elements\n  }\n}\n\nexport function createObjectExpression(\n  properties: ObjectExpression['properties'],\n  loc: SourceLocation = locStub\n): ObjectExpression {\n  return {\n    type: NodeTypes.JS_OBJECT_EXPRESSION,\n    loc,\n    properties\n  }\n}\n\nexport function createObjectProperty(\n  key: Property['key'] | string,\n  value: Property['value']\n): Property {\n  return {\n    type: NodeTypes.JS_PROPERTY,\n    loc: locStub,\n    key: isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  }\n}\n\nexport function createSimpleExpression(\n  content: SimpleExpressionNode['content'],\n  isStatic: SimpleExpressionNode['isStatic'] = false,\n  loc: SourceLocation = locStub,\n  constType: ConstantTypes = ConstantTypes.NOT_CONSTANT\n): SimpleExpressionNode {\n  return {\n    type: NodeTypes.SIMPLE_EXPRESSION,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? ConstantTypes.CAN_STRINGIFY : constType\n  }\n}\n\nexport function createInterpolation(\n  content: InterpolationNode['content'] | string,\n  loc: SourceLocation\n): InterpolationNode {\n  return {\n    type: NodeTypes.INTERPOLATION,\n    loc,\n    content: isString(content)\n      ? createSimpleExpression(content, false, loc)\n      : content\n  }\n}\n\nexport function createCompoundExpression(\n  children: CompoundExpressionNode['children'],\n  loc: SourceLocation = locStub\n): CompoundExpressionNode {\n  return {\n    type: NodeTypes.COMPOUND_EXPRESSION,\n    loc,\n    children\n  }\n}\n\ntype InferCodegenNodeType<T> = T extends typeof RENDER_SLOT\n  ? RenderSlotCall\n  : CallExpression\n\nexport function createCallExpression<T extends CallExpression['callee']>(\n  callee: T,\n  args: CallExpression['arguments'] = [],\n  loc: SourceLocation = locStub\n): InferCodegenNodeType<T> {\n  return {\n    type: NodeTypes.JS_CALL_EXPRESSION,\n    loc,\n    callee,\n    arguments: args\n  } as InferCodegenNodeType<T>\n}\n\nexport function createFunctionExpression(\n  params: FunctionExpression['params'],\n  returns: FunctionExpression['returns'] = undefined,\n  newline: boolean = false,\n  isSlot: boolean = false,\n  loc: SourceLocation = locStub\n): FunctionExpression {\n  return {\n    type: NodeTypes.JS_FUNCTION_EXPRESSION,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  }\n}\n\nexport function createConditionalExpression(\n  test: ConditionalExpression['test'],\n  consequent: ConditionalExpression['consequent'],\n  alternate: ConditionalExpression['alternate'],\n  newline = true\n): ConditionalExpression {\n  return {\n    type: NodeTypes.JS_CONDITIONAL_EXPRESSION,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  }\n}\n\nexport function createCacheExpression(\n  index: number,\n  value: JSChildNode,\n  isVNode: boolean = false\n): CacheExpression {\n  return {\n    type: NodeTypes.JS_CACHE_EXPRESSION,\n    index,\n    value,\n    isVNode,\n    loc: locStub\n  }\n}\n\nexport function createBlockStatement(\n  body: BlockStatement['body']\n): BlockStatement {\n  return {\n    type: NodeTypes.JS_BLOCK_STATEMENT,\n    body,\n    loc: locStub\n  }\n}\n\nexport function createTemplateLiteral(\n  elements: TemplateLiteral['elements']\n): TemplateLiteral {\n  return {\n    type: NodeTypes.JS_TEMPLATE_LITERAL,\n    elements,\n    loc: locStub\n  }\n}\n\nexport function createIfStatement(\n  test: IfStatement['test'],\n  consequent: IfStatement['consequent'],\n  alternate?: IfStatement['alternate']\n): IfStatement {\n  return {\n    type: NodeTypes.JS_IF_STATEMENT,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  }\n}\n\nexport function createAssignmentExpression(\n  left: AssignmentExpression['left'],\n  right: AssignmentExpression['right']\n): AssignmentExpression {\n  return {\n    type: NodeTypes.JS_ASSIGNMENT_EXPRESSION,\n    left,\n    right,\n    loc: locStub\n  }\n}\n\nexport function createSequenceExpression(\n  expressions: SequenceExpression['expressions']\n): SequenceExpression {\n  return {\n    type: NodeTypes.JS_SEQUENCE_EXPRESSION,\n    expressions,\n    loc: locStub\n  }\n}\n\nexport function createReturnStatement(\n  returns: ReturnStatement['returns']\n): ReturnStatement {\n  return {\n    type: NodeTypes.JS_RETURN_STATEMENT,\n    returns,\n    loc: locStub\n  }\n}\n\nexport function getVNodeHelper(ssr: boolean, isComponent: boolean) {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE\n}\n\nexport function getVNodeBlockHelper(ssr: boolean, isComponent: boolean) {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK\n}\n\nexport function convertToBlock(\n  node: VNodeCall,\n  { helper, removeHelper, inSSR }: TransformContext\n) {\n  if (!node.isBlock) {\n    node.isBlock = true\n    removeHelper(getVNodeHelper(inSSR, node.isComponent))\n    helper(OPEN_BLOCK)\n    helper(getVNodeBlockHelper(inSSR, node.isComponent))\n  }\n}\n", "import {\n  SourceLocation,\n  Position,\n  ElementNode,\n  NodeTypes,\n  CallExpression,\n  createCallExpression,\n  DirectiveNode,\n  ElementTypes,\n  TemplateChildNode,\n  RootNode,\n  ObjectExpression,\n  Property,\n  JSChildNode,\n  createObjectExpression,\n  SlotOutletNode,\n  TemplateNode,\n  RenderSlotCall,\n  ExpressionNode,\n  IfBranchNode,\n  TextNode,\n  InterpolationNode,\n  VNodeCall,\n  SimpleExpressionNode,\n  BlockCodegenNode,\n  MemoExpression\n} from './ast'\nimport { TransformContext } from './transform'\nimport {\n  MERGE_PROPS,\n  TELEPORT,\n  SUSPENSE,\n  KEEP_ALIVE,\n  BASE_TRANSITION,\n  TO_HANDLERS,\n  NORMALIZE_PROPS,\n  GUARD_REACTIVE_PROPS,\n  WITH_MEMO\n} from './runtimeHelpers'\nimport { isString, isObject, hyphenate, extend, NOOP } from '@vue/shared'\nimport { PropsExpression } from './transforms/transformElement'\nimport { parseExpression } from '@babel/parser'\nimport { Expression } from '@babel/types'\n\nexport const isStaticExp = (p: JSChildNode): p is SimpleExpressionNode =>\n  p.type === NodeTypes.SIMPLE_EXPRESSION && p.isStatic\n\nexport const isBuiltInType = (tag: string, expected: string): boolean =>\n  tag === expected || tag === hyphenate(expected)\n\nexport function isCoreComponent(tag: string): symbol | void {\n  if (isBuiltInType(tag, 'Teleport')) {\n    return TELEPORT\n  } else if (isBuiltInType(tag, 'Suspense')) {\n    return SUSPENSE\n  } else if (isBuiltInType(tag, 'KeepAlive')) {\n    return KEEP_ALIVE\n  } else if (isBuiltInType(tag, 'BaseTransition')) {\n    return BASE_TRANSITION\n  }\n}\n\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/\nexport const isSimpleIdentifier = (name: string): boolean =>\n  !nonIdentifierRE.test(name)\n\nconst enum MemberExpLexState {\n  inMemberExp,\n  inBrackets,\n  inParens,\n  inString\n}\n\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g\n\n/**\n * Simple lexer to check if an expression is a member expression. This is\n * lax and only checks validity at the root level (i.e. does not validate exps\n * inside square brackets), but it's ok since these are only used on template\n * expressions and false positives are invalid expressions in the first place.\n */\nexport const isMemberExpressionBrowser = (path: string): boolean => {\n  // remove whitespaces around . or [ first\n  path = path.trim().replace(whitespaceRE, s => s.trim())\n\n  let state = MemberExpLexState.inMemberExp\n  let stateStack: MemberExpLexState[] = []\n  let currentOpenBracketCount = 0\n  let currentOpenParensCount = 0\n  let currentStringType: \"'\" | '\"' | '`' | null = null\n\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i)\n    switch (state) {\n      case MemberExpLexState.inMemberExp:\n        if (char === '[') {\n          stateStack.push(state)\n          state = MemberExpLexState.inBrackets\n          currentOpenBracketCount++\n        } else if (char === '(') {\n          stateStack.push(state)\n          state = MemberExpLexState.inParens\n          currentOpenParensCount++\n        } else if (\n          !(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)\n        ) {\n          return false\n        }\n        break\n      case MemberExpLexState.inBrackets:\n        if (char === `'` || char === `\"` || char === '`') {\n          stateStack.push(state)\n          state = MemberExpLexState.inString\n          currentStringType = char\n        } else if (char === `[`) {\n          currentOpenBracketCount++\n        } else if (char === `]`) {\n          if (!--currentOpenBracketCount) {\n            state = stateStack.pop()!\n          }\n        }\n        break\n      case MemberExpLexState.inParens:\n        if (char === `'` || char === `\"` || char === '`') {\n          stateStack.push(state)\n          state = MemberExpLexState.inString\n          currentStringType = char\n        } else if (char === `(`) {\n          currentOpenParensCount++\n        } else if (char === `)`) {\n          // if the exp ends as a call then it should not be considered valid\n          if (i === path.length - 1) {\n            return false\n          }\n          if (!--currentOpenParensCount) {\n            state = stateStack.pop()!\n          }\n        }\n        break\n      case MemberExpLexState.inString:\n        if (char === currentStringType) {\n          state = stateStack.pop()!\n          currentStringType = null\n        }\n        break\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount\n}\n\nexport const isMemberExpressionNode = __BROWSER__\n  ? (NOOP as any as (path: string, context: TransformContext) => boolean)\n  : (path: string, context: TransformContext): boolean => {\n      try {\n        let ret: Expression = parseExpression(path, {\n          plugins: context.expressionPlugins\n        })\n        if (ret.type === 'TSAsExpression' || ret.type === 'TSTypeAssertion') {\n          ret = ret.expression\n        }\n        return (\n          ret.type === 'MemberExpression' ||\n          ret.type === 'OptionalMemberExpression' ||\n          ret.type === 'Identifier'\n        )\n      } catch (e) {\n        return false\n      }\n    }\n\nexport const isMemberExpression = __BROWSER__\n  ? isMemberExpressionBrowser\n  : isMemberExpressionNode\n\nexport function getInnerRange(\n  loc: SourceLocation,\n  offset: number,\n  length: number\n): SourceLocation {\n  __TEST__ && assert(offset <= loc.source.length)\n  const source = loc.source.slice(offset, offset + length)\n  const newLoc: SourceLocation = {\n    source,\n    start: advancePositionWithClone(loc.start, loc.source, offset),\n    end: loc.end\n  }\n\n  if (length != null) {\n    __TEST__ && assert(offset + length <= loc.source.length)\n    newLoc.end = advancePositionWithClone(\n      loc.start,\n      loc.source,\n      offset + length\n    )\n  }\n\n  return newLoc\n}\n\nexport function advancePositionWithClone(\n  pos: Position,\n  source: string,\n  numberOfCharacters: number = source.length\n): Position {\n  return advancePositionWithMutation(\n    extend({}, pos),\n    source,\n    numberOfCharacters\n  )\n}\n\n// advance by mutation without cloning (for performance reasons), since this\n// gets called a lot in the parser\nexport function advancePositionWithMutation(\n  pos: Position,\n  source: string,\n  numberOfCharacters: number = source.length\n): Position {\n  let linesCount = 0\n  let lastNewLinePos = -1\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10 /* newline char code */) {\n      linesCount++\n      lastNewLinePos = i\n    }\n  }\n\n  pos.offset += numberOfCharacters\n  pos.line += linesCount\n  pos.column =\n    lastNewLinePos === -1\n      ? pos.column + numberOfCharacters\n      : numberOfCharacters - lastNewLinePos\n\n  return pos\n}\n\nexport function assert(condition: boolean, msg?: string) {\n  /* istanbul ignore if */\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`)\n  }\n}\n\nexport function findDir(\n  node: ElementNode,\n  name: string | RegExp,\n  allowEmpty: boolean = false\n): DirectiveNode | undefined {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i]\n    if (\n      p.type === NodeTypes.DIRECTIVE &&\n      (allowEmpty || p.exp) &&\n      (isString(name) ? p.name === name : name.test(p.name))\n    ) {\n      return p\n    }\n  }\n}\n\nexport function findProp(\n  node: ElementNode,\n  name: string,\n  dynamicOnly: boolean = false,\n  allowEmpty: boolean = false\n): ElementNode['props'][0] | undefined {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i]\n    if (p.type === NodeTypes.ATTRIBUTE) {\n      if (dynamicOnly) continue\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p\n      }\n    } else if (\n      p.name === 'bind' &&\n      (p.exp || allowEmpty) &&\n      isStaticArgOf(p.arg, name)\n    ) {\n      return p\n    }\n  }\n}\n\nexport function isStaticArgOf(\n  arg: DirectiveNode['arg'],\n  name: string\n): boolean {\n  return !!(arg && isStaticExp(arg) && arg.content === name)\n}\n\nexport function hasDynamicKeyVBind(node: ElementNode): boolean {\n  return node.props.some(\n    p =>\n      p.type === NodeTypes.DIRECTIVE &&\n      p.name === 'bind' &&\n      (!p.arg || // v-bind=\"obj\"\n        p.arg.type !== NodeTypes.SIMPLE_EXPRESSION || // v-bind:[_ctx.foo]\n        !p.arg.isStatic) // v-bind:[foo]\n  )\n}\n\nexport function isText(\n  node: TemplateChildNode\n): node is TextNode | InterpolationNode {\n  return node.type === NodeTypes.INTERPOLATION || node.type === NodeTypes.TEXT\n}\n\nexport function isVSlot(p: ElementNode['props'][0]): p is DirectiveNode {\n  return p.type === NodeTypes.DIRECTIVE && p.name === 'slot'\n}\n\nexport function isTemplateNode(\n  node: RootNode | TemplateChildNode\n): node is TemplateNode {\n  return (\n    node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.TEMPLATE\n  )\n}\n\nexport function isSlotOutlet(\n  node: RootNode | TemplateChildNode\n): node is SlotOutletNode {\n  return node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.SLOT\n}\n\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS])\n\nfunction getUnnormalizedProps(\n  props: PropsExpression | '{}',\n  callPath: CallExpression[] = []\n): [PropsExpression | '{}', CallExpression[]] {\n  if (\n    props &&\n    !isString(props) &&\n    props.type === NodeTypes.JS_CALL_EXPRESSION\n  ) {\n    const callee = props.callee\n    if (!isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(\n        props.arguments[0] as PropsExpression,\n        callPath.concat(props)\n      )\n    }\n  }\n  return [props, callPath]\n}\nexport function injectProp(\n  node: VNodeCall | RenderSlotCall,\n  prop: Property,\n  context: TransformContext\n) {\n  let propsWithInjection: ObjectExpression | CallExpression | undefined\n  /**\n   * 1. mergeProps(...)\n   * 2. toHandlers(...)\n   * 3. normalizeProps(...)\n   * 4. normalizeProps(guardReactiveProps(...))\n   *\n   * we need to get the real props before normalization\n   */\n  let props =\n    node.type === NodeTypes.VNODE_CALL ? node.props : node.arguments[2]\n  let callPath: CallExpression[] = []\n  let parentCall: CallExpression | undefined\n  if (\n    props &&\n    !isString(props) &&\n    props.type === NodeTypes.JS_CALL_EXPRESSION\n  ) {\n    const ret = getUnnormalizedProps(props)\n    props = ret[0]\n    callPath = ret[1]\n    parentCall = callPath[callPath.length - 1]\n  }\n\n  if (props == null || isString(props)) {\n    propsWithInjection = createObjectExpression([prop])\n  } else if (props.type === NodeTypes.JS_CALL_EXPRESSION) {\n    // merged props... add ours\n    // only inject key to object literal if it's the first argument so that\n    // if doesn't override user provided keys\n    const first = props.arguments[0] as string | JSChildNode\n    if (!isString(first) && first.type === NodeTypes.JS_OBJECT_EXPRESSION) {\n      // #6631\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop)\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        // #2366\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n          createObjectExpression([prop]),\n          props\n        ])\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]))\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props)\n  } else if (props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop)\n    }\n    propsWithInjection = props\n  } else {\n    // single v-bind with expression, return a merged replacement\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n      createObjectExpression([prop]),\n      props\n    ])\n    // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\n    // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\n    // the `guardReactiveProps` will no longer be needed\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2]\n    }\n  }\n  if (node.type === NodeTypes.VNODE_CALL) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection\n    } else {\n      node.props = propsWithInjection\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection\n    } else {\n      node.arguments[2] = propsWithInjection\n    }\n  }\n}\n\n// check existing key to avoid overriding user provided keys\nfunction hasProp(prop: Property, props: ObjectExpression) {\n  let result = false\n  if (prop.key.type === NodeTypes.SIMPLE_EXPRESSION) {\n    const propKeyName = prop.key.content\n    result = props.properties.some(\n      p =>\n        p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\n        p.key.content === propKeyName\n    )\n  }\n  return result\n}\n\nexport function toValidAssetId(\n  name: string,\n  type: 'component' | 'directive' | 'filter'\n): string {\n  // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString()\n  })}`\n}\n\n// Check if a node contains expressions that reference current context scope ids\nexport function hasScopeRef(\n  node: TemplateChildNode | IfBranchNode | ExpressionNode | undefined,\n  ids: TransformContext['identifiers']\n): boolean {\n  if (!node || Object.keys(ids).length === 0) {\n    return false\n  }\n  switch (node.type) {\n    case NodeTypes.ELEMENT:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i]\n        if (\n          p.type === NodeTypes.DIRECTIVE &&\n          (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))\n        ) {\n          return true\n        }\n      }\n      return node.children.some(c => hasScopeRef(c, ids))\n    case NodeTypes.FOR:\n      if (hasScopeRef(node.source, ids)) {\n        return true\n      }\n      return node.children.some(c => hasScopeRef(c, ids))\n    case NodeTypes.IF:\n      return node.branches.some(b => hasScopeRef(b, ids))\n    case NodeTypes.IF_BRANCH:\n      if (hasScopeRef(node.condition, ids)) {\n        return true\n      }\n      return node.children.some(c => hasScopeRef(c, ids))\n    case NodeTypes.SIMPLE_EXPRESSION:\n      return (\n        !node.isStatic &&\n        isSimpleIdentifier(node.content) &&\n        !!ids[node.content]\n      )\n    case NodeTypes.COMPOUND_EXPRESSION:\n      return node.children.some(c => isObject(c) && hasScopeRef(c, ids))\n    case NodeTypes.INTERPOLATION:\n    case NodeTypes.TEXT_CALL:\n      return hasScopeRef(node.content, ids)\n    case NodeTypes.TEXT:\n    case NodeTypes.COMMENT:\n      return false\n    default:\n      if (__DEV__) {\n        const exhaustiveCheck: never = node\n        exhaustiveCheck\n      }\n      return false\n  }\n}\n\nexport function getMemoedVNodeCall(node: BlockCodegenNode | MemoExpression) {\n  if (node.type === NodeTypes.JS_CALL_EXPRESSION && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns as VNodeCall\n  } else {\n    return node\n  }\n}\n", "import { ErrorHandlingOptions, ParserOptions } from './options'\nimport { NO, isArray, makeMap, extend } from '@vue/shared'\nimport {\n  ErrorCodes,\n  createCompilerError,\n  defaultOnError,\n  defaultOnWarn\n} from './errors'\nimport {\n  assert,\n  advancePositionWithMutation,\n  advancePositionWithClone,\n  isCoreComponent,\n  isStaticArgOf\n} from './utils'\nimport {\n  Namespaces,\n  AttributeNode,\n  CommentNode,\n  DirectiveNode,\n  ElementNode,\n  ElementTypes,\n  ExpressionNode,\n  NodeTypes,\n  Position,\n  RootNode,\n  SourceLocation,\n  TextNode,\n  TemplateChildNode,\n  InterpolationNode,\n  createRoot,\n  ConstantTypes\n} from './ast'\nimport {\n  checkCompatEnabled,\n  CompilerCompatOptions,\n  CompilerDeprecationTypes,\n  isCompatEnabled,\n  warnDeprecation\n} from './compat/compatConfig'\n\ntype OptionalOptions =\n  | 'whitespace'\n  | 'isNativeTag'\n  | 'isBuiltInComponent'\n  | keyof CompilerCompatOptions\ntype MergedParserOptions = Omit<Required<ParserOptions>, OptionalOptions> &\n  Pick<ParserOptions, OptionalOptions>\ntype AttributeValue =\n  | {\n      content: string\n      isQuoted: boolean\n      loc: SourceLocation\n    }\n  | undefined\n\n// The default decoder only provides escapes for characters reserved as part of\n// the template syntax, and is only used if the custom renderer did not provide\n// a platform-specific decoder.\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g\nconst decodeMap: Record<string, string> = {\n  gt: '>',\n  lt: '<',\n  amp: '&',\n  apos: \"'\",\n  quot: '\"'\n}\n\nexport const defaultParserOptions: MergedParserOptions = {\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => Namespaces.HTML,\n  getTextMode: () => TextModes.DATA,\n  isVoidTag: NO,\n  isPreTag: NO,\n  isCustomElement: NO,\n  decodeEntities: (rawText: string): string =>\n    rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: __DEV__\n}\n\nexport const enum TextModes {\n  //          | Elements | Entities | End sign              | Inside of\n  DATA, //    | \u2714        | \u2714        | End tags of ancestors |\n  RCDATA, //  | \u2718        | \u2714        | End tag of the parent | <textarea>\n  RAWTEXT, // | \u2718        | \u2718        | End tag of the parent | <style>,<script>\n  CDATA,\n  ATTRIBUTE_VALUE\n}\n\nexport interface ParserContext {\n  options: MergedParserOptions\n  readonly originalSource: string\n  source: string\n  offset: number\n  line: number\n  column: number\n  inPre: boolean // HTML <pre> tag, preserve whitespaces\n  inVPre: boolean // v-pre, do not process directives and interpolations\n  onWarn: NonNullable<ErrorHandlingOptions['onWarn']>\n}\n\nexport function baseParse(\n  content: string,\n  options: ParserOptions = {}\n): RootNode {\n  const context = createParserContext(content, options)\n  const start = getCursor(context)\n  return createRoot(\n    parseChildren(context, TextModes.DATA, []),\n    getSelection(context, start)\n  )\n}\n\nfunction createParserContext(\n  content: string,\n  rawOptions: ParserOptions\n): ParserContext {\n  const options = extend({}, defaultParserOptions)\n\n  let key: keyof ParserOptions\n  for (key in rawOptions) {\n    // @ts-ignore\n    options[key] =\n      rawOptions[key] === undefined\n        ? defaultParserOptions[key]\n        : rawOptions[key]\n  }\n  return {\n    options,\n    column: 1,\n    line: 1,\n    offset: 0,\n    originalSource: content,\n    source: content,\n    inPre: false,\n    inVPre: false,\n    onWarn: options.onWarn\n  }\n}\n\nfunction parseChildren(\n  context: ParserContext,\n  mode: TextModes,\n  ancestors: ElementNode[]\n): TemplateChildNode[] {\n  const parent = last(ancestors)\n  const ns = parent ? parent.ns : Namespaces.HTML\n  const nodes: TemplateChildNode[] = []\n\n  while (!isEnd(context, mode, ancestors)) {\n    __TEST__ && assert(context.source.length > 0)\n    const s = context.source\n    let node: TemplateChildNode | TemplateChildNode[] | undefined = undefined\n\n    if (mode === TextModes.DATA || mode === TextModes.RCDATA) {\n      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\n        // '{{'\n        node = parseInterpolation(context, mode)\n      } else if (mode === TextModes.DATA && s[0] === '<') {\n        // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\n        if (s.length === 1) {\n          emitError(context, ErrorCodes.EOF_BEFORE_TAG_NAME, 1)\n        } else if (s[1] === '!') {\n          // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\n          if (startsWith(s, '<!--')) {\n            node = parseComment(context)\n          } else if (startsWith(s, '<!DOCTYPE')) {\n            // Ignore DOCTYPE by a limitation.\n            node = parseBogusComment(context)\n          } else if (startsWith(s, '<![CDATA[')) {\n            if (ns !== Namespaces.HTML) {\n              node = parseCDATA(context, ancestors)\n            } else {\n              emitError(context, ErrorCodes.CDATA_IN_HTML_CONTENT)\n              node = parseBogusComment(context)\n            }\n          } else {\n            emitError(context, ErrorCodes.INCORRECTLY_OPENED_COMMENT)\n            node = parseBogusComment(context)\n          }\n        } else if (s[1] === '/') {\n          // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\n          if (s.length === 2) {\n            emitError(context, ErrorCodes.EOF_BEFORE_TAG_NAME, 2)\n          } else if (s[2] === '>') {\n            emitError(context, ErrorCodes.MISSING_END_TAG_NAME, 2)\n            advanceBy(context, 3)\n            continue\n          } else if (/[a-z]/i.test(s[2])) {\n            emitError(context, ErrorCodes.X_INVALID_END_TAG)\n            parseTag(context, TagType.End, parent)\n            continue\n          } else {\n            emitError(\n              context,\n              ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME,\n              2\n            )\n            node = parseBogusComment(context)\n          }\n        } else if (/[a-z]/i.test(s[1])) {\n          node = parseElement(context, ancestors)\n\n          // 2.x <template> with no directive compat\n          if (\n            __COMPAT__ &&\n            isCompatEnabled(\n              CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\n              context\n            ) &&\n            node &&\n            node.tag === 'template' &&\n            !node.props.some(\n              p =>\n                p.type === NodeTypes.DIRECTIVE &&\n                isSpecialTemplateDirective(p.name)\n            )\n          ) {\n            __DEV__ &&\n              warnDeprecation(\n                CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\n                context,\n                node.loc\n              )\n            node = node.children\n          }\n        } else if (s[1] === '?') {\n          emitError(\n            context,\n            ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\n            1\n          )\n          node = parseBogusComment(context)\n        } else {\n          emitError(context, ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME, 1)\n        }\n      }\n    }\n    if (!node) {\n      node = parseText(context, mode)\n    }\n\n    if (isArray(node)) {\n      for (let i = 0; i < node.length; i++) {\n        pushNode(nodes, node[i])\n      }\n    } else {\n      pushNode(nodes, node)\n    }\n  }\n\n  // Whitespace handling strategy like v2\n  let removedWhitespace = false\n  if (mode !== TextModes.RAWTEXT && mode !== TextModes.RCDATA) {\n    const shouldCondense = context.options.whitespace !== 'preserve'\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i]\n      if (node.type === NodeTypes.TEXT) {\n        if (!context.inPre) {\n          if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\n            const prev = nodes[i - 1]\n            const next = nodes[i + 1]\n            // Remove if:\n            // - the whitespace is the first or last node, or:\n            // - (condense mode) the whitespace is between twos comments, or:\n            // - (condense mode) the whitespace is between comment and element, or:\n            // - (condense mode) the whitespace is between two elements AND contains newline\n            if (\n              !prev ||\n              !next ||\n              (shouldCondense &&\n                ((prev.type === NodeTypes.COMMENT &&\n                  next.type === NodeTypes.COMMENT) ||\n                  (prev.type === NodeTypes.COMMENT &&\n                    next.type === NodeTypes.ELEMENT) ||\n                  (prev.type === NodeTypes.ELEMENT &&\n                    next.type === NodeTypes.COMMENT) ||\n                  (prev.type === NodeTypes.ELEMENT &&\n                    next.type === NodeTypes.ELEMENT &&\n                    /[\\r\\n]/.test(node.content))))\n            ) {\n              removedWhitespace = true\n              nodes[i] = null as any\n            } else {\n              // Otherwise, the whitespace is condensed into a single space\n              node.content = ' '\n            }\n          } else if (shouldCondense) {\n            // in condense mode, consecutive whitespaces in text are condensed\n            // down to a single space.\n            node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ')\n          }\n        } else {\n          // #6410 normalize windows newlines in <pre>:\n          // in SSR, browsers normalize server-rendered \\r\\n into a single \\n\n          // in the DOM\n          node.content = node.content.replace(/\\r\\n/g, '\\n')\n        }\n      }\n      // Remove comment nodes if desired by configuration.\n      else if (node.type === NodeTypes.COMMENT && !context.options.comments) {\n        removedWhitespace = true\n        nodes[i] = null as any\n      }\n    }\n    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\n      // remove leading newline per html spec\n      // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\n      const first = nodes[0]\n      if (first && first.type === NodeTypes.TEXT) {\n        first.content = first.content.replace(/^\\r?\\n/, '')\n      }\n    }\n  }\n\n  return removedWhitespace ? nodes.filter(Boolean) : nodes\n}\n\nfunction pushNode(nodes: TemplateChildNode[], node: TemplateChildNode): void {\n  if (node.type === NodeTypes.TEXT) {\n    const prev = last(nodes)\n    // Merge if both this and the previous node are text and those are\n    // consecutive. This happens for cases like \"a < b\".\n    if (\n      prev &&\n      prev.type === NodeTypes.TEXT &&\n      prev.loc.end.offset === node.loc.start.offset\n    ) {\n      prev.content += node.content\n      prev.loc.end = node.loc.end\n      prev.loc.source += node.loc.source\n      return\n    }\n  }\n\n  nodes.push(node)\n}\n\nfunction parseCDATA(\n  context: ParserContext,\n  ancestors: ElementNode[]\n): TemplateChildNode[] {\n  __TEST__ &&\n    assert(last(ancestors) == null || last(ancestors)!.ns !== Namespaces.HTML)\n  __TEST__ && assert(startsWith(context.source, '<![CDATA['))\n\n  advanceBy(context, 9)\n  const nodes = parseChildren(context, TextModes.CDATA, ancestors)\n  if (context.source.length === 0) {\n    emitError(context, ErrorCodes.EOF_IN_CDATA)\n  } else {\n    __TEST__ && assert(startsWith(context.source, ']]>'))\n    advanceBy(context, 3)\n  }\n\n  return nodes\n}\n\nfunction parseComment(context: ParserContext): CommentNode {\n  __TEST__ && assert(startsWith(context.source, '<!--'))\n\n  const start = getCursor(context)\n  let content: string\n\n  // Regular comment.\n  const match = /--(\\!)?>/.exec(context.source)\n  if (!match) {\n    content = context.source.slice(4)\n    advanceBy(context, context.source.length)\n    emitError(context, ErrorCodes.EOF_IN_COMMENT)\n  } else {\n    if (match.index <= 3) {\n      emitError(context, ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT)\n    }\n    if (match[1]) {\n      emitError(context, ErrorCodes.INCORRECTLY_CLOSED_COMMENT)\n    }\n    content = context.source.slice(4, match.index)\n\n    // Advancing with reporting nested comments.\n    const s = context.source.slice(0, match.index)\n    let prevIndex = 1,\n      nestedIndex = 0\n    while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\n      advanceBy(context, nestedIndex - prevIndex + 1)\n      if (nestedIndex + 4 < s.length) {\n        emitError(context, ErrorCodes.NESTED_COMMENT)\n      }\n      prevIndex = nestedIndex + 1\n    }\n    advanceBy(context, match.index + match[0].length - prevIndex + 1)\n  }\n\n  return {\n    type: NodeTypes.COMMENT,\n    content,\n    loc: getSelection(context, start)\n  }\n}\n\nfunction parseBogusComment(context: ParserContext): CommentNode | undefined {\n  __TEST__ && assert(/^<(?:[\\!\\?]|\\/[^a-z>])/i.test(context.source))\n\n  const start = getCursor(context)\n  const contentStart = context.source[1] === '?' ? 1 : 2\n  let content: string\n\n  const closeIndex = context.source.indexOf('>')\n  if (closeIndex === -1) {\n    content = context.source.slice(contentStart)\n    advanceBy(context, context.source.length)\n  } else {\n    content = context.source.slice(contentStart, closeIndex)\n    advanceBy(context, closeIndex + 1)\n  }\n\n  return {\n    type: NodeTypes.COMMENT,\n    content,\n    loc: getSelection(context, start)\n  }\n}\n\nfunction parseElement(\n  context: ParserContext,\n  ancestors: ElementNode[]\n): ElementNode | undefined {\n  __TEST__ && assert(/^<[a-z]/i.test(context.source))\n\n  // Start tag.\n  const wasInPre = context.inPre\n  const wasInVPre = context.inVPre\n  const parent = last(ancestors)\n  const element = parseTag(context, TagType.Start, parent)\n  const isPreBoundary = context.inPre && !wasInPre\n  const isVPreBoundary = context.inVPre && !wasInVPre\n\n  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\n    // #4030 self-closing <pre> tag\n    if (isPreBoundary) {\n      context.inPre = false\n    }\n    if (isVPreBoundary) {\n      context.inVPre = false\n    }\n    return element\n  }\n\n  // Children.\n  ancestors.push(element)\n  const mode = context.options.getTextMode(element, parent)\n  const children = parseChildren(context, mode, ancestors)\n  ancestors.pop()\n\n  // 2.x inline-template compat\n  if (__COMPAT__) {\n    const inlineTemplateProp = element.props.find(\n      p => p.type === NodeTypes.ATTRIBUTE && p.name === 'inline-template'\n    ) as AttributeNode\n    if (\n      inlineTemplateProp &&\n      checkCompatEnabled(\n        CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE,\n        context,\n        inlineTemplateProp.loc\n      )\n    ) {\n      const loc = getSelection(context, element.loc.end)\n      inlineTemplateProp.value = {\n        type: NodeTypes.TEXT,\n        content: loc.source,\n        loc\n      }\n    }\n  }\n\n  element.children = children\n\n  // End tag.\n  if (startsWithEndTagOpen(context.source, element.tag)) {\n    parseTag(context, TagType.End, parent)\n  } else {\n    emitError(context, ErrorCodes.X_MISSING_END_TAG, 0, element.loc.start)\n    if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\n      const first = children[0]\n      if (first && startsWith(first.loc.source, '<!--')) {\n        emitError(context, ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT)\n      }\n    }\n  }\n\n  element.loc = getSelection(context, element.loc.start)\n\n  if (isPreBoundary) {\n    context.inPre = false\n  }\n  if (isVPreBoundary) {\n    context.inVPre = false\n  }\n  return element\n}\n\nconst enum TagType {\n  Start,\n  End\n}\n\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(\n  `if,else,else-if,for,slot`\n)\n\n/**\n * Parse a tag (E.g. `<div id=a>`) with that type (start tag or end tag).\n */\nfunction parseTag(\n  context: ParserContext,\n  type: TagType.Start,\n  parent: ElementNode | undefined\n): ElementNode\nfunction parseTag(\n  context: ParserContext,\n  type: TagType.End,\n  parent: ElementNode | undefined\n): void\nfunction parseTag(\n  context: ParserContext,\n  type: TagType,\n  parent: ElementNode | undefined\n): ElementNode | undefined {\n  __TEST__ && assert(/^<\\/?[a-z]/i.test(context.source))\n  __TEST__ &&\n    assert(\n      type === (startsWith(context.source, '</') ? TagType.End : TagType.Start)\n    )\n\n  // Tag open.\n  const start = getCursor(context)\n  const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source)!\n  const tag = match[1]\n  const ns = context.options.getNamespace(tag, parent)\n\n  advanceBy(context, match[0].length)\n  advanceSpaces(context)\n\n  // save current state in case we need to re-parse attributes with v-pre\n  const cursor = getCursor(context)\n  const currentSource = context.source\n\n  // check <pre> tag\n  if (context.options.isPreTag(tag)) {\n    context.inPre = true\n  }\n\n  // Attributes.\n  let props = parseAttributes(context, type)\n\n  // check v-pre\n  if (\n    type === TagType.Start &&\n    !context.inVPre &&\n    props.some(p => p.type === NodeTypes.DIRECTIVE && p.name === 'pre')\n  ) {\n    context.inVPre = true\n    // reset context\n    extend(context, cursor)\n    context.source = currentSource\n    // re-parse attrs and filter out v-pre itself\n    props = parseAttributes(context, type).filter(p => p.name !== 'v-pre')\n  }\n\n  // Tag close.\n  let isSelfClosing = false\n  if (context.source.length === 0) {\n    emitError(context, ErrorCodes.EOF_IN_TAG)\n  } else {\n    isSelfClosing = startsWith(context.source, '/>')\n    if (type === TagType.End && isSelfClosing) {\n      emitError(context, ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS)\n    }\n    advanceBy(context, isSelfClosing ? 2 : 1)\n  }\n\n  if (type === TagType.End) {\n    return\n  }\n\n  // 2.x deprecation checks\n  if (\n    __COMPAT__ &&\n    __DEV__ &&\n    isCompatEnabled(\n      CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\n      context\n    )\n  ) {\n    let hasIf = false\n    let hasFor = false\n    for (let i = 0; i < props.length; i++) {\n      const p = props[i]\n      if (p.type === NodeTypes.DIRECTIVE) {\n        if (p.name === 'if') {\n          hasIf = true\n        } else if (p.name === 'for') {\n          hasFor = true\n        }\n      }\n      if (hasIf && hasFor) {\n        warnDeprecation(\n          CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\n          context,\n          getSelection(context, start)\n        )\n        break\n      }\n    }\n  }\n\n  let tagType = ElementTypes.ELEMENT\n  if (!context.inVPre) {\n    if (tag === 'slot') {\n      tagType = ElementTypes.SLOT\n    } else if (tag === 'template') {\n      if (\n        props.some(\n          p =>\n            p.type === NodeTypes.DIRECTIVE && isSpecialTemplateDirective(p.name)\n        )\n      ) {\n        tagType = ElementTypes.TEMPLATE\n      }\n    } else if (isComponent(tag, props, context)) {\n      tagType = ElementTypes.COMPONENT\n    }\n  }\n\n  return {\n    type: NodeTypes.ELEMENT,\n    ns,\n    tag,\n    tagType,\n    props,\n    isSelfClosing,\n    children: [],\n    loc: getSelection(context, start),\n    codegenNode: undefined // to be created during transform phase\n  }\n}\n\nfunction isComponent(\n  tag: string,\n  props: (AttributeNode | DirectiveNode)[],\n  context: ParserContext\n) {\n  const options = context.options\n  if (options.isCustomElement(tag)) {\n    return false\n  }\n  if (\n    tag === 'component' ||\n    /^[A-Z]/.test(tag) ||\n    isCoreComponent(tag) ||\n    (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\n    (options.isNativeTag && !options.isNativeTag(tag))\n  ) {\n    return true\n  }\n  // at this point the tag should be a native tag, but check for potential \"is\"\n  // casting\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i]\n    if (p.type === NodeTypes.ATTRIBUTE) {\n      if (p.name === 'is' && p.value) {\n        if (p.value.content.startsWith('vue:')) {\n          return true\n        } else if (\n          __COMPAT__ &&\n          checkCompatEnabled(\n            CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\n            context,\n            p.loc\n          )\n        ) {\n          return true\n        }\n      }\n    } else {\n      // directive\n      // v-is (TODO: remove in 3.4)\n      if (p.name === 'is') {\n        return true\n      } else if (\n        // :is on plain element - only treat as component in compat mode\n        p.name === 'bind' &&\n        isStaticArgOf(p.arg, 'is') &&\n        __COMPAT__ &&\n        checkCompatEnabled(\n          CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\n          context,\n          p.loc\n        )\n      ) {\n        return true\n      }\n    }\n  }\n}\n\nfunction parseAttributes(\n  context: ParserContext,\n  type: TagType\n): (AttributeNode | DirectiveNode)[] {\n  const props = []\n  const attributeNames = new Set<string>()\n  while (\n    context.source.length > 0 &&\n    !startsWith(context.source, '>') &&\n    !startsWith(context.source, '/>')\n  ) {\n    if (startsWith(context.source, '/')) {\n      emitError(context, ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG)\n      advanceBy(context, 1)\n      advanceSpaces(context)\n      continue\n    }\n    if (type === TagType.End) {\n      emitError(context, ErrorCodes.END_TAG_WITH_ATTRIBUTES)\n    }\n\n    const attr = parseAttribute(context, attributeNames)\n\n    // Trim whitespace between class\n    // https://github.com/vuejs/core/issues/4251\n    if (\n      attr.type === NodeTypes.ATTRIBUTE &&\n      attr.value &&\n      attr.name === 'class'\n    ) {\n      attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim()\n    }\n\n    if (type === TagType.Start) {\n      props.push(attr)\n    }\n\n    if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\n      emitError(context, ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES)\n    }\n    advanceSpaces(context)\n  }\n  return props\n}\n\nfunction parseAttribute(\n  context: ParserContext,\n  nameSet: Set<string>\n): AttributeNode | DirectiveNode {\n  __TEST__ && assert(/^[^\\t\\r\\n\\f />]/.test(context.source))\n\n  // Name.\n  const start = getCursor(context)\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source)!\n  const name = match[0]\n\n  if (nameSet.has(name)) {\n    emitError(context, ErrorCodes.DUPLICATE_ATTRIBUTE)\n  }\n  nameSet.add(name)\n\n  if (name[0] === '=') {\n    emitError(context, ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME)\n  }\n  {\n    const pattern = /[\"'<]/g\n    let m: RegExpExecArray | null\n    while ((m = pattern.exec(name))) {\n      emitError(\n        context,\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\n        m.index\n      )\n    }\n  }\n\n  advanceBy(context, name.length)\n\n  // Value\n  let value: AttributeValue = undefined\n\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\n    advanceSpaces(context)\n    advanceBy(context, 1)\n    advanceSpaces(context)\n    value = parseAttributeValue(context)\n    if (!value) {\n      emitError(context, ErrorCodes.MISSING_ATTRIBUTE_VALUE)\n    }\n  }\n  const loc = getSelection(context, start)\n\n  if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\n    const match =\n      /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(\n        name\n      )!\n\n    let isPropShorthand = startsWith(name, '.')\n    let dirName =\n      match[1] ||\n      (isPropShorthand || startsWith(name, ':')\n        ? 'bind'\n        : startsWith(name, '@')\n        ? 'on'\n        : 'slot')\n    let arg: ExpressionNode | undefined\n\n    if (match[2]) {\n      const isSlot = dirName === 'slot'\n      const startOffset = name.lastIndexOf(\n        match[2],\n        name.length - (match[3]?.length || 0)\n      )\n      const loc = getSelection(\n        context,\n        getNewPosition(context, start, startOffset),\n        getNewPosition(\n          context,\n          start,\n          startOffset + match[2].length + ((isSlot && match[3]) || '').length\n        )\n      )\n      let content = match[2]\n      let isStatic = true\n\n      if (content.startsWith('[')) {\n        isStatic = false\n\n        if (!content.endsWith(']')) {\n          emitError(\n            context,\n            ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\n          )\n          content = content.slice(1)\n        } else {\n          content = content.slice(1, content.length - 1)\n        }\n      } else if (isSlot) {\n        // #1241 special case for v-slot: vuetify relies extensively on slot\n        // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\n        // supports such usage so we are keeping it consistent with 2.x.\n        content += match[3] || ''\n      }\n\n      arg = {\n        type: NodeTypes.SIMPLE_EXPRESSION,\n        content,\n        isStatic,\n        constType: isStatic\n          ? ConstantTypes.CAN_STRINGIFY\n          : ConstantTypes.NOT_CONSTANT,\n        loc\n      }\n    }\n\n    if (value && value.isQuoted) {\n      const valueLoc = value.loc\n      valueLoc.start.offset++\n      valueLoc.start.column++\n      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content)\n      valueLoc.source = valueLoc.source.slice(1, -1)\n    }\n\n    const modifiers = match[3] ? match[3].slice(1).split('.') : []\n    if (isPropShorthand) modifiers.push('prop')\n\n    // 2.x compat v-bind:foo.sync -> v-model:foo\n    if (__COMPAT__ && dirName === 'bind' && arg) {\n      if (\n        modifiers.includes('sync') &&\n        checkCompatEnabled(\n          CompilerDeprecationTypes.COMPILER_V_BIND_SYNC,\n          context,\n          loc,\n          arg.loc.source\n        )\n      ) {\n        dirName = 'model'\n        modifiers.splice(modifiers.indexOf('sync'), 1)\n      }\n\n      if (__DEV__ && modifiers.includes('prop')) {\n        checkCompatEnabled(\n          CompilerDeprecationTypes.COMPILER_V_BIND_PROP,\n          context,\n          loc\n        )\n      }\n    }\n\n    return {\n      type: NodeTypes.DIRECTIVE,\n      name: dirName,\n      exp: value && {\n        type: NodeTypes.SIMPLE_EXPRESSION,\n        content: value.content,\n        isStatic: false,\n        // Treat as non-constant by default. This can be potentially set to\n        // other values by `transformExpression` to make it eligible for hoisting.\n        constType: ConstantTypes.NOT_CONSTANT,\n        loc: value.loc\n      },\n      arg,\n      modifiers,\n      loc\n    }\n  }\n\n  // missing directive name or illegal directive name\n  if (!context.inVPre && startsWith(name, 'v-')) {\n    emitError(context, ErrorCodes.X_MISSING_DIRECTIVE_NAME)\n  }\n\n  return {\n    type: NodeTypes.ATTRIBUTE,\n    name,\n    value: value && {\n      type: NodeTypes.TEXT,\n      content: value.content,\n      loc: value.loc\n    },\n    loc\n  }\n}\n\nfunction parseAttributeValue(context: ParserContext): AttributeValue {\n  const start = getCursor(context)\n  let content: string\n\n  const quote = context.source[0]\n  const isQuoted = quote === `\"` || quote === `'`\n  if (isQuoted) {\n    // Quoted value.\n    advanceBy(context, 1)\n\n    const endIndex = context.source.indexOf(quote)\n    if (endIndex === -1) {\n      content = parseTextData(\n        context,\n        context.source.length,\n        TextModes.ATTRIBUTE_VALUE\n      )\n    } else {\n      content = parseTextData(context, endIndex, TextModes.ATTRIBUTE_VALUE)\n      advanceBy(context, 1)\n    }\n  } else {\n    // Unquoted\n    const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source)\n    if (!match) {\n      return undefined\n    }\n    const unexpectedChars = /[\"'<=`]/g\n    let m: RegExpExecArray | null\n    while ((m = unexpectedChars.exec(match[0]))) {\n      emitError(\n        context,\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\n        m.index\n      )\n    }\n    content = parseTextData(context, match[0].length, TextModes.ATTRIBUTE_VALUE)\n  }\n\n  return { content, isQuoted, loc: getSelection(context, start) }\n}\n\nfunction parseInterpolation(\n  context: ParserContext,\n  mode: TextModes\n): InterpolationNode | undefined {\n  const [open, close] = context.options.delimiters\n  __TEST__ && assert(startsWith(context.source, open))\n\n  const closeIndex = context.source.indexOf(close, open.length)\n  if (closeIndex === -1) {\n    emitError(context, ErrorCodes.X_MISSING_INTERPOLATION_END)\n    return undefined\n  }\n\n  const start = getCursor(context)\n  advanceBy(context, open.length)\n  const innerStart = getCursor(context)\n  const innerEnd = getCursor(context)\n  const rawContentLength = closeIndex - open.length\n  const rawContent = context.source.slice(0, rawContentLength)\n  const preTrimContent = parseTextData(context, rawContentLength, mode)\n  const content = preTrimContent.trim()\n  const startOffset = preTrimContent.indexOf(content)\n  if (startOffset > 0) {\n    advancePositionWithMutation(innerStart, rawContent, startOffset)\n  }\n  const endOffset =\n    rawContentLength - (preTrimContent.length - content.length - startOffset)\n  advancePositionWithMutation(innerEnd, rawContent, endOffset)\n  advanceBy(context, close.length)\n\n  return {\n    type: NodeTypes.INTERPOLATION,\n    content: {\n      type: NodeTypes.SIMPLE_EXPRESSION,\n      isStatic: false,\n      // Set `isConstant` to false by default and will decide in transformExpression\n      constType: ConstantTypes.NOT_CONSTANT,\n      content,\n      loc: getSelection(context, innerStart, innerEnd)\n    },\n    loc: getSelection(context, start)\n  }\n}\n\nfunction parseText(context: ParserContext, mode: TextModes): TextNode {\n  __TEST__ && assert(context.source.length > 0)\n\n  const endTokens =\n    mode === TextModes.CDATA ? [']]>'] : ['<', context.options.delimiters[0]]\n\n  let endIndex = context.source.length\n  for (let i = 0; i < endTokens.length; i++) {\n    const index = context.source.indexOf(endTokens[i], 1)\n    if (index !== -1 && endIndex > index) {\n      endIndex = index\n    }\n  }\n\n  __TEST__ && assert(endIndex > 0)\n\n  const start = getCursor(context)\n  const content = parseTextData(context, endIndex, mode)\n\n  return {\n    type: NodeTypes.TEXT,\n    content,\n    loc: getSelection(context, start)\n  }\n}\n\n/**\n * Get text data with a given length from the current location.\n * This translates HTML entities in the text data.\n */\nfunction parseTextData(\n  context: ParserContext,\n  length: number,\n  mode: TextModes\n): string {\n  const rawText = context.source.slice(0, length)\n  advanceBy(context, length)\n  if (\n    mode === TextModes.RAWTEXT ||\n    mode === TextModes.CDATA ||\n    !rawText.includes('&')\n  ) {\n    return rawText\n  } else {\n    // DATA or RCDATA containing \"&\"\". Entity decoding required.\n    return context.options.decodeEntities(\n      rawText,\n      mode === TextModes.ATTRIBUTE_VALUE\n    )\n  }\n}\n\nfunction getCursor(context: ParserContext): Position {\n  const { column, line, offset } = context\n  return { column, line, offset }\n}\n\nfunction getSelection(\n  context: ParserContext,\n  start: Position,\n  end?: Position\n): SourceLocation {\n  end = end || getCursor(context)\n  return {\n    start,\n    end,\n    source: context.originalSource.slice(start.offset, end.offset)\n  }\n}\n\nfunction last<T>(xs: T[]): T | undefined {\n  return xs[xs.length - 1]\n}\n\nfunction startsWith(source: string, searchString: string): boolean {\n  return source.startsWith(searchString)\n}\n\nfunction advanceBy(context: ParserContext, numberOfCharacters: number): void {\n  const { source } = context\n  __TEST__ && assert(numberOfCharacters <= source.length)\n  advancePositionWithMutation(context, source, numberOfCharacters)\n  context.source = source.slice(numberOfCharacters)\n}\n\nfunction advanceSpaces(context: ParserContext): void {\n  const match = /^[\\t\\r\\n\\f ]+/.exec(context.source)\n  if (match) {\n    advanceBy(context, match[0].length)\n  }\n}\n\nfunction getNewPosition(\n  context: ParserContext,\n  start: Position,\n  numberOfCharacters: number\n): Position {\n  return advancePositionWithClone(\n    start,\n    context.originalSource.slice(start.offset, numberOfCharacters),\n    numberOfCharacters\n  )\n}\n\nfunction emitError(\n  context: ParserContext,\n  code: ErrorCodes,\n  offset?: number,\n  loc: Position = getCursor(context)\n): void {\n  if (offset) {\n    loc.offset += offset\n    loc.column += offset\n  }\n  context.options.onError(\n    createCompilerError(code, {\n      start: loc,\n      end: loc,\n      source: ''\n    })\n  )\n}\n\nfunction isEnd(\n  context: ParserContext,\n  mode: TextModes,\n  ancestors: ElementNode[]\n): boolean {\n  const s = context.source\n\n  switch (mode) {\n    case TextModes.DATA:\n      if (startsWith(s, '</')) {\n        // TODO: probably bad performance\n        for (let i = ancestors.length - 1; i >= 0; --i) {\n          if (startsWithEndTagOpen(s, ancestors[i].tag)) {\n            return true\n          }\n        }\n      }\n      break\n\n    case TextModes.RCDATA:\n    case TextModes.RAWTEXT: {\n      const parent = last(ancestors)\n      if (parent && startsWithEndTagOpen(s, parent.tag)) {\n        return true\n      }\n      break\n    }\n\n    case TextModes.CDATA:\n      if (startsWith(s, ']]>')) {\n        return true\n      }\n      break\n  }\n\n  return !s\n}\n\nfunction startsWithEndTagOpen(source: string, tag: string): boolean {\n  return (\n    startsWith(source, '</') &&\n    source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\n    /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>')\n  )\n}\n", "import {\n  ConstantTypes,\n  RootNode,\n  NodeTypes,\n  TemplateChildNode,\n  SimpleExpressionNode,\n  ElementTypes,\n  PlainElementNode,\n  ComponentNode,\n  TemplateNode,\n  VNodeCall,\n  ParentNode,\n  JSChildNode,\n  CallExpression,\n  createArrayExpression,\n  getVNodeBlockHelper,\n  getVNodeHelper\n} from '../ast'\nimport { TransformContext } from '../transform'\nimport { PatchFlags, isString, isSymbol, isArray } from '@vue/shared'\nimport { isSlotOutlet } from '../utils'\nimport {\n  OPEN_BLOCK,\n  GUARD_REACTIVE_PROPS,\n  NORMALIZE_CLASS,\n  NORMALIZE_PROPS,\n  NORMALIZE_STYLE\n} from '../runtimeHelpers'\n\nexport function hoistStatic(root: RootNode, context: TransformContext) {\n  walk(\n    root,\n    context,\n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0])\n  )\n}\n\nexport function isSingleElementRoot(\n  root: RootNode,\n  child: TemplateChildNode\n): child is PlainElementNode | ComponentNode | TemplateNode {\n  const { children } = root\n  return (\n    children.length === 1 &&\n    child.type === NodeTypes.ELEMENT &&\n    !isSlotOutlet(child)\n  )\n}\n\nfunction walk(\n  node: ParentNode,\n  context: TransformContext,\n  doNotHoistNode: boolean = false\n) {\n  const { children } = node\n  const originalCount = children.length\n  let hoistedCount = 0\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i]\n    // only plain elements & text calls are eligible for hoisting.\n    if (\n      child.type === NodeTypes.ELEMENT &&\n      child.tagType === ElementTypes.ELEMENT\n    ) {\n      const constantType = doNotHoistNode\n        ? ConstantTypes.NOT_CONSTANT\n        : getConstantType(child, context)\n      if (constantType > ConstantTypes.NOT_CONSTANT) {\n        if (constantType >= ConstantTypes.CAN_HOIST) {\n          ;(child.codegenNode as VNodeCall).patchFlag =\n            PatchFlags.HOISTED + (__DEV__ ? ` /* HOISTED */` : ``)\n          child.codegenNode = context.hoist(child.codegenNode!)\n          hoistedCount++\n          continue\n        }\n      } else {\n        // node may contain dynamic children, but its props may be eligible for\n        // hoisting.\n        const codegenNode = child.codegenNode!\n        if (codegenNode.type === NodeTypes.VNODE_CALL) {\n          const flag = getPatchFlag(codegenNode)\n          if (\n            (!flag ||\n              flag === PatchFlags.NEED_PATCH ||\n              flag === PatchFlags.TEXT) &&\n            getGeneratedPropsConstantType(child, context) >=\n              ConstantTypes.CAN_HOIST\n          ) {\n            const props = getNodeProps(child)\n            if (props) {\n              codegenNode.props = context.hoist(props)\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps)\n          }\n        }\n      }\n    }\n\n    // walk further\n    if (child.type === NodeTypes.ELEMENT) {\n      const isComponent = child.tagType === ElementTypes.COMPONENT\n      if (isComponent) {\n        context.scopes.vSlot++\n      }\n      walk(child, context)\n      if (isComponent) {\n        context.scopes.vSlot--\n      }\n    } else if (child.type === NodeTypes.FOR) {\n      // Do not hoist v-for single child because it has to be a block\n      walk(child, context, child.children.length === 1)\n    } else if (child.type === NodeTypes.IF) {\n      for (let i = 0; i < child.branches.length; i++) {\n        // Do not hoist v-if single child because it has to be a block\n        walk(\n          child.branches[i],\n          context,\n          child.branches[i].children.length === 1\n        )\n      }\n    }\n  }\n\n  if (hoistedCount && context.transformHoist) {\n    context.transformHoist(children, context, node)\n  }\n\n  // all children were hoisted - the entire children array is hoistable.\n  if (\n    hoistedCount &&\n    hoistedCount === originalCount &&\n    node.type === NodeTypes.ELEMENT &&\n    node.tagType === ElementTypes.ELEMENT &&\n    node.codegenNode &&\n    node.codegenNode.type === NodeTypes.VNODE_CALL &&\n    isArray(node.codegenNode.children)\n  ) {\n    node.codegenNode.children = context.hoist(\n      createArrayExpression(node.codegenNode.children)\n    )\n  }\n}\n\nexport function getConstantType(\n  node: TemplateChildNode | SimpleExpressionNode,\n  context: TransformContext\n): ConstantTypes {\n  const { constantCache } = context\n  switch (node.type) {\n    case NodeTypes.ELEMENT:\n      if (node.tagType !== ElementTypes.ELEMENT) {\n        return ConstantTypes.NOT_CONSTANT\n      }\n      const cached = constantCache.get(node)\n      if (cached !== undefined) {\n        return cached\n      }\n      const codegenNode = node.codegenNode!\n      if (codegenNode.type !== NodeTypes.VNODE_CALL) {\n        return ConstantTypes.NOT_CONSTANT\n      }\n      if (\n        codegenNode.isBlock &&\n        node.tag !== 'svg' &&\n        node.tag !== 'foreignObject'\n      ) {\n        return ConstantTypes.NOT_CONSTANT\n      }\n      const flag = getPatchFlag(codegenNode)\n      if (!flag) {\n        let returnType = ConstantTypes.CAN_STRINGIFY\n\n        // Element itself has no patch flag. However we still need to check:\n\n        // 1. Even for a node with no patch flag, it is possible for it to contain\n        // non-hoistable expressions that refers to scope variables, e.g. compiler\n        // injected keys or cached event handlers. Therefore we need to always\n        // check the codegenNode's props to be sure.\n        const generatedPropsType = getGeneratedPropsConstantType(node, context)\n        if (generatedPropsType === ConstantTypes.NOT_CONSTANT) {\n          constantCache.set(node, ConstantTypes.NOT_CONSTANT)\n          return ConstantTypes.NOT_CONSTANT\n        }\n        if (generatedPropsType < returnType) {\n          returnType = generatedPropsType\n        }\n\n        // 2. its children.\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context)\n          if (childType === ConstantTypes.NOT_CONSTANT) {\n            constantCache.set(node, ConstantTypes.NOT_CONSTANT)\n            return ConstantTypes.NOT_CONSTANT\n          }\n          if (childType < returnType) {\n            returnType = childType\n          }\n        }\n\n        // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\n        // type, check if any of the props can cause the type to be lowered\n        // we can skip can_patch because it's guaranteed by the absence of a\n        // patchFlag.\n        if (returnType > ConstantTypes.CAN_SKIP_PATCH) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i]\n            if (p.type === NodeTypes.DIRECTIVE && p.name === 'bind' && p.exp) {\n              const expType = getConstantType(p.exp, context)\n              if (expType === ConstantTypes.NOT_CONSTANT) {\n                constantCache.set(node, ConstantTypes.NOT_CONSTANT)\n                return ConstantTypes.NOT_CONSTANT\n              }\n              if (expType < returnType) {\n                returnType = expType\n              }\n            }\n          }\n        }\n\n        // only svg/foreignObject could be block here, however if they are\n        // static then they don't need to be blocks since there will be no\n        // nested updates.\n        if (codegenNode.isBlock) {\n          // except set custom directives.\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i]\n            if (p.type === NodeTypes.DIRECTIVE) {\n              constantCache.set(node, ConstantTypes.NOT_CONSTANT)\n              return ConstantTypes.NOT_CONSTANT\n            }\n          }\n\n          context.removeHelper(OPEN_BLOCK)\n          context.removeHelper(\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\n          )\n          codegenNode.isBlock = false\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent))\n        }\n\n        constantCache.set(node, returnType)\n        return returnType\n      } else {\n        constantCache.set(node, ConstantTypes.NOT_CONSTANT)\n        return ConstantTypes.NOT_CONSTANT\n      }\n    case NodeTypes.TEXT:\n    case NodeTypes.COMMENT:\n      return ConstantTypes.CAN_STRINGIFY\n    case NodeTypes.IF:\n    case NodeTypes.FOR:\n    case NodeTypes.IF_BRANCH:\n      return ConstantTypes.NOT_CONSTANT\n    case NodeTypes.INTERPOLATION:\n    case NodeTypes.TEXT_CALL:\n      return getConstantType(node.content, context)\n    case NodeTypes.SIMPLE_EXPRESSION:\n      return node.constType\n    case NodeTypes.COMPOUND_EXPRESSION:\n      let returnType = ConstantTypes.CAN_STRINGIFY\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i]\n        if (isString(child) || isSymbol(child)) {\n          continue\n        }\n        const childType = getConstantType(child, context)\n        if (childType === ConstantTypes.NOT_CONSTANT) {\n          return ConstantTypes.NOT_CONSTANT\n        } else if (childType < returnType) {\n          returnType = childType\n        }\n      }\n      return returnType\n    default:\n      if (__DEV__) {\n        const exhaustiveCheck: never = node\n        exhaustiveCheck\n      }\n      return ConstantTypes.NOT_CONSTANT\n  }\n}\n\nconst allowHoistedHelperSet = new Set([\n  NORMALIZE_CLASS,\n  NORMALIZE_STYLE,\n  NORMALIZE_PROPS,\n  GUARD_REACTIVE_PROPS\n])\n\nfunction getConstantTypeOfHelperCall(\n  value: CallExpression,\n  context: TransformContext\n): ConstantTypes {\n  if (\n    value.type === NodeTypes.JS_CALL_EXPRESSION &&\n    !isString(value.callee) &&\n    allowHoistedHelperSet.has(value.callee)\n  ) {\n    const arg = value.arguments[0] as JSChildNode\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\n      return getConstantType(arg, context)\n    } else if (arg.type === NodeTypes.JS_CALL_EXPRESSION) {\n      // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\n      return getConstantTypeOfHelperCall(arg, context)\n    }\n  }\n  return ConstantTypes.NOT_CONSTANT\n}\n\nfunction getGeneratedPropsConstantType(\n  node: PlainElementNode,\n  context: TransformContext\n): ConstantTypes {\n  let returnType = ConstantTypes.CAN_STRINGIFY\n  const props = getNodeProps(node)\n  if (props && props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\n    const { properties } = props\n    for (let i = 0; i < properties.length; i++) {\n      const { key, value } = properties[i]\n      const keyType = getConstantType(key, context)\n      if (keyType === ConstantTypes.NOT_CONSTANT) {\n        return keyType\n      }\n      if (keyType < returnType) {\n        returnType = keyType\n      }\n      let valueType: ConstantTypes\n      if (value.type === NodeTypes.SIMPLE_EXPRESSION) {\n        valueType = getConstantType(value, context)\n      } else if (value.type === NodeTypes.JS_CALL_EXPRESSION) {\n        // some helper calls can be hoisted,\n        // such as the `normalizeProps` generated by the compiler for pre-normalize class,\n        // in this case we need to respect the ConstantType of the helper's arguments\n        valueType = getConstantTypeOfHelperCall(value, context)\n      } else {\n        valueType = ConstantTypes.NOT_CONSTANT\n      }\n      if (valueType === ConstantTypes.NOT_CONSTANT) {\n        return valueType\n      }\n      if (valueType < returnType) {\n        returnType = valueType\n      }\n    }\n  }\n  return returnType\n}\n\nfunction getNodeProps(node: PlainElementNode) {\n  const codegenNode = node.codegenNode!\n  if (codegenNode.type === NodeTypes.VNODE_CALL) {\n    return codegenNode.props\n  }\n}\n\nfunction getPatchFlag(node: VNodeCall): number | undefined {\n  const flag = node.patchFlag\n  return flag ? parseInt(flag, 10) : undefined\n}\n", "import { TransformOptions } from './options'\nimport {\n  RootNode,\n  NodeTypes,\n  ParentNode,\n  TemplateChildNode,\n  ElementNode,\n  DirectiveNode,\n  Property,\n  ExpressionNode,\n  createSimpleExpression,\n  JSChildNode,\n  SimpleExpressionNode,\n  ElementTypes,\n  CacheExpression,\n  createCacheExpression,\n  TemplateLiteral,\n  createVNodeCall,\n  ConstantTypes,\n  ArrayExpression,\n  convertToBlock\n} from './ast'\nimport {\n  isString,\n  isArray,\n  NOOP,\n  PatchFlags,\n  PatchFlagNames,\n  EMPTY_OBJ,\n  capitalize,\n  camelize\n} from '@vue/shared'\nimport { defaultOnError, defaultOnWarn } from './errors'\nimport {\n  TO_DISPLAY_STRING,\n  FRAGMENT,\n  helperNameMap,\n  CREATE_COMMENT\n} from './runtimeHelpers'\nimport { isVSlot } from './utils'\nimport { hoistStatic, isSingleElementRoot } from './transforms/hoistStatic'\nimport { CompilerCompatOptions } from './compat/compatConfig'\n\n// There are two types of transforms:\n//\n// - NodeTransform:\n//   Transforms that operate directly on a ChildNode. NodeTransforms may mutate,\n//   replace or remove the node being processed.\nexport type NodeTransform = (\n  node: RootNode | TemplateChildNode,\n  context: TransformContext\n) => void | (() => void) | (() => void)[]\n\n// - DirectiveTransform:\n//   Transforms that handles a single directive attribute on an element.\n//   It translates the raw directive into actual props for the VNode.\nexport type DirectiveTransform = (\n  dir: DirectiveNode,\n  node: ElementNode,\n  context: TransformContext,\n  // a platform specific compiler can import the base transform and augment\n  // it by passing in this optional argument.\n  augmentor?: (ret: DirectiveTransformResult) => DirectiveTransformResult\n) => DirectiveTransformResult\n\nexport interface DirectiveTransformResult {\n  props: Property[]\n  needRuntime?: boolean | symbol\n  ssrTagParts?: TemplateLiteral['elements']\n}\n\n// A structural directive transform is technically also a NodeTransform;\n// Only v-if and v-for fall into this category.\nexport type StructuralDirectiveTransform = (\n  node: ElementNode,\n  dir: DirectiveNode,\n  context: TransformContext\n) => void | (() => void)\n\nexport interface ImportItem {\n  exp: string | ExpressionNode\n  path: string\n}\n\nexport interface TransformContext\n  extends Required<\n      Omit<TransformOptions, 'filename' | keyof CompilerCompatOptions>\n    >,\n    CompilerCompatOptions {\n  selfName: string | null\n  root: RootNode\n  helpers: Map<symbol, number>\n  components: Set<string>\n  directives: Set<string>\n  hoists: (JSChildNode | null)[]\n  imports: ImportItem[]\n  temps: number\n  cached: number\n  identifiers: { [name: string]: number | undefined }\n  scopes: {\n    vFor: number\n    vSlot: number\n    vPre: number\n    vOnce: number\n  }\n  parent: ParentNode | null\n  childIndex: number\n  currentNode: RootNode | TemplateChildNode | null\n  inVOnce: boolean\n  helper<T extends symbol>(name: T): T\n  removeHelper<T extends symbol>(name: T): void\n  helperString(name: symbol): string\n  replaceNode(node: TemplateChildNode): void\n  removeNode(node?: TemplateChildNode): void\n  onNodeRemoved(): void\n  addIdentifiers(exp: ExpressionNode | string): void\n  removeIdentifiers(exp: ExpressionNode | string): void\n  hoist(exp: string | JSChildNode | ArrayExpression): SimpleExpressionNode\n  cache<T extends JSChildNode>(exp: T, isVNode?: boolean): CacheExpression | T\n  constantCache: Map<TemplateChildNode, ConstantTypes>\n\n  // 2.x Compat only\n  filters?: Set<string>\n}\n\nexport function createTransformContext(\n  root: RootNode,\n  {\n    filename = '',\n    prefixIdentifiers = false,\n    hoistStatic = false,\n    cacheHandlers = false,\n    nodeTransforms = [],\n    directiveTransforms = {},\n    transformHoist = null,\n    isBuiltInComponent = NOOP,\n    isCustomElement = NOOP,\n    expressionPlugins = [],\n    scopeId = null,\n    slotted = true,\n    ssr = false,\n    inSSR = false,\n    ssrCssVars = ``,\n    bindingMetadata = EMPTY_OBJ,\n    inline = false,\n    isTS = false,\n    onError = defaultOnError,\n    onWarn = defaultOnWarn,\n    compatConfig\n  }: TransformOptions\n): TransformContext {\n  const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/)\n  const context: TransformContext = {\n    // options\n    selfName: nameMatch && capitalize(camelize(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n\n    // state\n    root,\n    helpers: new Map(),\n    components: new Set(),\n    directives: new Set(),\n    hoists: [],\n    imports: [],\n    constantCache: new Map(),\n    temps: 0,\n    cached: 0,\n    identifiers: Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0\n      context.helpers.set(name, count + 1)\n      return name\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name)\n      if (count) {\n        const currentCount = count - 1\n        if (!currentCount) {\n          context.helpers.delete(name)\n        } else {\n          context.helpers.set(name, currentCount)\n        }\n      }\n    },\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`\n    },\n    replaceNode(node) {\n      /* istanbul ignore if */\n      if (__DEV__) {\n        if (!context.currentNode) {\n          throw new Error(`Node being replaced is already removed.`)\n        }\n        if (!context.parent) {\n          throw new Error(`Cannot replace root node.`)\n        }\n      }\n      context.parent!.children[context.childIndex] = context.currentNode = node\n    },\n    removeNode(node) {\n      if (__DEV__ && !context.parent) {\n        throw new Error(`Cannot remove root node.`)\n      }\n      const list = context.parent!.children\n      const removalIndex = node\n        ? list.indexOf(node)\n        : context.currentNode\n        ? context.childIndex\n        : -1\n      /* istanbul ignore if */\n      if (__DEV__ && removalIndex < 0) {\n        throw new Error(`node being removed is not a child of current parent`)\n      }\n      if (!node || node === context.currentNode) {\n        // current node removed\n        context.currentNode = null\n        context.onNodeRemoved()\n      } else {\n        // sibling node removed\n        if (context.childIndex > removalIndex) {\n          context.childIndex--\n          context.onNodeRemoved()\n        }\n      }\n      context.parent!.children.splice(removalIndex, 1)\n    },\n    onNodeRemoved: () => {},\n    addIdentifiers(exp) {\n      // identifier tracking only happens in non-browser builds.\n      if (!__BROWSER__) {\n        if (isString(exp)) {\n          addId(exp)\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(addId)\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\n          addId(exp.content)\n        }\n      }\n    },\n    removeIdentifiers(exp) {\n      if (!__BROWSER__) {\n        if (isString(exp)) {\n          removeId(exp)\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(removeId)\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\n          removeId(exp.content)\n        }\n      }\n    },\n    hoist(exp) {\n      if (isString(exp)) exp = createSimpleExpression(exp)\n      context.hoists.push(exp)\n      const identifier = createSimpleExpression(\n        `_hoisted_${context.hoists.length}`,\n        false,\n        exp.loc,\n        ConstantTypes.CAN_HOIST\n      )\n      identifier.hoisted = exp\n      return identifier\n    },\n    cache(exp, isVNode = false) {\n      return createCacheExpression(context.cached++, exp, isVNode)\n    }\n  }\n\n  if (__COMPAT__) {\n    context.filters = new Set()\n  }\n\n  function addId(id: string) {\n    const { identifiers } = context\n    if (identifiers[id] === undefined) {\n      identifiers[id] = 0\n    }\n    identifiers[id]!++\n  }\n\n  function removeId(id: string) {\n    context.identifiers[id]!--\n  }\n\n  return context\n}\n\nexport function transform(root: RootNode, options: TransformOptions) {\n  const context = createTransformContext(root, options)\n  traverseNode(root, context)\n  if (options.hoistStatic) {\n    hoistStatic(root, context)\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context)\n  }\n  // finalize meta information\n  root.helpers = new Set([...context.helpers.keys()])\n  root.components = [...context.components]\n  root.directives = [...context.directives]\n  root.imports = context.imports\n  root.hoists = context.hoists\n  root.temps = context.temps\n  root.cached = context.cached\n\n  if (__COMPAT__) {\n    root.filters = [...context.filters!]\n  }\n}\n\nfunction createRootCodegen(root: RootNode, context: TransformContext) {\n  const { helper } = context\n  const { children } = root\n  if (children.length === 1) {\n    const child = children[0]\n    // if the single child is an element, turn it into a block.\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      // single element root is never hoisted so codegenNode will never be\n      // SimpleExpressionNode\n      const codegenNode = child.codegenNode\n      if (codegenNode.type === NodeTypes.VNODE_CALL) {\n        convertToBlock(codegenNode, context)\n      }\n      root.codegenNode = codegenNode\n    } else {\n      // - single <slot/>, IfNode, ForNode: already blocks.\n      // - single text node: always patched.\n      // root codegen falls through via genNode()\n      root.codegenNode = child\n    }\n  } else if (children.length > 1) {\n    // root has multiple nodes - return a fragment block.\n    let patchFlag = PatchFlags.STABLE_FRAGMENT\n    let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\n    // check if the fragment actually contains a single valid child with\n    // the rest being comments\n    if (\n      __DEV__ &&\n      children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\n    ) {\n      patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\n      patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\n    }\n    root.codegenNode = createVNodeCall(\n      context,\n      helper(FRAGMENT),\n      undefined,\n      root.children,\n      patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\n      undefined,\n      undefined,\n      true,\n      undefined,\n      false /* isComponent */\n    )\n  } else {\n    // no children = noop. codegen will return null.\n  }\n}\n\nexport function traverseChildren(\n  parent: ParentNode,\n  context: TransformContext\n) {\n  let i = 0\n  const nodeRemoved = () => {\n    i--\n  }\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i]\n    if (isString(child)) continue\n    context.parent = parent\n    context.childIndex = i\n    context.onNodeRemoved = nodeRemoved\n    traverseNode(child, context)\n  }\n}\n\nexport function traverseNode(\n  node: RootNode | TemplateChildNode,\n  context: TransformContext\n) {\n  context.currentNode = node\n  // apply transform plugins\n  const { nodeTransforms } = context\n  const exitFns = []\n  for (let i = 0; i < nodeTransforms.length; i++) {\n    const onExit = nodeTransforms[i](node, context)\n    if (onExit) {\n      if (isArray(onExit)) {\n        exitFns.push(...onExit)\n      } else {\n        exitFns.push(onExit)\n      }\n    }\n    if (!context.currentNode) {\n      // node was removed\n      return\n    } else {\n      // node may have been replaced\n      node = context.currentNode\n    }\n  }\n\n  switch (node.type) {\n    case NodeTypes.COMMENT:\n      if (!context.ssr) {\n        // inject import for the Comment symbol, which is needed for creating\n        // comment nodes with `createVNode`\n        context.helper(CREATE_COMMENT)\n      }\n      break\n    case NodeTypes.INTERPOLATION:\n      // no need to traverse, but we need to inject toString helper\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING)\n      }\n      break\n\n    // for container types, further traverse downwards\n    case NodeTypes.IF:\n      for (let i = 0; i < node.branches.length; i++) {\n        traverseNode(node.branches[i], context)\n      }\n      break\n    case NodeTypes.IF_BRANCH:\n    case NodeTypes.FOR:\n    case NodeTypes.ELEMENT:\n    case NodeTypes.ROOT:\n      traverseChildren(node, context)\n      break\n  }\n\n  // exit transforms\n  context.currentNode = node\n  let i = exitFns.length\n  while (i--) {\n    exitFns[i]()\n  }\n}\n\nexport function createStructuralDirectiveTransform(\n  name: string | RegExp,\n  fn: StructuralDirectiveTransform\n): NodeTransform {\n  const matches = isString(name)\n    ? (n: string) => n === name\n    : (n: string) => name.test(n)\n\n  return (node, context) => {\n    if (node.type === NodeTypes.ELEMENT) {\n      const { props } = node\n      // structural directive transforms are not concerned with slots\n      // as they are handled separately in vSlot.ts\n      if (node.tagType === ElementTypes.TEMPLATE && props.some(isVSlot)) {\n        return\n      }\n      const exitFns = []\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i]\n        if (prop.type === NodeTypes.DIRECTIVE && matches(prop.name)) {\n          // structural directives are removed to avoid infinite recursion\n          // also we remove them *before* applying so that it can further\n          // traverse itself in case it moves the node around\n          props.splice(i, 1)\n          i--\n          const onExit = fn(node, prop, context)\n          if (onExit) exitFns.push(onExit)\n        }\n      }\n      return exitFns\n    }\n  }\n}\n", "import { CodegenOptions } from './options'\nimport {\n  RootNode,\n  TemplateChildNode,\n  TextNode,\n  CommentNode,\n  ExpressionNode,\n  NodeTypes,\n  JSChildNode,\n  CallExpression,\n  ArrayExpression,\n  ObjectExpression,\n  Position,\n  InterpolationNode,\n  CompoundExpressionNode,\n  SimpleExpressionNode,\n  FunctionExpression,\n  ConditionalExpression,\n  CacheExpression,\n  locStub,\n  SSRCodegenNode,\n  TemplateLiteral,\n  IfStatement,\n  AssignmentExpression,\n  ReturnStatement,\n  VNodeCall,\n  SequenceExpression,\n  getVNodeBlockHelper,\n  getVNodeHelper\n} from './ast'\nimport { SourceMapGenerator, RawSourceMap } from 'source-map-js'\nimport {\n  advancePositionWithMutation,\n  assert,\n  isSimpleIdentifier,\n  toValidAssetId\n} from './utils'\nimport { isString, isArray, isSymbol } from '@vue/shared'\nimport {\n  helperNameMap,\n  TO_DISPLAY_STRING,\n  CREATE_VNODE,\n  RESOLVE_COMPONENT,\n  RESOLVE_DIRECTIVE,\n  SET_BLOCK_TRACKING,\n  CREATE_COMMENT,\n  CREATE_TEXT,\n  PUSH_SCOPE_ID,\n  POP_SCOPE_ID,\n  WITH_DIRECTIVES,\n  CREATE_ELEMENT_VNODE,\n  OPEN_BLOCK,\n  CREATE_STATIC,\n  WITH_CTX,\n  RESOLVE_FILTER\n} from './runtimeHelpers'\nimport { ImportItem } from './transform'\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`\n\nconst aliasHelper = (s: symbol) => `${helperNameMap[s]}: _${helperNameMap[s]}`\n\ntype CodegenNode = TemplateChildNode | JSChildNode | SSRCodegenNode\n\nexport interface CodegenResult {\n  code: string\n  preamble: string\n  ast: RootNode\n  map?: RawSourceMap\n}\n\nexport interface CodegenContext\n  extends Omit<Required<CodegenOptions>, 'bindingMetadata' | 'inline'> {\n  source: string\n  code: string\n  line: number\n  column: number\n  offset: number\n  indentLevel: number\n  pure: boolean\n  map?: SourceMapGenerator\n  helper(key: symbol): string\n  push(code: string, node?: CodegenNode): void\n  indent(): void\n  deindent(withoutNewLine?: boolean): void\n  newline(): void\n}\n\nfunction createCodegenContext(\n  ast: RootNode,\n  {\n    mode = 'function',\n    prefixIdentifiers = mode === 'module',\n    sourceMap = false,\n    filename = `template.vue.html`,\n    scopeId = null,\n    optimizeImports = false,\n    runtimeGlobalName = `Vue`,\n    runtimeModuleName = `vue`,\n    ssrRuntimeModuleName = 'vue/server-renderer',\n    ssr = false,\n    isTS = false,\n    inSSR = false\n  }: CodegenOptions\n): CodegenContext {\n  const context: CodegenContext = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.loc.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: undefined,\n    helper(key) {\n      return `_${helperNameMap[key]}`\n    },\n    push(code, node) {\n      context.code += code\n      if (!__BROWSER__ && context.map) {\n        if (node) {\n          let name\n          if (node.type === NodeTypes.SIMPLE_EXPRESSION && !node.isStatic) {\n            const content = node.content.replace(/^_ctx\\./, '')\n            if (content !== node.content && isSimpleIdentifier(content)) {\n              name = content\n            }\n          }\n          addMapping(node.loc.start, name)\n        }\n        advancePositionWithMutation(context, code)\n        if (node && node.loc !== locStub) {\n          addMapping(node.loc.end)\n        }\n      }\n    },\n    indent() {\n      newline(++context.indentLevel)\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel\n      } else {\n        newline(--context.indentLevel)\n      }\n    },\n    newline() {\n      newline(context.indentLevel)\n    }\n  }\n\n  function newline(n: number) {\n    context.push('\\n' + `  `.repeat(n))\n  }\n\n  function addMapping(loc: Position, name?: string) {\n    context.map!.addMapping({\n      name,\n      source: context.filename,\n      original: {\n        line: loc.line,\n        column: loc.column - 1 // source-map column is 0 based\n      },\n      generated: {\n        line: context.line,\n        column: context.column - 1\n      }\n    })\n  }\n\n  if (!__BROWSER__ && sourceMap) {\n    // lazy require source-map implementation, only in non-browser builds\n    context.map = new SourceMapGenerator()\n    context.map!.setSourceContent(filename, context.source)\n  }\n\n  return context\n}\n\nexport function generate(\n  ast: RootNode,\n  options: CodegenOptions & {\n    onContextCreated?: (context: CodegenContext) => void\n  } = {}\n): CodegenResult {\n  const context = createCodegenContext(ast, options)\n  if (options.onContextCreated) options.onContextCreated(context)\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context\n\n  const helpers = Array.from(ast.helpers)\n  const hasHelpers = helpers.length > 0\n  const useWithBlock = !prefixIdentifiers && mode !== 'module'\n  const genScopeId = !__BROWSER__ && scopeId != null && mode === 'module'\n  const isSetupInlined = !__BROWSER__ && !!options.inline\n\n  // preambles\n  // in setup() inline mode, the preamble is generated in a sub context\n  // and returned separately.\n  const preambleContext = isSetupInlined\n    ? createCodegenContext(ast, options)\n    : context\n  if (!__BROWSER__ && mode === 'module') {\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined)\n  } else {\n    genFunctionPreamble(ast, preambleContext)\n  }\n  // enter render function\n  const functionName = ssr ? `ssrRender` : `render`\n  const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache']\n  if (!__BROWSER__ && options.bindingMetadata && !options.inline) {\n    // binding optimization args\n    args.push('$props', '$setup', '$data', '$options')\n  }\n  const signature =\n    !__BROWSER__ && options.isTS\n      ? args.map(arg => `${arg}: any`).join(',')\n      : args.join(', ')\n\n  if (isSetupInlined) {\n    push(`(${signature}) => {`)\n  } else {\n    push(`function ${functionName}(${signature}) {`)\n  }\n  indent()\n\n  if (useWithBlock) {\n    push(`with (_ctx) {`)\n    indent()\n    // function mode const declarations should be inside with block\n    // also they should be renamed to avoid collision with user properties\n    if (hasHelpers) {\n      push(`const { ${helpers.map(aliasHelper).join(', ')} } = _Vue`)\n      push(`\\n`)\n      newline()\n    }\n  }\n\n  // generate asset resolution statements\n  if (ast.components.length) {\n    genAssets(ast.components, 'component', context)\n    if (ast.directives.length || ast.temps > 0) {\n      newline()\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, 'directive', context)\n    if (ast.temps > 0) {\n      newline()\n    }\n  }\n  if (__COMPAT__ && ast.filters && ast.filters.length) {\n    newline()\n    genAssets(ast.filters, 'filter', context)\n    newline()\n  }\n\n  if (ast.temps > 0) {\n    push(`let `)\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`)\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(`\\n`)\n    newline()\n  }\n\n  // generate the VNode tree expression\n  if (!ssr) {\n    push(`return `)\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context)\n  } else {\n    push(`null`)\n  }\n\n  if (useWithBlock) {\n    deindent()\n    push(`}`)\n  }\n\n  deindent()\n  push(`}`)\n\n  return {\n    ast,\n    code: context.code,\n    preamble: isSetupInlined ? preambleContext.code : ``,\n    // SourceMapGenerator does have toJSON() method but it's not in the types\n    map: context.map ? (context.map as any).toJSON() : undefined\n  }\n}\n\nfunction genFunctionPreamble(ast: RootNode, context: CodegenContext) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context\n  const VueBinding =\n    !__BROWSER__ && ssr\n      ? `require(${JSON.stringify(runtimeModuleName)})`\n      : runtimeGlobalName\n  // Generate const declaration for helpers\n  // In prefix mode, we place the const declaration at top so it's done\n  // only once; But if we not prefixing, we place the declaration inside the\n  // with block so it doesn't incur the `in` check cost for every helper access.\n  const helpers = Array.from(ast.helpers)\n  if (helpers.length > 0) {\n    if (!__BROWSER__ && prefixIdentifiers) {\n      push(`const { ${helpers.map(aliasHelper).join(', ')} } = ${VueBinding}\\n`)\n    } else {\n      // \"with\" mode.\n      // save Vue in a separate variable to avoid collision\n      push(`const _Vue = ${VueBinding}\\n`)\n      // in \"with\" mode, helpers are declared inside the with block to avoid\n      // has check cost, but hoists are lifted out of the function - we need\n      // to provide the helper here.\n      if (ast.hoists.length) {\n        const staticHelpers = [\n          CREATE_VNODE,\n          CREATE_ELEMENT_VNODE,\n          CREATE_COMMENT,\n          CREATE_TEXT,\n          CREATE_STATIC\n        ]\n          .filter(helper => helpers.includes(helper))\n          .map(aliasHelper)\n          .join(', ')\n        push(`const { ${staticHelpers} } = _Vue\\n`)\n      }\n    }\n  }\n  // generate variables for ssr helpers\n  if (!__BROWSER__ && ast.ssrHelpers && ast.ssrHelpers.length) {\n    // ssr guarantees prefixIdentifier: true\n    push(\n      `const { ${ast.ssrHelpers\n        .map(aliasHelper)\n        .join(', ')} } = require(\"${ssrRuntimeModuleName}\")\\n`\n    )\n  }\n  genHoists(ast.hoists, context)\n  newline()\n  push(`return `)\n}\n\nfunction genModulePreamble(\n  ast: RootNode,\n  context: CodegenContext,\n  genScopeId: boolean,\n  inline?: boolean\n) {\n  const {\n    push,\n    newline,\n    optimizeImports,\n    runtimeModuleName,\n    ssrRuntimeModuleName\n  } = context\n\n  if (genScopeId && ast.hoists.length) {\n    ast.helpers.add(PUSH_SCOPE_ID)\n    ast.helpers.add(POP_SCOPE_ID)\n  }\n\n  // generate import statements for helpers\n  if (ast.helpers.size) {\n    const helpers = Array.from(ast.helpers)\n    if (optimizeImports) {\n      // when bundled with webpack with code-split, calling an import binding\n      // as a function leads to it being wrapped with `Object(a.b)` or `(0,a.b)`,\n      // incurring both payload size increase and potential perf overhead.\n      // therefore we assign the imports to variables (which is a constant ~50b\n      // cost per-component instead of scaling with template size)\n      push(\n        `import { ${helpers\n          .map(s => helperNameMap[s])\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`\n      )\n      push(\n        `\\n// Binding optimization for webpack code-split\\nconst ${helpers\n          .map(s => `_${helperNameMap[s]} = ${helperNameMap[s]}`)\n          .join(', ')}\\n`\n      )\n    } else {\n      push(\n        `import { ${helpers\n          .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`\n      )\n    }\n  }\n\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `import { ${ast.ssrHelpers\n        .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\n        .join(', ')} } from \"${ssrRuntimeModuleName}\"\\n`\n    )\n  }\n\n  if (ast.imports.length) {\n    genImports(ast.imports, context)\n    newline()\n  }\n\n  genHoists(ast.hoists, context)\n  newline()\n\n  if (!inline) {\n    push(`export `)\n  }\n}\n\nfunction genAssets(\n  assets: string[],\n  type: 'component' | 'directive' | 'filter',\n  { helper, push, newline, isTS }: CodegenContext\n) {\n  const resolver = helper(\n    __COMPAT__ && type === 'filter'\n      ? RESOLVE_FILTER\n      : type === 'component'\n      ? RESOLVE_COMPONENT\n      : RESOLVE_DIRECTIVE\n  )\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i]\n    // potential component implicit self-reference inferred from SFC filename\n    const maybeSelfReference = id.endsWith('__self')\n    if (maybeSelfReference) {\n      id = id.slice(0, -6)\n    }\n    push(\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${\n        maybeSelfReference ? `, true` : ``\n      })${isTS ? `!` : ``}`\n    )\n    if (i < assets.length - 1) {\n      newline()\n    }\n  }\n}\n\nfunction genHoists(hoists: (JSChildNode | null)[], context: CodegenContext) {\n  if (!hoists.length) {\n    return\n  }\n  context.pure = true\n  const { push, newline, helper, scopeId, mode } = context\n  const genScopeId = !__BROWSER__ && scopeId != null && mode !== 'function'\n  newline()\n\n  // generate inlined withScopeId helper\n  if (genScopeId) {\n    push(\n      `const _withScopeId = n => (${helper(\n        PUSH_SCOPE_ID\n      )}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`\n    )\n    newline()\n  }\n\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i]\n    if (exp) {\n      const needScopeIdWrapper = genScopeId && exp.type === NodeTypes.VNODE_CALL\n      push(\n        `const _hoisted_${i + 1} = ${\n          needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``\n        }`\n      )\n      genNode(exp, context)\n      if (needScopeIdWrapper) {\n        push(`)`)\n      }\n      newline()\n    }\n  }\n\n  context.pure = false\n}\n\nfunction genImports(importsOptions: ImportItem[], context: CodegenContext) {\n  if (!importsOptions.length) {\n    return\n  }\n  importsOptions.forEach(imports => {\n    context.push(`import `)\n    genNode(imports.exp, context)\n    context.push(` from '${imports.path}'`)\n    context.newline()\n  })\n}\n\nfunction isText(n: string | CodegenNode) {\n  return (\n    isString(n) ||\n    n.type === NodeTypes.SIMPLE_EXPRESSION ||\n    n.type === NodeTypes.TEXT ||\n    n.type === NodeTypes.INTERPOLATION ||\n    n.type === NodeTypes.COMPOUND_EXPRESSION\n  )\n}\n\nfunction genNodeListAsArray(\n  nodes: (string | CodegenNode | TemplateChildNode[])[],\n  context: CodegenContext\n) {\n  const multilines =\n    nodes.length > 3 ||\n    ((!__BROWSER__ || __DEV__) && nodes.some(n => isArray(n) || !isText(n)))\n  context.push(`[`)\n  multilines && context.indent()\n  genNodeList(nodes, context, multilines)\n  multilines && context.deindent()\n  context.push(`]`)\n}\n\nfunction genNodeList(\n  nodes: (string | symbol | CodegenNode | TemplateChildNode[])[],\n  context: CodegenContext,\n  multilines: boolean = false,\n  comma: boolean = true\n) {\n  const { push, newline } = context\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i]\n    if (isString(node)) {\n      push(node)\n    } else if (isArray(node)) {\n      genNodeListAsArray(node, context)\n    } else {\n      genNode(node, context)\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(',')\n        newline()\n      } else {\n        comma && push(', ')\n      }\n    }\n  }\n}\n\nfunction genNode(node: CodegenNode | symbol | string, context: CodegenContext) {\n  if (isString(node)) {\n    context.push(node)\n    return\n  }\n  if (isSymbol(node)) {\n    context.push(context.helper(node))\n    return\n  }\n  switch (node.type) {\n    case NodeTypes.ELEMENT:\n    case NodeTypes.IF:\n    case NodeTypes.FOR:\n      __DEV__ &&\n        assert(\n          node.codegenNode != null,\n          `Codegen node is missing for element/if/for node. ` +\n            `Apply appropriate transforms first.`\n        )\n      genNode(node.codegenNode!, context)\n      break\n    case NodeTypes.TEXT:\n      genText(node, context)\n      break\n    case NodeTypes.SIMPLE_EXPRESSION:\n      genExpression(node, context)\n      break\n    case NodeTypes.INTERPOLATION:\n      genInterpolation(node, context)\n      break\n    case NodeTypes.TEXT_CALL:\n      genNode(node.codegenNode, context)\n      break\n    case NodeTypes.COMPOUND_EXPRESSION:\n      genCompoundExpression(node, context)\n      break\n    case NodeTypes.COMMENT:\n      genComment(node, context)\n      break\n    case NodeTypes.VNODE_CALL:\n      genVNodeCall(node, context)\n      break\n\n    case NodeTypes.JS_CALL_EXPRESSION:\n      genCallExpression(node, context)\n      break\n    case NodeTypes.JS_OBJECT_EXPRESSION:\n      genObjectExpression(node, context)\n      break\n    case NodeTypes.JS_ARRAY_EXPRESSION:\n      genArrayExpression(node, context)\n      break\n    case NodeTypes.JS_FUNCTION_EXPRESSION:\n      genFunctionExpression(node, context)\n      break\n    case NodeTypes.JS_CONDITIONAL_EXPRESSION:\n      genConditionalExpression(node, context)\n      break\n    case NodeTypes.JS_CACHE_EXPRESSION:\n      genCacheExpression(node, context)\n      break\n    case NodeTypes.JS_BLOCK_STATEMENT:\n      genNodeList(node.body, context, true, false)\n      break\n\n    // SSR only types\n    case NodeTypes.JS_TEMPLATE_LITERAL:\n      !__BROWSER__ && genTemplateLiteral(node, context)\n      break\n    case NodeTypes.JS_IF_STATEMENT:\n      !__BROWSER__ && genIfStatement(node, context)\n      break\n    case NodeTypes.JS_ASSIGNMENT_EXPRESSION:\n      !__BROWSER__ && genAssignmentExpression(node, context)\n      break\n    case NodeTypes.JS_SEQUENCE_EXPRESSION:\n      !__BROWSER__ && genSequenceExpression(node, context)\n      break\n    case NodeTypes.JS_RETURN_STATEMENT:\n      !__BROWSER__ && genReturnStatement(node, context)\n      break\n\n    /* istanbul ignore next */\n    case NodeTypes.IF_BRANCH:\n      // noop\n      break\n    default:\n      if (__DEV__) {\n        assert(false, `unhandled codegen node type: ${(node as any).type}`)\n        // make sure we exhaust all possible types\n        const exhaustiveCheck: never = node\n        return exhaustiveCheck\n      }\n  }\n}\n\nfunction genText(\n  node: TextNode | SimpleExpressionNode,\n  context: CodegenContext\n) {\n  context.push(JSON.stringify(node.content), node)\n}\n\nfunction genExpression(node: SimpleExpressionNode, context: CodegenContext) {\n  const { content, isStatic } = node\n  context.push(isStatic ? JSON.stringify(content) : content, node)\n}\n\nfunction genInterpolation(node: InterpolationNode, context: CodegenContext) {\n  const { push, helper, pure } = context\n  if (pure) push(PURE_ANNOTATION)\n  push(`${helper(TO_DISPLAY_STRING)}(`)\n  genNode(node.content, context)\n  push(`)`)\n}\n\nfunction genCompoundExpression(\n  node: CompoundExpressionNode,\n  context: CodegenContext\n) {\n  for (let i = 0; i < node.children!.length; i++) {\n    const child = node.children![i]\n    if (isString(child)) {\n      context.push(child)\n    } else {\n      genNode(child, context)\n    }\n  }\n}\n\nfunction genExpressionAsPropertyKey(\n  node: ExpressionNode,\n  context: CodegenContext\n) {\n  const { push } = context\n  if (node.type === NodeTypes.COMPOUND_EXPRESSION) {\n    push(`[`)\n    genCompoundExpression(node, context)\n    push(`]`)\n  } else if (node.isStatic) {\n    // only quote keys if necessary\n    const text = isSimpleIdentifier(node.content)\n      ? node.content\n      : JSON.stringify(node.content)\n    push(text, node)\n  } else {\n    push(`[${node.content}]`, node)\n  }\n}\n\nfunction genComment(node: CommentNode, context: CodegenContext) {\n  const { push, helper, pure } = context\n  if (pure) {\n    push(PURE_ANNOTATION)\n  }\n  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node)\n}\n\nfunction genVNodeCall(node: VNodeCall, context: CodegenContext) {\n  const { push, helper, pure } = context\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent\n  } = node\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`)\n  }\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `)\n  }\n  if (pure) {\n    push(PURE_ANNOTATION)\n  }\n  const callHelper: symbol = isBlock\n    ? getVNodeBlockHelper(context.inSSR, isComponent)\n    : getVNodeHelper(context.inSSR, isComponent)\n  push(helper(callHelper) + `(`, node)\n  genNodeList(\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\n    context\n  )\n  push(`)`)\n  if (isBlock) {\n    push(`)`)\n  }\n  if (directives) {\n    push(`, `)\n    genNode(directives, context)\n    push(`)`)\n  }\n}\n\nfunction genNullableArgs(args: any[]): CallExpression['arguments'] {\n  let i = args.length\n  while (i--) {\n    if (args[i] != null) break\n  }\n  return args.slice(0, i + 1).map(arg => arg || `null`)\n}\n\n// JavaScript\nfunction genCallExpression(node: CallExpression, context: CodegenContext) {\n  const { push, helper, pure } = context\n  const callee = isString(node.callee) ? node.callee : helper(node.callee)\n  if (pure) {\n    push(PURE_ANNOTATION)\n  }\n  push(callee + `(`, node)\n  genNodeList(node.arguments, context)\n  push(`)`)\n}\n\nfunction genObjectExpression(node: ObjectExpression, context: CodegenContext) {\n  const { push, indent, deindent, newline } = context\n  const { properties } = node\n  if (!properties.length) {\n    push(`{}`, node)\n    return\n  }\n  const multilines =\n    properties.length > 1 ||\n    ((!__BROWSER__ || __DEV__) &&\n      properties.some(p => p.value.type !== NodeTypes.SIMPLE_EXPRESSION))\n  push(multilines ? `{` : `{ `)\n  multilines && indent()\n  for (let i = 0; i < properties.length; i++) {\n    const { key, value } = properties[i]\n    // key\n    genExpressionAsPropertyKey(key, context)\n    push(`: `)\n    // value\n    genNode(value, context)\n    if (i < properties.length - 1) {\n      // will only reach this if it's multilines\n      push(`,`)\n      newline()\n    }\n  }\n  multilines && deindent()\n  push(multilines ? `}` : ` }`)\n}\n\nfunction genArrayExpression(node: ArrayExpression, context: CodegenContext) {\n  genNodeListAsArray(node.elements as CodegenNode[], context)\n}\n\nfunction genFunctionExpression(\n  node: FunctionExpression,\n  context: CodegenContext\n) {\n  const { push, indent, deindent } = context\n  const { params, returns, body, newline, isSlot } = node\n  if (isSlot) {\n    // wrap slot functions with owner context\n    push(`_${helperNameMap[WITH_CTX]}(`)\n  }\n  push(`(`, node)\n  if (isArray(params)) {\n    genNodeList(params, context)\n  } else if (params) {\n    genNode(params, context)\n  }\n  push(`) => `)\n  if (newline || body) {\n    push(`{`)\n    indent()\n  }\n  if (returns) {\n    if (newline) {\n      push(`return `)\n    }\n    if (isArray(returns)) {\n      genNodeListAsArray(returns, context)\n    } else {\n      genNode(returns, context)\n    }\n  } else if (body) {\n    genNode(body, context)\n  }\n  if (newline || body) {\n    deindent()\n    push(`}`)\n  }\n  if (isSlot) {\n    if (__COMPAT__ && node.isNonScopedSlot) {\n      push(`, undefined, true`)\n    }\n    push(`)`)\n  }\n}\n\nfunction genConditionalExpression(\n  node: ConditionalExpression,\n  context: CodegenContext\n) {\n  const { test, consequent, alternate, newline: needNewline } = node\n  const { push, indent, deindent, newline } = context\n  if (test.type === NodeTypes.SIMPLE_EXPRESSION) {\n    const needsParens = !isSimpleIdentifier(test.content)\n    needsParens && push(`(`)\n    genExpression(test, context)\n    needsParens && push(`)`)\n  } else {\n    push(`(`)\n    genNode(test, context)\n    push(`)`)\n  }\n  needNewline && indent()\n  context.indentLevel++\n  needNewline || push(` `)\n  push(`? `)\n  genNode(consequent, context)\n  context.indentLevel--\n  needNewline && newline()\n  needNewline || push(` `)\n  push(`: `)\n  const isNested = alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\n  if (!isNested) {\n    context.indentLevel++\n  }\n  genNode(alternate, context)\n  if (!isNested) {\n    context.indentLevel--\n  }\n  needNewline && deindent(true /* without newline */)\n}\n\nfunction genCacheExpression(node: CacheExpression, context: CodegenContext) {\n  const { push, helper, indent, deindent, newline } = context\n  push(`_cache[${node.index}] || (`)\n  if (node.isVNode) {\n    indent()\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`)\n    newline()\n  }\n  push(`_cache[${node.index}] = `)\n  genNode(node.value, context)\n  if (node.isVNode) {\n    push(`,`)\n    newline()\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`)\n    newline()\n    push(`_cache[${node.index}]`)\n    deindent()\n  }\n  push(`)`)\n}\n\nfunction genTemplateLiteral(node: TemplateLiteral, context: CodegenContext) {\n  const { push, indent, deindent } = context\n  push('`')\n  const l = node.elements.length\n  const multilines = l > 3\n  for (let i = 0; i < l; i++) {\n    const e = node.elements[i]\n    if (isString(e)) {\n      push(e.replace(/(`|\\$|\\\\)/g, '\\\\$1'))\n    } else {\n      push('${')\n      if (multilines) indent()\n      genNode(e, context)\n      if (multilines) deindent()\n      push('}')\n    }\n  }\n  push('`')\n}\n\nfunction genIfStatement(node: IfStatement, context: CodegenContext) {\n  const { push, indent, deindent } = context\n  const { test, consequent, alternate } = node\n  push(`if (`)\n  genNode(test, context)\n  push(`) {`)\n  indent()\n  genNode(consequent, context)\n  deindent()\n  push(`}`)\n  if (alternate) {\n    push(` else `)\n    if (alternate.type === NodeTypes.JS_IF_STATEMENT) {\n      genIfStatement(alternate, context)\n    } else {\n      push(`{`)\n      indent()\n      genNode(alternate, context)\n      deindent()\n      push(`}`)\n    }\n  }\n}\n\nfunction genAssignmentExpression(\n  node: AssignmentExpression,\n  context: CodegenContext\n) {\n  genNode(node.left, context)\n  context.push(` = `)\n  genNode(node.right, context)\n}\n\nfunction genSequenceExpression(\n  node: SequenceExpression,\n  context: CodegenContext\n) {\n  context.push(`(`)\n  genNodeList(node.expressions, context)\n  context.push(`)`)\n}\n\nfunction genReturnStatement(\n  { returns }: ReturnStatement,\n  context: CodegenContext\n) {\n  context.push(`return `)\n  if (isArray(returns)) {\n    genNodeListAsArray(returns, context)\n  } else {\n    genNode(returns, context)\n  }\n}\n", "// @ts-check\n/** @typedef { import('estree').BaseNode} BaseNode */\n\n/** @typedef {{\n\tskip: () => void;\n\tremove: () => void;\n\treplace: (node: BaseNode) => void;\n}} WalkerContext */\n\nclass WalkerBase {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {BaseNode | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t * @param {BaseNode} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop][index] = node;\n\t\t\t} else {\n\t\t\t\tparent[prop] = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop].splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./walker.js').WalkerContext} WalkerContext */\n\n/** @typedef {(\n *    this: WalkerContext,\n *    node: BaseNode,\n *    parent: BaseNode,\n *    key: string,\n *    index: number\n * ) => void} SyncHandler */\n\nclass SyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {SyncHandler} enter\n\t * @param {SyncHandler} leave\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} node\n\t * @param {BaseNode} parent\n\t * @param {string} [prop]\n\t * @param {number} [index]\n\t * @returns {BaseNode}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!this.visit(value[i], node, key, i)) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./walker').WalkerContext} WalkerContext */\n\n/** @typedef {(\n *    this: WalkerContext,\n *    node: BaseNode,\n *    parent: BaseNode,\n *    key: string,\n *    index: number\n * ) => Promise<void>} AsyncHandler */\n\nclass AsyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {AsyncHandler} enter\n\t * @param {AsyncHandler} leave\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {AsyncHandler} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {AsyncHandler} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} node\n\t * @param {BaseNode} parent\n\t * @param {string} [prop]\n\t * @param {number} [index]\n\t * @returns {Promise<BaseNode>}\n\t */\n\tasync visit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tawait this.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!(await this.visit(value[i], node, key, i))) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tawait this.visit(value, node, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tawait this.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./sync.js').SyncHandler} SyncHandler */\n/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */\n\n/**\n *\n * @param {BaseNode} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {BaseNode}\n */\nfunction walk(ast, { enter, leave }) {\n\tconst instance = new SyncWalker(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\n/**\n *\n * @param {BaseNode} ast\n * @param {{\n *   enter?: AsyncHandler\n *   leave?: AsyncHandler\n * }} walker\n * @returns {Promise<BaseNode>}\n */\nasync function asyncWalk(ast, { enter, leave }) {\n\tconst instance = new AsyncWalker(enter, leave);\n\treturn await instance.visit(ast, null);\n}\n\nexport { asyncWalk, walk };\n", "// should only use types from @babel/types\n// do not import runtime methods\nimport type {\n  Identifier,\n  Node,\n  Function,\n  ObjectProperty,\n  BlockStatement,\n  Program\n} from '@babel/types'\nimport { walk } from 'estree-walker'\n\nexport function walkIdentifiers(\n  root: Node,\n  onIdentifier: (\n    node: Identifier,\n    parent: Node,\n    parentStack: Node[],\n    isReference: boolean,\n    isLocal: boolean\n  ) => void,\n  includeAll = false,\n  parentStack: Node[] = [],\n  knownIds: Record<string, number> = Object.create(null)\n) {\n  if (__BROWSER__) {\n    return\n  }\n\n  const rootExp =\n    root.type === 'Program' &&\n    root.body[0].type === 'ExpressionStatement' &&\n    root.body[0].expression\n\n  walk(root, {\n    enter(node: Node & { scopeIds?: Set<string> }, parent: Node | undefined) {\n      parent && parentStack.push(parent)\n      if (\n        parent &&\n        parent.type.startsWith('TS') &&\n        !TS_NODE_TYPES.includes(parent.type)\n      ) {\n        return this.skip()\n      }\n      if (node.type === 'Identifier') {\n        const isLocal = !!knownIds[node.name]\n        const isRefed = isReferencedIdentifier(node, parent!, parentStack)\n        if (includeAll || (isRefed && !isLocal)) {\n          onIdentifier(node, parent!, parentStack, isRefed, isLocal)\n        }\n      } else if (\n        node.type === 'ObjectProperty' &&\n        parent!.type === 'ObjectPattern'\n      ) {\n        // mark property in destructure pattern\n        ;(node as any).inPattern = true\n      } else if (isFunctionType(node)) {\n        // walk function expressions and add its arguments to known identifiers\n        // so that we don't prefix them\n        walkFunctionParams(node, id => markScopeIdentifier(node, id, knownIds))\n      } else if (node.type === 'BlockStatement') {\n        // #3445 record block-level local variables\n        walkBlockDeclarations(node, id =>\n          markScopeIdentifier(node, id, knownIds)\n        )\n      }\n    },\n    leave(node: Node & { scopeIds?: Set<string> }, parent: Node | undefined) {\n      parent && parentStack.pop()\n      if (node !== rootExp && node.scopeIds) {\n        for (const id of node.scopeIds) {\n          knownIds[id]--\n          if (knownIds[id] === 0) {\n            delete knownIds[id]\n          }\n        }\n      }\n    }\n  })\n}\n\nexport function isReferencedIdentifier(\n  id: Identifier,\n  parent: Node | null,\n  parentStack: Node[]\n) {\n  if (__BROWSER__) {\n    return false\n  }\n\n  if (!parent) {\n    return true\n  }\n\n  // is a special keyword but parsed as identifier\n  if (id.name === 'arguments') {\n    return false\n  }\n\n  if (isReferenced(id, parent)) {\n    return true\n  }\n\n  // babel's isReferenced check returns false for ids being assigned to, so we\n  // need to cover those cases here\n  switch (parent.type) {\n    case 'AssignmentExpression':\n    case 'AssignmentPattern':\n      return true\n    case 'ObjectPattern':\n    case 'ArrayPattern':\n      return isInDestructureAssignment(parent, parentStack)\n  }\n\n  return false\n}\n\nexport function isInDestructureAssignment(\n  parent: Node,\n  parentStack: Node[]\n): boolean {\n  if (\n    parent &&\n    (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')\n  ) {\n    let i = parentStack.length\n    while (i--) {\n      const p = parentStack[i]\n      if (p.type === 'AssignmentExpression') {\n        return true\n      } else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\n        break\n      }\n    }\n  }\n  return false\n}\n\nexport function walkFunctionParams(\n  node: Function,\n  onIdent: (id: Identifier) => void\n) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id)\n    }\n  }\n}\n\nexport function walkBlockDeclarations(\n  block: BlockStatement | Program,\n  onIdent: (node: Identifier) => void\n) {\n  for (const stmt of block.body) {\n    if (stmt.type === 'VariableDeclaration') {\n      if (stmt.declare) continue\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id)\n        }\n      }\n    } else if (\n      stmt.type === 'FunctionDeclaration' ||\n      stmt.type === 'ClassDeclaration'\n    ) {\n      if (stmt.declare || !stmt.id) continue\n      onIdent(stmt.id)\n    }\n  }\n}\n\nexport function extractIdentifiers(\n  param: Node,\n  nodes: Identifier[] = []\n): Identifier[] {\n  switch (param.type) {\n    case 'Identifier':\n      nodes.push(param)\n      break\n\n    case 'MemberExpression':\n      let object: any = param\n      while (object.type === 'MemberExpression') {\n        object = object.object\n      }\n      nodes.push(object)\n      break\n\n    case 'ObjectPattern':\n      for (const prop of param.properties) {\n        if (prop.type === 'RestElement') {\n          extractIdentifiers(prop.argument, nodes)\n        } else {\n          extractIdentifiers(prop.value, nodes)\n        }\n      }\n      break\n\n    case 'ArrayPattern':\n      param.elements.forEach(element => {\n        if (element) extractIdentifiers(element, nodes)\n      })\n      break\n\n    case 'RestElement':\n      extractIdentifiers(param.argument, nodes)\n      break\n\n    case 'AssignmentPattern':\n      extractIdentifiers(param.left, nodes)\n      break\n  }\n\n  return nodes\n}\n\nfunction markScopeIdentifier(\n  node: Node & { scopeIds?: Set<string> },\n  child: Identifier,\n  knownIds: Record<string, number>\n) {\n  const { name } = child\n  if (node.scopeIds && node.scopeIds.has(name)) {\n    return\n  }\n  if (name in knownIds) {\n    knownIds[name]++\n  } else {\n    knownIds[name] = 1\n  }\n  ;(node.scopeIds || (node.scopeIds = new Set())).add(name)\n}\n\nexport const isFunctionType = (node: Node): node is Function => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type)\n}\n\nexport const isStaticProperty = (node: Node): node is ObjectProperty =>\n  node &&\n  (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\n  !node.computed\n\nexport const isStaticPropertyKey = (node: Node, parent: Node) =>\n  isStaticProperty(parent) && parent.key === node\n\n/**\n * Copied from https://github.com/babel/babel/blob/main/packages/babel-types/src/validators/isReferenced.ts\n * To avoid runtime dependency on @babel/types (which includes process references)\n * This file should not change very often in babel but we may need to keep it\n * up-to-date from time to time.\n *\n * https://github.com/babel/babel/blob/main/LICENSE\n *\n */\nfunction isReferenced(node: Node, parent: Node, grandparent?: Node): boolean {\n  switch (parent.type) {\n    // yes: PARENT[NODE]\n    // yes: NODE.child\n    // no: parent.NODE\n    case 'MemberExpression':\n    case 'OptionalMemberExpression':\n      if (parent.property === node) {\n        return !!parent.computed\n      }\n      return parent.object === node\n\n    case 'JSXMemberExpression':\n      return parent.object === node\n    // no: let NODE = init;\n    // yes: let id = NODE;\n    case 'VariableDeclarator':\n      return parent.init === node\n\n    // yes: () => NODE\n    // no: (NODE) => {}\n    case 'ArrowFunctionExpression':\n      return parent.body === node\n\n    // no: class { #NODE; }\n    // no: class { get #NODE() {} }\n    // no: class { #NODE() {} }\n    // no: class { fn() { return this.#NODE; } }\n    case 'PrivateName':\n      return false\n\n    // no: class { NODE() {} }\n    // yes: class { [NODE]() {} }\n    // no: class { foo(NODE) {} }\n    case 'ClassMethod':\n    case 'ClassPrivateMethod':\n    case 'ObjectMethod':\n      if (parent.key === node) {\n        return !!parent.computed\n      }\n      return false\n\n    // yes: { [NODE]: \"\" }\n    // no: { NODE: \"\" }\n    // depends: { NODE }\n    // depends: { key: NODE }\n    case 'ObjectProperty':\n      if (parent.key === node) {\n        return !!parent.computed\n      }\n      // parent.value === node\n      return !grandparent || grandparent.type !== 'ObjectPattern'\n    // no: class { NODE = value; }\n    // yes: class { [NODE] = value; }\n    // yes: class { key = NODE; }\n    case 'ClassProperty':\n      if (parent.key === node) {\n        return !!parent.computed\n      }\n      return true\n    case 'ClassPrivateProperty':\n      return parent.key !== node\n\n    // no: class NODE {}\n    // yes: class Foo extends NODE {}\n    case 'ClassDeclaration':\n    case 'ClassExpression':\n      return parent.superClass === node\n\n    // yes: left = NODE;\n    // no: NODE = right;\n    case 'AssignmentExpression':\n      return parent.right === node\n\n    // no: [NODE = foo] = [];\n    // yes: [foo = NODE] = [];\n    case 'AssignmentPattern':\n      return parent.right === node\n\n    // no: NODE: for (;;) {}\n    case 'LabeledStatement':\n      return false\n\n    // no: try {} catch (NODE) {}\n    case 'CatchClause':\n      return false\n\n    // no: function foo(...NODE) {}\n    case 'RestElement':\n      return false\n\n    case 'BreakStatement':\n    case 'ContinueStatement':\n      return false\n\n    // no: function NODE() {}\n    // no: function foo(NODE) {}\n    case 'FunctionDeclaration':\n    case 'FunctionExpression':\n      return false\n\n    // no: export NODE from \"foo\";\n    // no: export * as NODE from \"foo\";\n    case 'ExportNamespaceSpecifier':\n    case 'ExportDefaultSpecifier':\n      return false\n\n    // no: export { foo as NODE };\n    // yes: export { NODE as foo };\n    // no: export { NODE as foo } from \"foo\";\n    case 'ExportSpecifier':\n      // @ts-expect-error\n      if (grandparent?.source) {\n        return false\n      }\n      return parent.local === node\n\n    // no: import NODE from \"foo\";\n    // no: import * as NODE from \"foo\";\n    // no: import { NODE as foo } from \"foo\";\n    // no: import { foo as NODE } from \"foo\";\n    // no: import NODE from \"bar\";\n    case 'ImportDefaultSpecifier':\n    case 'ImportNamespaceSpecifier':\n    case 'ImportSpecifier':\n      return false\n\n    // no: import \"foo\" assert { NODE: \"json\" }\n    case 'ImportAttribute':\n      return false\n\n    // no: <div NODE=\"foo\" />\n    case 'JSXAttribute':\n      return false\n\n    // no: [NODE] = [];\n    // no: ({ NODE }) = [];\n    case 'ObjectPattern':\n    case 'ArrayPattern':\n      return false\n\n    // no: new.NODE\n    // no: NODE.target\n    case 'MetaProperty':\n      return false\n\n    // yes: type X = { someProperty: NODE }\n    // no: type X = { NODE: OtherType }\n    case 'ObjectTypeProperty':\n      return parent.key !== node\n\n    // yes: enum X { Foo = NODE }\n    // no: enum X { NODE }\n    case 'TSEnumMember':\n      return parent.id !== node\n\n    // yes: { [NODE]: value }\n    // no: { NODE: value }\n    case 'TSPropertySignature':\n      if (parent.key === node) {\n        return !!parent.computed\n      }\n\n      return true\n  }\n\n  return true\n}\n\nexport const TS_NODE_TYPES = [\n  'TSAsExpression', // foo as number\n  'TSTypeAssertion', // (<number>foo)\n  'TSNonNullExpression', // foo!\n  'TSInstantiationExpression', // foo<string>\n  'TSSatisfiesExpression' // foo satisfies T\n]\n", "import { SimpleExpressionNode } from './ast'\nimport { TransformContext } from './transform'\nimport { createCompilerError, ErrorCodes } from './errors'\n\n// these keywords should not appear inside expressions, but operators like\n// 'typeof', 'instanceof', and 'in' are allowed\nconst prohibitedKeywordRE = new RegExp(\n  '\\\\b' +\n    (\n      'arguments,await,break,case,catch,class,const,continue,debugger,default,' +\n      'delete,do,else,export,extends,finally,for,function,if,import,let,new,' +\n      'return,super,switch,throw,try,var,void,while,with,yield'\n    )\n      .split(',')\n      .join('\\\\b|\\\\b') +\n    '\\\\b'\n)\n\n// strip strings in expressions\nconst stripStringRE =\n  /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g\n\n/**\n * Validate a non-prefixed expression.\n * This is only called when using the in-browser runtime compiler since it\n * doesn't prefix expressions.\n */\nexport function validateBrowserExpression(\n  node: SimpleExpressionNode,\n  context: TransformContext,\n  asParams = false,\n  asRawStatements = false\n) {\n  const exp = node.content\n\n  // empty expressions are validated per-directive since some directives\n  // do allow empty expressions.\n  if (!exp.trim()) {\n    return\n  }\n\n  try {\n    new Function(\n      asRawStatements\n        ? ` ${exp} `\n        : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`\n    )\n  } catch (e: any) {\n    let message = e.message\n    const keywordMatch = exp\n      .replace(stripStringRE, '')\n      .match(prohibitedKeywordRE)\n    if (keywordMatch) {\n      message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`\n    }\n    context.onError(\n      createCompilerError(\n        ErrorCodes.X_INVALID_EXPRESSION,\n        node.loc,\n        undefined,\n        message\n      )\n    )\n  }\n}\n", "// - Parse expressions in templates into compound expressions so that each\n//   identifier gets more accurate source-map locations.\n//\n// - Prefix identifiers with `_ctx.` or `$xxx` (for known binding types) so that\n//   they are accessed from the right source\n//\n// - This transform is only applied in non-browser builds because it relies on\n//   an additional JavaScript parser. In the browser, there is no source-map\n//   support and the code is wrapped in `with (this) { ... }`.\nimport { NodeTransform, TransformContext } from '../transform'\nimport {\n  NodeTypes,\n  createSimpleExpression,\n  ExpressionNode,\n  SimpleExpressionNode,\n  CompoundExpressionNode,\n  createCompoundExpression,\n  ConstantTypes\n} from '../ast'\nimport {\n  isInDestructureAssignment,\n  isStaticProperty,\n  isStaticPropertyKey,\n  walkIdentifiers\n} from '../babelUtils'\nimport { advancePositionWithClone, isSimpleIdentifier } from '../utils'\nimport {\n  isGloballyAllowed,\n  makeMap,\n  hasOwn,\n  isString,\n  genPropsAccessExp\n} from '@vue/shared'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport {\n  Node,\n  Identifier,\n  AssignmentExpression,\n  UpdateExpression\n} from '@babel/types'\nimport { validateBrowserExpression } from '../validateExpression'\nimport { parse } from '@babel/parser'\nimport { IS_REF, UNREF } from '../runtimeHelpers'\nimport { BindingTypes } from '../options'\n\nconst isLiteralWhitelisted = /*#__PURE__*/ makeMap('true,false,null,this')\n\n// a heuristic safeguard to bail constant expressions on presence of\n// likely function invocation and member access\nconst constantBailRE = /\\w\\s*\\(|\\.[^\\d]/\n\nexport const transformExpression: NodeTransform = (node, context) => {\n  if (node.type === NodeTypes.INTERPOLATION) {\n    node.content = processExpression(\n      node.content as SimpleExpressionNode,\n      context\n    )\n  } else if (node.type === NodeTypes.ELEMENT) {\n    // handle directives on element\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i]\n      // do not process for v-on & v-for since they are special handled\n      if (dir.type === NodeTypes.DIRECTIVE && dir.name !== 'for') {\n        const exp = dir.exp\n        const arg = dir.arg\n        // do not process exp if this is v-on:arg - we need special handling\n        // for wrapping inline statements.\n        if (\n          exp &&\n          exp.type === NodeTypes.SIMPLE_EXPRESSION &&\n          !(dir.name === 'on' && arg)\n        ) {\n          dir.exp = processExpression(\n            exp,\n            context,\n            // slot args must be processed as function params\n            dir.name === 'slot'\n          )\n        }\n        if (arg && arg.type === NodeTypes.SIMPLE_EXPRESSION && !arg.isStatic) {\n          dir.arg = processExpression(arg, context)\n        }\n      }\n    }\n  }\n}\n\ninterface PrefixMeta {\n  prefix?: string\n  isConstant: boolean\n  start: number\n  end: number\n  scopeIds?: Set<string>\n}\n\n// Important: since this function uses Node.js only dependencies, it should\n// always be used with a leading !__BROWSER__ check so that it can be\n// tree-shaken from the browser build.\nexport function processExpression(\n  node: SimpleExpressionNode,\n  context: TransformContext,\n  // some expressions like v-slot props & v-for aliases should be parsed as\n  // function params\n  asParams = false,\n  // v-on handler values may contain multiple statements\n  asRawStatements = false,\n  localVars: Record<string, number> = Object.create(context.identifiers)\n): ExpressionNode {\n  if (__BROWSER__) {\n    if (__DEV__) {\n      // simple in-browser validation (same logic in 2.x)\n      validateBrowserExpression(node, context, asParams, asRawStatements)\n    }\n    return node\n  }\n\n  if (!context.prefixIdentifiers || !node.content.trim()) {\n    return node\n  }\n\n  const { inline, bindingMetadata } = context\n  const rewriteIdentifier = (raw: string, parent?: Node, id?: Identifier) => {\n    const type = hasOwn(bindingMetadata, raw) && bindingMetadata[raw]\n    if (inline) {\n      // x = y\n      const isAssignmentLVal =\n        parent && parent.type === 'AssignmentExpression' && parent.left === id\n      // x++\n      const isUpdateArg =\n        parent && parent.type === 'UpdateExpression' && parent.argument === id\n      // ({ x } = y)\n      const isDestructureAssignment =\n        parent && isInDestructureAssignment(parent, parentStack)\n\n      if (\n        isConst(type) ||\n        type === BindingTypes.SETUP_REACTIVE_CONST ||\n        localVars[raw]\n      ) {\n        return raw\n      } else if (type === BindingTypes.SETUP_REF) {\n        return `${raw}.value`\n      } else if (type === BindingTypes.SETUP_MAYBE_REF) {\n        // const binding that may or may not be ref\n        // if it's not a ref, then assignments don't make sense -\n        // so we ignore the non-ref assignment case and generate code\n        // that assumes the value to be a ref for more efficiency\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment\n          ? `${raw}.value`\n          : `${context.helperString(UNREF)}(${raw})`\n      } else if (type === BindingTypes.SETUP_LET) {\n        if (isAssignmentLVal) {\n          // let binding.\n          // this is a bit more tricky as we need to cover the case where\n          // let is a local non-ref value, and we need to replicate the\n          // right hand side value.\n          // x = y --> isRef(x) ? x.value = y : x = y\n          const { right: rVal, operator } = parent as AssignmentExpression\n          const rExp = rawExp.slice(rVal.start! - 1, rVal.end! - 1)\n          const rExpString = stringifyExpression(\n            processExpression(\n              createSimpleExpression(rExp, false),\n              context,\n              false,\n              false,\n              knownIds\n            )\n          )\n          return `${context.helperString(IS_REF)}(${raw})${\n            context.isTS ? ` //@ts-ignore\\n` : ``\n          } ? ${raw}.value ${operator} ${rExpString} : ${raw}`\n        } else if (isUpdateArg) {\n          // make id replace parent in the code range so the raw update operator\n          // is removed\n          id!.start = parent!.start\n          id!.end = parent!.end\n          const { prefix: isPrefix, operator } = parent as UpdateExpression\n          const prefix = isPrefix ? operator : ``\n          const postfix = isPrefix ? `` : operator\n          // let binding.\n          // x++ --> isRef(a) ? a.value++ : a++\n          return `${context.helperString(IS_REF)}(${raw})${\n            context.isTS ? ` //@ts-ignore\\n` : ``\n          } ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`\n        } else if (isDestructureAssignment) {\n          // TODO\n          // let binding in a destructure assignment - it's very tricky to\n          // handle both possible cases here without altering the original\n          // structure of the code, so we just assume it's not a ref here\n          // for now\n          return raw\n        } else {\n          return `${context.helperString(UNREF)}(${raw})`\n        }\n      } else if (type === BindingTypes.PROPS) {\n        // use __props which is generated by compileScript so in ts mode\n        // it gets correct type\n        return genPropsAccessExp(raw)\n      } else if (type === BindingTypes.PROPS_ALIASED) {\n        // prop with a different local alias (from defineProps() destructure)\n        return genPropsAccessExp(bindingMetadata.__propsAliases![raw])\n      }\n    } else {\n      if (\n        (type && type.startsWith('setup')) ||\n        type === BindingTypes.LITERAL_CONST\n      ) {\n        // setup bindings in non-inline mode\n        return `$setup.${raw}`\n      } else if (type === BindingTypes.PROPS_ALIASED) {\n        return `$props['${bindingMetadata.__propsAliases![raw]}']`\n      } else if (type) {\n        return `$${type}.${raw}`\n      }\n    }\n\n    // fallback to ctx\n    return `_ctx.${raw}`\n  }\n\n  // fast path if expression is a simple identifier.\n  const rawExp = node.content\n  // bail constant on parens (function invocation) and dot (member access)\n  const bailConstant = constantBailRE.test(rawExp)\n\n  if (isSimpleIdentifier(rawExp)) {\n    const isScopeVarReference = context.identifiers[rawExp]\n    const isAllowedGlobal = isGloballyAllowed(rawExp)\n    const isLiteral = isLiteralWhitelisted(rawExp)\n    if (!asParams && !isScopeVarReference && !isAllowedGlobal && !isLiteral) {\n      // const bindings exposed from setup can be skipped for patching but\n      // cannot be hoisted to module scope\n      if (isConst(bindingMetadata[node.content])) {\n        node.constType = ConstantTypes.CAN_SKIP_PATCH\n      }\n      node.content = rewriteIdentifier(rawExp)\n    } else if (!isScopeVarReference) {\n      if (isLiteral) {\n        node.constType = ConstantTypes.CAN_STRINGIFY\n      } else {\n        node.constType = ConstantTypes.CAN_HOIST\n      }\n    }\n    return node\n  }\n\n  let ast: any\n  // exp needs to be parsed differently:\n  // 1. Multiple inline statements (v-on, with presence of `;`): parse as raw\n  //    exp, but make sure to pad with spaces for consistent ranges\n  // 2. Expressions: wrap with parens (for e.g. object expressions)\n  // 3. Function arguments (v-for, v-slot): place in a function argument position\n  const source = asRawStatements\n    ? ` ${rawExp} `\n    : `(${rawExp})${asParams ? `=>{}` : ``}`\n  try {\n    ast = parse(source, {\n      plugins: context.expressionPlugins\n    }).program\n  } catch (e: any) {\n    context.onError(\n      createCompilerError(\n        ErrorCodes.X_INVALID_EXPRESSION,\n        node.loc,\n        undefined,\n        e.message\n      )\n    )\n    return node\n  }\n\n  type QualifiedId = Identifier & PrefixMeta\n  const ids: QualifiedId[] = []\n  const parentStack: Node[] = []\n  const knownIds: Record<string, number> = Object.create(context.identifiers)\n\n  walkIdentifiers(\n    ast,\n    (node, parent, _, isReferenced, isLocal) => {\n      if (isStaticPropertyKey(node, parent!)) {\n        return\n      }\n      // v2 wrapped filter call\n      if (__COMPAT__ && node.name.startsWith('_filter_')) {\n        return\n      }\n\n      const needPrefix = isReferenced && canPrefix(node)\n      if (needPrefix && !isLocal) {\n        if (isStaticProperty(parent!) && parent.shorthand) {\n          // property shorthand like { foo }, we need to add the key since\n          // we rewrite the value\n          ;(node as QualifiedId).prefix = `${node.name}: `\n        }\n        node.name = rewriteIdentifier(node.name, parent, node)\n        ids.push(node as QualifiedId)\n      } else {\n        // The identifier is considered constant unless it's pointing to a\n        // local scope variable (a v-for alias, or a v-slot prop)\n        if (!(needPrefix && isLocal) && !bailConstant) {\n          ;(node as QualifiedId).isConstant = true\n        }\n        // also generate sub-expressions for other identifiers for better\n        // source map support. (except for property keys which are static)\n        ids.push(node as QualifiedId)\n      }\n    },\n    true, // invoke on ALL identifiers\n    parentStack,\n    knownIds\n  )\n\n  // We break up the compound expression into an array of strings and sub\n  // expressions (for identifiers that have been prefixed). In codegen, if\n  // an ExpressionNode has the `.children` property, it will be used instead of\n  // `.content`.\n  const children: CompoundExpressionNode['children'] = []\n  ids.sort((a, b) => a.start - b.start)\n  ids.forEach((id, i) => {\n    // range is offset by -1 due to the wrapping parens when parsed\n    const start = id.start - 1\n    const end = id.end - 1\n    const last = ids[i - 1]\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start)\n    if (leadingText.length || id.prefix) {\n      children.push(leadingText + (id.prefix || ``))\n    }\n    const source = rawExp.slice(start, end)\n    children.push(\n      createSimpleExpression(\n        id.name,\n        false,\n        {\n          source,\n          start: advancePositionWithClone(node.loc.start, source, start),\n          end: advancePositionWithClone(node.loc.start, source, end)\n        },\n        id.isConstant ? ConstantTypes.CAN_STRINGIFY : ConstantTypes.NOT_CONSTANT\n      )\n    )\n    if (i === ids.length - 1 && end < rawExp.length) {\n      children.push(rawExp.slice(end))\n    }\n  })\n\n  let ret\n  if (children.length) {\n    ret = createCompoundExpression(children, node.loc)\n  } else {\n    ret = node\n    ret.constType = bailConstant\n      ? ConstantTypes.NOT_CONSTANT\n      : ConstantTypes.CAN_STRINGIFY\n  }\n  ret.identifiers = Object.keys(knownIds)\n  return ret\n}\n\nfunction canPrefix(id: Identifier) {\n  // skip whitelisted globals\n  if (isGloballyAllowed(id.name)) {\n    return false\n  }\n  // special case for webpack compilation\n  if (id.name === 'require') {\n    return false\n  }\n  return true\n}\n\nexport function stringifyExpression(exp: ExpressionNode | string): string {\n  if (isString(exp)) {\n    return exp\n  } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\n    return exp.content\n  } else {\n    return (exp.children as (ExpressionNode | string)[])\n      .map(stringifyExpression)\n      .join('')\n  }\n}\n\nfunction isConst(type: unknown) {\n  return (\n    type === BindingTypes.SETUP_CONST || type === BindingTypes.LITERAL_CONST\n  )\n}\n", "import {\n  createStructuralDirectiveTransform,\n  TransformContext,\n  traverseNode\n} from '../transform'\nimport {\n  NodeTypes,\n  ElementTypes,\n  ElementNode,\n  DirectiveNode,\n  IfBranchNode,\n  SimpleExpressionNode,\n  createCallExpression,\n  createConditionalExpression,\n  createSimpleExpression,\n  createObjectProperty,\n  createObjectExpression,\n  IfConditionalExpression,\n  BlockCodegenNode,\n  IfNode,\n  createVNodeCall,\n  AttributeNode,\n  locStub,\n  CacheExpression,\n  ConstantTypes,\n  MemoExpression,\n  convertToBlock\n} from '../ast'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport { processExpression } from './transformExpression'\nimport { validateBrowserExpression } from '../validateExpression'\nimport { FRAGMENT, CREATE_COMMENT } from '../runtimeHelpers'\nimport {\n  injectProp,\n  findDir,\n  findProp,\n  isBuiltInType,\n  getMemoedVNodeCall\n} from '../utils'\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\n\nexport const transformIf = createStructuralDirectiveTransform(\n  /^(if|else|else-if)$/,\n  (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n      // #1587: We need to dynamically increment the key based on the current\n      // node's sibling nodes, since chained v-if/else branches are\n      // rendered at the same depth\n      const siblings = context.parent!.children\n      let i = siblings.indexOf(ifNode)\n      let key = 0\n      while (i-- >= 0) {\n        const sibling = siblings[i]\n        if (sibling && sibling.type === NodeTypes.IF) {\n          key += sibling.branches.length\n        }\n      }\n\n      // Exit callback. Complete the codegenNode when all children have been\n      // transformed.\n      return () => {\n        if (isRoot) {\n          ifNode.codegenNode = createCodegenNodeForBranch(\n            branch,\n            key,\n            context\n          ) as IfConditionalExpression\n        } else {\n          // attach this branch's codegen node to the v-if root.\n          const parentCondition = getParentCondition(ifNode.codegenNode!)\n          parentCondition.alternate = createCodegenNodeForBranch(\n            branch,\n            key + ifNode.branches.length - 1,\n            context\n          )\n        }\n      }\n    })\n  }\n)\n\n// target-agnostic transform used for both Client and SSR\nexport function processIf(\n  node: ElementNode,\n  dir: DirectiveNode,\n  context: TransformContext,\n  processCodegen?: (\n    node: IfNode,\n    branch: IfBranchNode,\n    isRoot: boolean\n  ) => (() => void) | undefined\n) {\n  if (\n    dir.name !== 'else' &&\n    (!dir.exp || !(dir.exp as SimpleExpressionNode).content.trim())\n  ) {\n    const loc = dir.exp ? dir.exp.loc : node.loc\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_IF_NO_EXPRESSION, dir.loc)\n    )\n    dir.exp = createSimpleExpression(`true`, false, loc)\n  }\n\n  if (!__BROWSER__ && context.prefixIdentifiers && dir.exp) {\n    // dir.exp can only be simple expression because vIf transform is applied\n    // before expression transform.\n    dir.exp = processExpression(dir.exp as SimpleExpressionNode, context)\n  }\n\n  if (__DEV__ && __BROWSER__ && dir.exp) {\n    validateBrowserExpression(dir.exp as SimpleExpressionNode, context)\n  }\n\n  if (dir.name === 'if') {\n    const branch = createIfBranch(node, dir)\n    const ifNode: IfNode = {\n      type: NodeTypes.IF,\n      loc: node.loc,\n      branches: [branch]\n    }\n    context.replaceNode(ifNode)\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true)\n    }\n  } else {\n    // locate the adjacent v-if\n    const siblings = context.parent!.children\n    const comments = []\n    let i = siblings.indexOf(node)\n    while (i-- >= -1) {\n      const sibling = siblings[i]\n      if (sibling && sibling.type === NodeTypes.COMMENT) {\n        context.removeNode(sibling)\n        __DEV__ && comments.unshift(sibling)\n        continue\n      }\n\n      if (\n        sibling &&\n        sibling.type === NodeTypes.TEXT &&\n        !sibling.content.trim().length\n      ) {\n        context.removeNode(sibling)\n        continue\n      }\n\n      if (sibling && sibling.type === NodeTypes.IF) {\n        // Check if v-else was followed by v-else-if\n        if (\n          dir.name === 'else-if' &&\n          sibling.branches[sibling.branches.length - 1].condition === undefined\n        ) {\n          context.onError(\n            createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc)\n          )\n        }\n\n        // move the node to the if node's branches\n        context.removeNode()\n        const branch = createIfBranch(node, dir)\n        if (\n          __DEV__ &&\n          comments.length &&\n          // #3619 ignore comments if the v-if is direct child of <transition>\n          !(\n            context.parent &&\n            context.parent.type === NodeTypes.ELEMENT &&\n            isBuiltInType(context.parent.tag, 'transition')\n          )\n        ) {\n          branch.children = [...comments, ...branch.children]\n        }\n\n        // check if user is forcing same key on different branches\n        if (__DEV__ || !__BROWSER__) {\n          const key = branch.userKey\n          if (key) {\n            sibling.branches.forEach(({ userKey }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(\n                  createCompilerError(\n                    ErrorCodes.X_V_IF_SAME_KEY,\n                    branch.userKey!.loc\n                  )\n                )\n              }\n            })\n          }\n        }\n\n        sibling.branches.push(branch)\n        const onExit = processCodegen && processCodegen(sibling, branch, false)\n        // since the branch was removed, it will not be traversed.\n        // make sure to traverse here.\n        traverseNode(branch, context)\n        // call on exit\n        if (onExit) onExit()\n        // make sure to reset currentNode after traversal to indicate this\n        // node has been removed.\n        context.currentNode = null\n      } else {\n        context.onError(\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc)\n        )\n      }\n      break\n    }\n  }\n}\n\nfunction createIfBranch(node: ElementNode, dir: DirectiveNode): IfBranchNode {\n  const isTemplateIf = node.tagType === ElementTypes.TEMPLATE\n  return {\n    type: NodeTypes.IF_BRANCH,\n    loc: node.loc,\n    condition: dir.name === 'else' ? undefined : dir.exp,\n    children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\n    userKey: findProp(node, `key`),\n    isTemplateIf\n  }\n}\n\nfunction createCodegenNodeForBranch(\n  branch: IfBranchNode,\n  keyIndex: number,\n  context: TransformContext\n): IfConditionalExpression | BlockCodegenNode | MemoExpression {\n  if (branch.condition) {\n    return createConditionalExpression(\n      branch.condition,\n      createChildrenCodegenNode(branch, keyIndex, context),\n      // make sure to pass in asBlock: true so that the comment node call\n      // closes the current block.\n      createCallExpression(context.helper(CREATE_COMMENT), [\n        __DEV__ ? '\"v-if\"' : '\"\"',\n        'true'\n      ])\n    ) as IfConditionalExpression\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context)\n  }\n}\n\nfunction createChildrenCodegenNode(\n  branch: IfBranchNode,\n  keyIndex: number,\n  context: TransformContext\n): BlockCodegenNode | MemoExpression {\n  const { helper } = context\n  const keyProperty = createObjectProperty(\n    `key`,\n    createSimpleExpression(\n      `${keyIndex}`,\n      false,\n      locStub,\n      ConstantTypes.CAN_HOIST\n    )\n  )\n  const { children } = branch\n  const firstChild = children[0]\n  const needFragmentWrapper =\n    children.length !== 1 || firstChild.type !== NodeTypes.ELEMENT\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === NodeTypes.FOR) {\n      // optimize away nested fragments when child is a ForNode\n      const vnodeCall = firstChild.codegenNode!\n      injectProp(vnodeCall, keyProperty, context)\n      return vnodeCall\n    } else {\n      let patchFlag = PatchFlags.STABLE_FRAGMENT\n      let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\n      // check if the fragment actually contains a single valid child with\n      // the rest being comments\n      if (\n        __DEV__ &&\n        !branch.isTemplateIf &&\n        children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\n      ) {\n        patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\n        patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\n      }\n\n      return createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        createObjectExpression([keyProperty]),\n        children,\n        patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\n        undefined,\n        undefined,\n        true,\n        false,\n        false /* isComponent */,\n        branch.loc\n      )\n    }\n  } else {\n    const ret = (firstChild as ElementNode).codegenNode as\n      | BlockCodegenNode\n      | MemoExpression\n    const vnodeCall = getMemoedVNodeCall(ret)\n    // Change createVNode to createBlock.\n    if (vnodeCall.type === NodeTypes.VNODE_CALL) {\n      convertToBlock(vnodeCall, context)\n    }\n    // inject branch key\n    injectProp(vnodeCall, keyProperty, context)\n    return ret\n  }\n}\n\nfunction isSameKey(\n  a: AttributeNode | DirectiveNode | undefined,\n  b: AttributeNode | DirectiveNode\n): boolean {\n  if (!a || a.type !== b.type) {\n    return false\n  }\n  if (a.type === NodeTypes.ATTRIBUTE) {\n    if (a.value!.content !== (b as AttributeNode).value!.content) {\n      return false\n    }\n  } else {\n    // directive\n    const exp = a.exp!\n    const branchExp = (b as DirectiveNode).exp!\n    if (exp.type !== branchExp.type) {\n      return false\n    }\n    if (\n      exp.type !== NodeTypes.SIMPLE_EXPRESSION ||\n      exp.isStatic !== (branchExp as SimpleExpressionNode).isStatic ||\n      exp.content !== (branchExp as SimpleExpressionNode).content\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getParentCondition(\n  node: IfConditionalExpression | CacheExpression\n): IfConditionalExpression {\n  while (true) {\n    if (node.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\n      if (node.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\n        node = node.alternate\n      } else {\n        return node\n      }\n    } else if (node.type === NodeTypes.JS_CACHE_EXPRESSION) {\n      node = node.value as IfConditionalExpression\n    }\n  }\n}\n", "import {\n  createStructuralDirectiveTransform,\n  TransformContext\n} from '../transform'\nimport {\n  NodeTypes,\n  ExpressionNode,\n  createSimpleExpression,\n  SourceLocation,\n  SimpleExpressionNode,\n  createCallExpression,\n  createFunctionExpression,\n  createObjectExpression,\n  createObjectProperty,\n  ForCodegenNode,\n  RenderSlotCall,\n  SlotOutletNode,\n  ElementNode,\n  DirectiveNode,\n  ForNode,\n  PlainElementNode,\n  createVNodeCall,\n  VNodeCall,\n  ForRenderListExpression,\n  BlockCodegenNode,\n  ForIteratorExpression,\n  ConstantTypes,\n  createBlockStatement,\n  createCompoundExpression,\n  getVNodeBlockHelper,\n  getVNodeHelper\n} from '../ast'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport {\n  getInnerRange,\n  findProp,\n  isTemplateNode,\n  isSlotOutlet,\n  injectProp,\n  findDir\n} from '../utils'\nimport {\n  RENDER_LIST,\n  OPEN_BLOCK,\n  FRAGMENT,\n  IS_MEMO_SAME\n} from '../runtimeHelpers'\nimport { processExpression } from './transformExpression'\nimport { validateBrowserExpression } from '../validateExpression'\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\n\nexport const transformFor = createStructuralDirectiveTransform(\n  'for',\n  (node, dir, context) => {\n    const { helper, removeHelper } = context\n    return processFor(node, dir, context, forNode => {\n      // create the loop render function expression now, and add the\n      // iterator on exit after all children have been traversed\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\n        forNode.source\n      ]) as ForRenderListExpression\n      const isTemplate = isTemplateNode(node)\n      const memo = findDir(node, 'memo')\n      const keyProp = findProp(node, `key`)\n      const keyExp =\n        keyProp &&\n        (keyProp.type === NodeTypes.ATTRIBUTE\n          ? createSimpleExpression(keyProp.value!.content, true)\n          : keyProp.exp!)\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp!) : null\n\n      if (!__BROWSER__ && isTemplate) {\n        // #2085 / #5288 process :key and v-memo expressions need to be\n        // processed on `<template v-for>`. In this case the node is discarded\n        // and never traversed so its binding expressions won't be processed\n        // by the normal transforms.\n        if (memo) {\n          memo.exp = processExpression(\n            memo.exp! as SimpleExpressionNode,\n            context\n          )\n        }\n        if (keyProperty && keyProp!.type !== NodeTypes.ATTRIBUTE) {\n          keyProperty.value = processExpression(\n            keyProperty.value as SimpleExpressionNode,\n            context\n          )\n        }\n      }\n\n      const isStableFragment =\n        forNode.source.type === NodeTypes.SIMPLE_EXPRESSION &&\n        forNode.source.constType > ConstantTypes.NOT_CONSTANT\n      const fragmentFlag = isStableFragment\n        ? PatchFlags.STABLE_FRAGMENT\n        : keyProp\n        ? PatchFlags.KEYED_FRAGMENT\n        : PatchFlags.UNKEYED_FRAGMENT\n\n      forNode.codegenNode = createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        undefined,\n        renderExp,\n        fragmentFlag +\n          (__DEV__ ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``),\n        undefined,\n        undefined,\n        true /* isBlock */,\n        !isStableFragment /* disableTracking */,\n        false /* isComponent */,\n        node.loc\n      ) as ForCodegenNode\n\n      return () => {\n        // finish the codegen now that all children have been traversed\n        let childBlock: BlockCodegenNode\n        const { children } = forNode\n\n        // check <template v-for> key placement\n        if ((__DEV__ || !__BROWSER__) && isTemplate) {\n          node.children.some(c => {\n            if (c.type === NodeTypes.ELEMENT) {\n              const key = findProp(c, 'key')\n              if (key) {\n                context.onError(\n                  createCompilerError(\n                    ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT,\n                    key.loc\n                  )\n                )\n                return true\n              }\n            }\n          })\n        }\n\n        const needFragmentWrapper =\n          children.length !== 1 || children[0].type !== NodeTypes.ELEMENT\n        const slotOutlet = isSlotOutlet(node)\n          ? node\n          : isTemplate &&\n            node.children.length === 1 &&\n            isSlotOutlet(node.children[0])\n          ? (node.children[0] as SlotOutletNode) // api-extractor somehow fails to infer this\n          : null\n\n        if (slotOutlet) {\n          // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\n          childBlock = slotOutlet.codegenNode as RenderSlotCall\n          if (isTemplate && keyProperty) {\n            // <template v-for=\"...\" :key=\"...\"><slot/></template>\n            // we need to inject the key to the renderSlot() call.\n            // the props for renderSlot is passed as the 3rd argument.\n            injectProp(childBlock, keyProperty, context)\n          }\n        } else if (needFragmentWrapper) {\n          // <template v-for=\"...\"> with text or multi-elements\n          // should generate a fragment block for each loop\n          childBlock = createVNodeCall(\n            context,\n            helper(FRAGMENT),\n            keyProperty ? createObjectExpression([keyProperty]) : undefined,\n            node.children,\n            PatchFlags.STABLE_FRAGMENT +\n              (__DEV__\n                ? ` /* ${PatchFlagNames[PatchFlags.STABLE_FRAGMENT]} */`\n                : ``),\n            undefined,\n            undefined,\n            true,\n            undefined,\n            false /* isComponent */\n          )\n        } else {\n          // Normal element v-for. Directly use the child's codegenNode\n          // but mark it as a block.\n          childBlock = (children[0] as PlainElementNode)\n            .codegenNode as VNodeCall\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context)\n          }\n          if (childBlock.isBlock !== !isStableFragment) {\n            if (childBlock.isBlock) {\n              // switch from block to vnode\n              removeHelper(OPEN_BLOCK)\n              removeHelper(\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\n              )\n            } else {\n              // switch from vnode to block\n              removeHelper(\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\n              )\n            }\n          }\n          childBlock.isBlock = !isStableFragment\n          if (childBlock.isBlock) {\n            helper(OPEN_BLOCK)\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent))\n          } else {\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent))\n          }\n        }\n\n        if (memo) {\n          const loop = createFunctionExpression(\n            createForLoopParams(forNode.parseResult, [\n              createSimpleExpression(`_cached`)\n            ])\n          )\n          loop.body = createBlockStatement([\n            createCompoundExpression([`const _memo = (`, memo.exp!, `)`]),\n            createCompoundExpression([\n              `if (_cached`,\n              ...(keyExp ? [` && _cached.key === `, keyExp] : []),\n              ` && ${context.helperString(\n                IS_MEMO_SAME\n              )}(_cached, _memo)) return _cached`\n            ]),\n            createCompoundExpression([`const _item = `, childBlock as any]),\n            createSimpleExpression(`_item.memo = _memo`),\n            createSimpleExpression(`return _item`)\n          ])\n          renderExp.arguments.push(\n            loop as ForIteratorExpression,\n            createSimpleExpression(`_cache`),\n            createSimpleExpression(String(context.cached++))\n          )\n        } else {\n          renderExp.arguments.push(\n            createFunctionExpression(\n              createForLoopParams(forNode.parseResult),\n              childBlock,\n              true /* force newline */\n            ) as ForIteratorExpression\n          )\n        }\n      }\n    })\n  }\n)\n\n// target-agnostic transform used for both Client and SSR\nexport function processFor(\n  node: ElementNode,\n  dir: DirectiveNode,\n  context: TransformContext,\n  processCodegen?: (forNode: ForNode) => (() => void) | undefined\n) {\n  if (!dir.exp) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_FOR_NO_EXPRESSION, dir.loc)\n    )\n    return\n  }\n\n  const parseResult = parseForExpression(\n    // can only be simple expression because vFor transform is applied\n    // before expression transform.\n    dir.exp as SimpleExpressionNode,\n    context\n  )\n\n  if (!parseResult) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, dir.loc)\n    )\n    return\n  }\n\n  const { addIdentifiers, removeIdentifiers, scopes } = context\n  const { source, value, key, index } = parseResult\n\n  const forNode: ForNode = {\n    type: NodeTypes.FOR,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  }\n\n  context.replaceNode(forNode)\n\n  // bookkeeping\n  scopes.vFor++\n  if (!__BROWSER__ && context.prefixIdentifiers) {\n    // scope management\n    // inject identifiers to context\n    value && addIdentifiers(value)\n    key && addIdentifiers(key)\n    index && addIdentifiers(index)\n  }\n\n  const onExit = processCodegen && processCodegen(forNode)\n\n  return () => {\n    scopes.vFor--\n    if (!__BROWSER__ && context.prefixIdentifiers) {\n      value && removeIdentifiers(value)\n      key && removeIdentifiers(key)\n      index && removeIdentifiers(index)\n    }\n    if (onExit) onExit()\n  }\n}\n\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\n// This regex doesn't cover the case if key or index aliases have destructuring,\n// but those do not make sense in the first place, so this works in practice.\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\nconst stripParensRE = /^\\(|\\)$/g\n\nexport interface ForParseResult {\n  source: ExpressionNode\n  value: ExpressionNode | undefined\n  key: ExpressionNode | undefined\n  index: ExpressionNode | undefined\n}\n\nexport function parseForExpression(\n  input: SimpleExpressionNode,\n  context: TransformContext\n): ForParseResult | undefined {\n  const loc = input.loc\n  const exp = input.content\n  const inMatch = exp.match(forAliasRE)\n  if (!inMatch) return\n\n  const [, LHS, RHS] = inMatch\n\n  const result: ForParseResult = {\n    source: createAliasExpression(\n      loc,\n      RHS.trim(),\n      exp.indexOf(RHS, LHS.length)\n    ),\n    value: undefined,\n    key: undefined,\n    index: undefined\n  }\n  if (!__BROWSER__ && context.prefixIdentifiers) {\n    result.source = processExpression(\n      result.source as SimpleExpressionNode,\n      context\n    )\n  }\n  if (__DEV__ && __BROWSER__) {\n    validateBrowserExpression(result.source as SimpleExpressionNode, context)\n  }\n\n  let valueContent = LHS.trim().replace(stripParensRE, '').trim()\n  const trimmedOffset = LHS.indexOf(valueContent)\n\n  const iteratorMatch = valueContent.match(forIteratorRE)\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, '').trim()\n\n    const keyContent = iteratorMatch[1].trim()\n    let keyOffset: number | undefined\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length)\n      result.key = createAliasExpression(loc, keyContent, keyOffset)\n      if (!__BROWSER__ && context.prefixIdentifiers) {\n        result.key = processExpression(result.key, context, true)\n      }\n      if (__DEV__ && __BROWSER__) {\n        validateBrowserExpression(\n          result.key as SimpleExpressionNode,\n          context,\n          true\n        )\n      }\n    }\n\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim()\n\n      if (indexContent) {\n        result.index = createAliasExpression(\n          loc,\n          indexContent,\n          exp.indexOf(\n            indexContent,\n            result.key\n              ? keyOffset! + keyContent.length\n              : trimmedOffset + valueContent.length\n          )\n        )\n        if (!__BROWSER__ && context.prefixIdentifiers) {\n          result.index = processExpression(result.index, context, true)\n        }\n        if (__DEV__ && __BROWSER__) {\n          validateBrowserExpression(\n            result.index as SimpleExpressionNode,\n            context,\n            true\n          )\n        }\n      }\n    }\n  }\n\n  if (valueContent) {\n    result.value = createAliasExpression(loc, valueContent, trimmedOffset)\n    if (!__BROWSER__ && context.prefixIdentifiers) {\n      result.value = processExpression(result.value, context, true)\n    }\n    if (__DEV__ && __BROWSER__) {\n      validateBrowserExpression(\n        result.value as SimpleExpressionNode,\n        context,\n        true\n      )\n    }\n  }\n\n  return result\n}\n\nfunction createAliasExpression(\n  range: SourceLocation,\n  content: string,\n  offset: number\n): SimpleExpressionNode {\n  return createSimpleExpression(\n    content,\n    false,\n    getInnerRange(range, offset, content.length)\n  )\n}\n\nexport function createForLoopParams(\n  { value, key, index }: ForParseResult,\n  memoArgs: ExpressionNode[] = []\n): ExpressionNode[] {\n  return createParamsList([value, key, index, ...memoArgs])\n}\n\nfunction createParamsList(\n  args: (ExpressionNode | undefined)[]\n): ExpressionNode[] {\n  let i = args.length\n  while (i--) {\n    if (args[i]) break\n  }\n  return args\n    .slice(0, i + 1)\n    .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false))\n}\n", "import {\n  ElementNode,\n  ObjectExpression,\n  createObjectExpression,\n  NodeTypes,\n  createObjectProperty,\n  createSimpleExpression,\n  createFunctionExpression,\n  DirectiveNode,\n  ElementTypes,\n  ExpressionNode,\n  Property,\n  TemplateChildNode,\n  SourceLocation,\n  createConditionalExpression,\n  ConditionalExpression,\n  SimpleExpressionNode,\n  FunctionExpression,\n  CallExpression,\n  createCallExpression,\n  createArrayExpression,\n  SlotsExpression\n} from '../ast'\nimport { TransformContext, NodeTransform } from '../transform'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport {\n  findDir,\n  isTemplateNode,\n  assert,\n  isVSlot,\n  hasScopeRef,\n  isStaticExp\n} from '../utils'\nimport { CREATE_SLOTS, RENDER_LIST, WITH_CTX } from '../runtimeHelpers'\nimport { parseForExpression, createForLoopParams } from './vFor'\nimport { SlotFlags, slotFlagsText } from '@vue/shared'\n\nconst defaultFallback = createSimpleExpression(`undefined`, false)\n\n// A NodeTransform that:\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\n//    by transformExpression. This is only applied in non-browser builds with\n//    { prefixIdentifiers: true }.\n// 2. Track v-slot depths so that we know a slot is inside another slot.\n//    Note the exit callback is executed before buildSlots() on the same node,\n//    so only nested slots see positive numbers.\nexport const trackSlotScopes: NodeTransform = (node, context) => {\n  if (\n    node.type === NodeTypes.ELEMENT &&\n    (node.tagType === ElementTypes.COMPONENT ||\n      node.tagType === ElementTypes.TEMPLATE)\n  ) {\n    // We are only checking non-empty v-slot here\n    // since we only care about slots that introduce scope variables.\n    const vSlot = findDir(node, 'slot')\n    if (vSlot) {\n      const slotProps = vSlot.exp\n      if (!__BROWSER__ && context.prefixIdentifiers) {\n        slotProps && context.addIdentifiers(slotProps)\n      }\n      context.scopes.vSlot++\n      return () => {\n        if (!__BROWSER__ && context.prefixIdentifiers) {\n          slotProps && context.removeIdentifiers(slotProps)\n        }\n        context.scopes.vSlot--\n      }\n    }\n  }\n}\n\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\nexport const trackVForSlotScopes: NodeTransform = (node, context) => {\n  let vFor\n  if (\n    isTemplateNode(node) &&\n    node.props.some(isVSlot) &&\n    (vFor = findDir(node, 'for'))\n  ) {\n    const result = (vFor.parseResult = parseForExpression(\n      vFor.exp as SimpleExpressionNode,\n      context\n    ))\n    if (result) {\n      const { value, key, index } = result\n      const { addIdentifiers, removeIdentifiers } = context\n      value && addIdentifiers(value)\n      key && addIdentifiers(key)\n      index && addIdentifiers(index)\n\n      return () => {\n        value && removeIdentifiers(value)\n        key && removeIdentifiers(key)\n        index && removeIdentifiers(index)\n      }\n    }\n  }\n}\n\nexport type SlotFnBuilder = (\n  slotProps: ExpressionNode | undefined,\n  slotChildren: TemplateChildNode[],\n  loc: SourceLocation\n) => FunctionExpression\n\nconst buildClientSlotFn: SlotFnBuilder = (props, children, loc) =>\n  createFunctionExpression(\n    props,\n    children,\n    false /* newline */,\n    true /* isSlot */,\n    children.length ? children[0].loc : loc\n  )\n\n// Instead of being a DirectiveTransform, v-slot processing is called during\n// transformElement to build the slots object for a component.\nexport function buildSlots(\n  node: ElementNode,\n  context: TransformContext,\n  buildSlotFn: SlotFnBuilder = buildClientSlotFn\n): {\n  slots: SlotsExpression\n  hasDynamicSlots: boolean\n} {\n  context.helper(WITH_CTX)\n\n  const { children, loc } = node\n  const slotsProperties: Property[] = []\n  const dynamicSlots: (ConditionalExpression | CallExpression)[] = []\n\n  // If the slot is inside a v-for or another v-slot, force it to be dynamic\n  // since it likely uses a scope variable.\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0\n  // with `prefixIdentifiers: true`, this can be further optimized to make\n  // it dynamic only when the slot actually uses the scope variables.\n  if (!__BROWSER__ && !context.ssr && context.prefixIdentifiers) {\n    hasDynamicSlots = hasScopeRef(node, context.identifiers)\n  }\n\n  // 1. Check for slot with slotProps on component itself.\n  //    <Comp v-slot=\"{ prop }\"/>\n  const onComponentSlot = findDir(node, 'slot', true)\n  if (onComponentSlot) {\n    const { arg, exp } = onComponentSlot\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true\n    }\n    slotsProperties.push(\n      createObjectProperty(\n        arg || createSimpleExpression('default', true),\n        buildSlotFn(exp, children, loc)\n      )\n    )\n  }\n\n  // 2. Iterate through children and check for template slots\n  //    <template v-slot:foo=\"{ prop }\">\n  let hasTemplateSlots = false\n  let hasNamedDefaultSlot = false\n  const implicitDefaultChildren: TemplateChildNode[] = []\n  const seenSlotNames = new Set<string>()\n  let conditionalBranchIndex = 0\n\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i]\n    let slotDir\n\n    if (\n      !isTemplateNode(slotElement) ||\n      !(slotDir = findDir(slotElement, 'slot', true))\n    ) {\n      // not a <template v-slot>, skip.\n      if (slotElement.type !== NodeTypes.COMMENT) {\n        implicitDefaultChildren.push(slotElement)\n      }\n      continue\n    }\n\n    if (onComponentSlot) {\n      // already has on-component slot - this is incorrect usage.\n      context.onError(\n        createCompilerError(ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE, slotDir.loc)\n      )\n      break\n    }\n\n    hasTemplateSlots = true\n    const { children: slotChildren, loc: slotLoc } = slotElement\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir\n\n    // check if name is dynamic.\n    let staticSlotName: string | undefined\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`\n    } else {\n      hasDynamicSlots = true\n    }\n\n    const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc)\n    // check if this slot is conditional (v-if/v-for)\n    let vIf: DirectiveNode | undefined\n    let vElse: DirectiveNode | undefined\n    let vFor: DirectiveNode | undefined\n    if ((vIf = findDir(slotElement, 'if'))) {\n      hasDynamicSlots = true\n      dynamicSlots.push(\n        createConditionalExpression(\n          vIf.exp!,\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\n          defaultFallback\n        )\n      )\n    } else if (\n      (vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))\n    ) {\n      // find adjacent v-if\n      let j = i\n      let prev\n      while (j--) {\n        prev = children[j]\n        if (prev.type !== NodeTypes.COMMENT) {\n          break\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\n        // remove node\n        children.splice(i, 1)\n        i--\n        __TEST__ && assert(dynamicSlots.length > 0)\n        // attach this slot to previous conditional\n        let conditional = dynamicSlots[\n          dynamicSlots.length - 1\n        ] as ConditionalExpression\n        while (\n          conditional.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\n        ) {\n          conditional = conditional.alternate\n        }\n        conditional.alternate = vElse.exp\n          ? createConditionalExpression(\n              vElse.exp,\n              buildDynamicSlot(\n                slotName,\n                slotFunction,\n                conditionalBranchIndex++\n              ),\n              defaultFallback\n            )\n          : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++)\n      } else {\n        context.onError(\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, vElse.loc)\n        )\n      }\n    } else if ((vFor = findDir(slotElement, 'for'))) {\n      hasDynamicSlots = true\n      const parseResult =\n        vFor.parseResult ||\n        parseForExpression(vFor.exp as SimpleExpressionNode, context)\n      if (parseResult) {\n        // Render the dynamic slots as an array and add it to the createSlot()\n        // args. The runtime knows how to handle it appropriately.\n        dynamicSlots.push(\n          createCallExpression(context.helper(RENDER_LIST), [\n            parseResult.source,\n            createFunctionExpression(\n              createForLoopParams(parseResult),\n              buildDynamicSlot(slotName, slotFunction),\n              true /* force newline */\n            )\n          ])\n        )\n      } else {\n        context.onError(\n          createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, vFor.loc)\n        )\n      }\n    } else {\n      // check duplicate static names\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(\n            createCompilerError(\n              ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES,\n              dirLoc\n            )\n          )\n          continue\n        }\n        seenSlotNames.add(staticSlotName)\n        if (staticSlotName === 'default') {\n          hasNamedDefaultSlot = true\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction))\n    }\n  }\n\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (\n      props: ExpressionNode | undefined,\n      children: TemplateChildNode[]\n    ) => {\n      const fn = buildSlotFn(props, children, loc)\n      if (__COMPAT__ && context.compatConfig) {\n        fn.isNonScopedSlot = true\n      }\n      return createObjectProperty(`default`, fn)\n    }\n\n    if (!hasTemplateSlots) {\n      // implicit default slot (on component)\n      slotsProperties.push(buildDefaultSlotProperty(undefined, children))\n    } else if (\n      implicitDefaultChildren.length &&\n      // #3766\n      // with whitespace: 'preserve', whitespaces between slots will end up in\n      // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n      implicitDefaultChildren.some(node => isNonWhitespaceContent(node))\n    ) {\n      // implicit default slot (mixed with named slots)\n      if (hasNamedDefaultSlot) {\n        context.onError(\n          createCompilerError(\n            ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\n            implicitDefaultChildren[0].loc\n          )\n        )\n      } else {\n        slotsProperties.push(\n          buildDefaultSlotProperty(undefined, implicitDefaultChildren)\n        )\n      }\n    }\n  }\n\n  const slotFlag = hasDynamicSlots\n    ? SlotFlags.DYNAMIC\n    : hasForwardedSlots(node.children)\n    ? SlotFlags.FORWARDED\n    : SlotFlags.STABLE\n\n  let slots = createObjectExpression(\n    slotsProperties.concat(\n      createObjectProperty(\n        `_`,\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\n        // 1 = compiled and static = can skip normalization AND diff as optimized\n        createSimpleExpression(\n          slotFlag + (__DEV__ ? ` /* ${slotFlagsText[slotFlag]} */` : ``),\n          false\n        )\n      )\n    ),\n    loc\n  ) as SlotsExpression\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\n      slots,\n      createArrayExpression(dynamicSlots)\n    ]) as SlotsExpression\n  }\n\n  return {\n    slots,\n    hasDynamicSlots\n  }\n}\n\nfunction buildDynamicSlot(\n  name: ExpressionNode,\n  fn: FunctionExpression,\n  index?: number\n): ObjectExpression {\n  const props = [\n    createObjectProperty(`name`, name),\n    createObjectProperty(`fn`, fn)\n  ]\n  if (index != null) {\n    props.push(\n      createObjectProperty(`key`, createSimpleExpression(String(index), true))\n    )\n  }\n  return createObjectExpression(props)\n}\n\nfunction hasForwardedSlots(children: TemplateChildNode[]): boolean {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i]\n    switch (child.type) {\n      case NodeTypes.ELEMENT:\n        if (\n          child.tagType === ElementTypes.SLOT ||\n          hasForwardedSlots(child.children)\n        ) {\n          return true\n        }\n        break\n      case NodeTypes.IF:\n        if (hasForwardedSlots(child.branches)) return true\n        break\n      case NodeTypes.IF_BRANCH:\n      case NodeTypes.FOR:\n        if (hasForwardedSlots(child.children)) return true\n        break\n      default:\n        break\n    }\n  }\n  return false\n}\n\nfunction isNonWhitespaceContent(node: TemplateChildNode): boolean {\n  if (node.type !== NodeTypes.TEXT && node.type !== NodeTypes.TEXT_CALL)\n    return true\n  return node.type === NodeTypes.TEXT\n    ? !!node.content.trim()\n    : isNonWhitespaceContent(node.content)\n}\n", "import { NodeTransform, TransformContext } from '../transform'\nimport {\n  NodeTypes,\n  ElementTypes,\n  CallExpression,\n  ObjectExpression,\n  ElementNode,\n  DirectiveNode,\n  ExpressionNode,\n  ArrayExpression,\n  createCallExpression,\n  createArrayExpression,\n  createObjectProperty,\n  createSimpleExpression,\n  createObjectExpression,\n  Property,\n  ComponentNode,\n  VNodeCall,\n  TemplateTextChildNode,\n  DirectiveArguments,\n  createVNodeCall,\n  ConstantTypes\n} from '../ast'\nimport {\n  PatchFlags,\n  PatchFlagNames,\n  isSymbol,\n  isOn,\n  isObject,\n  isReservedProp,\n  capitalize,\n  camelize,\n  isBuiltInDirective\n} from '@vue/shared'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport {\n  RESOLVE_DIRECTIVE,\n  RESOLVE_COMPONENT,\n  RESOLVE_DYNAMIC_COMPONENT,\n  MERGE_PROPS,\n  NORMALIZE_CLASS,\n  NORMALIZE_STYLE,\n  NORMALIZE_PROPS,\n  TO_HANDLERS,\n  TELEPORT,\n  KEEP_ALIVE,\n  SUSPENSE,\n  UNREF,\n  GUARD_REACTIVE_PROPS\n} from '../runtimeHelpers'\nimport {\n  getInnerRange,\n  toValidAssetId,\n  findProp,\n  isCoreComponent,\n  isStaticArgOf,\n  findDir,\n  isStaticExp\n} from '../utils'\nimport { buildSlots } from './vSlot'\nimport { getConstantType } from './hoistStatic'\nimport { BindingTypes } from '../options'\nimport {\n  checkCompatEnabled,\n  CompilerDeprecationTypes,\n  isCompatEnabled\n} from '../compat/compatConfig'\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\n// import, which should be used instead of a resolveDirective call.\nconst directiveImportMap = new WeakMap<DirectiveNode, symbol>()\n\n// generate a JavaScript AST for this element's codegen\nexport const transformElement: NodeTransform = (node, context) => {\n  // perform the work on exit, after all child expressions have been\n  // processed and merged.\n  return function postTransformElement() {\n    node = context.currentNode!\n\n    if (\n      !(\n        node.type === NodeTypes.ELEMENT &&\n        (node.tagType === ElementTypes.ELEMENT ||\n          node.tagType === ElementTypes.COMPONENT)\n      )\n    ) {\n      return\n    }\n\n    const { tag, props } = node\n    const isComponent = node.tagType === ElementTypes.COMPONENT\n\n    // The goal of the transform is to create a codegenNode implementing the\n    // VNodeCall interface.\n    let vnodeTag = isComponent\n      ? resolveComponentType(node as ComponentNode, context)\n      : `\"${tag}\"`\n\n    const isDynamicComponent =\n      isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT\n\n    let vnodeProps: VNodeCall['props']\n    let vnodeChildren: VNodeCall['children']\n    let vnodePatchFlag: VNodeCall['patchFlag']\n    let patchFlag: number = 0\n    let vnodeDynamicProps: VNodeCall['dynamicProps']\n    let dynamicPropNames: string[] | undefined\n    let vnodeDirectives: VNodeCall['directives']\n\n    let shouldUseBlock =\n      // dynamic component may resolve to plain elements\n      isDynamicComponent ||\n      vnodeTag === TELEPORT ||\n      vnodeTag === SUSPENSE ||\n      (!isComponent &&\n        // <svg> and <foreignObject> must be forced into blocks so that block\n        // updates inside get proper isSVG flag at runtime. (#639, #643)\n        // This is technically web-specific, but splitting the logic out of core\n        // leads to too much unnecessary complexity.\n        (tag === 'svg' || tag === 'foreignObject'))\n\n    // props\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(\n        node,\n        context,\n        undefined,\n        isComponent,\n        isDynamicComponent\n      )\n      vnodeProps = propsBuildResult.props\n      patchFlag = propsBuildResult.patchFlag\n      dynamicPropNames = propsBuildResult.dynamicPropNames\n      const directives = propsBuildResult.directives\n      vnodeDirectives =\n        directives && directives.length\n          ? (createArrayExpression(\n              directives.map(dir => buildDirectiveArgs(dir, context))\n            ) as DirectiveArguments)\n          : undefined\n\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true\n      }\n    }\n\n    // children\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        // Although a built-in component, we compile KeepAlive with raw children\n        // instead of slot functions so that it can be used inside Transition\n        // or other Transition-wrapping HOCs.\n        // To ensure correct updates with block optimizations, we need to:\n        // 1. Force keep-alive into a block. This avoids its children being\n        //    collected by a parent block.\n        shouldUseBlock = true\n        // 2. Force keep-alive to always be updated, since it uses raw children.\n        patchFlag |= PatchFlags.DYNAMIC_SLOTS\n        if (__DEV__ && node.children.length > 1) {\n          context.onError(\n            createCompilerError(ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN, {\n              start: node.children[0].loc.start,\n              end: node.children[node.children.length - 1].loc.end,\n              source: ''\n            })\n          )\n        }\n      }\n\n      const shouldBuildAsSlots =\n        isComponent &&\n        // Teleport is not a real component and has dedicated runtime handling\n        vnodeTag !== TELEPORT &&\n        // explained above.\n        vnodeTag !== KEEP_ALIVE\n\n      if (shouldBuildAsSlots) {\n        const { slots, hasDynamicSlots } = buildSlots(node, context)\n        vnodeChildren = slots\n        if (hasDynamicSlots) {\n          patchFlag |= PatchFlags.DYNAMIC_SLOTS\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0]\n        const type = child.type\n        // check for dynamic text children\n        const hasDynamicTextChild =\n          type === NodeTypes.INTERPOLATION ||\n          type === NodeTypes.COMPOUND_EXPRESSION\n        if (\n          hasDynamicTextChild &&\n          getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\n        ) {\n          patchFlag |= PatchFlags.TEXT\n        }\n        // pass directly if the only child is a text node\n        // (plain / interpolation / expression)\n        if (hasDynamicTextChild || type === NodeTypes.TEXT) {\n          vnodeChildren = child as TemplateTextChildNode\n        } else {\n          vnodeChildren = node.children\n        }\n      } else {\n        vnodeChildren = node.children\n      }\n    }\n\n    // patchFlag & dynamicPropNames\n    if (patchFlag !== 0) {\n      if (__DEV__) {\n        if (patchFlag < 0) {\n          // special flags (negative and mutually exclusive)\n          vnodePatchFlag =\n            patchFlag + ` /* ${PatchFlagNames[patchFlag as PatchFlags]} */`\n        } else {\n          // bitwise flags\n          const flagNames = Object.keys(PatchFlagNames)\n            .map(Number)\n            .filter(n => n > 0 && patchFlag & n)\n            .map(n => PatchFlagNames[n as PatchFlags])\n            .join(`, `)\n          vnodePatchFlag = patchFlag + ` /* ${flagNames} */`\n        }\n      } else {\n        vnodePatchFlag = String(patchFlag)\n      }\n      if (dynamicPropNames && dynamicPropNames.length) {\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames)\n      }\n    }\n\n    node.codegenNode = createVNodeCall(\n      context,\n      vnodeTag,\n      vnodeProps,\n      vnodeChildren,\n      vnodePatchFlag,\n      vnodeDynamicProps,\n      vnodeDirectives,\n      !!shouldUseBlock,\n      false /* disableTracking */,\n      isComponent,\n      node.loc\n    )\n  }\n}\n\nexport function resolveComponentType(\n  node: ComponentNode,\n  context: TransformContext,\n  ssr = false\n) {\n  let { tag } = node\n\n  // 1. dynamic component\n  const isExplicitDynamic = isComponentTag(tag)\n  const isProp = findProp(node, 'is')\n  if (isProp) {\n    if (\n      isExplicitDynamic ||\n      (__COMPAT__ &&\n        isCompatEnabled(\n          CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\n          context\n        ))\n    ) {\n      const exp =\n        isProp.type === NodeTypes.ATTRIBUTE\n          ? isProp.value && createSimpleExpression(isProp.value.content, true)\n          : isProp.exp\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n          exp\n        ])\n      }\n    } else if (\n      isProp.type === NodeTypes.ATTRIBUTE &&\n      isProp.value!.content.startsWith('vue:')\n    ) {\n      // <button is=\"vue:xxx\">\n      // if not <component>, only is value that starts with \"vue:\" will be\n      // treated as component by the parse phase and reach here, unless it's\n      // compat mode where all is values are considered components\n      tag = isProp.value!.content.slice(4)\n    }\n  }\n\n  // 1.5 v-is (TODO: remove in 3.4)\n  const isDir = !isExplicitDynamic && findDir(node, 'is')\n  if (isDir && isDir.exp) {\n    if (__DEV__) {\n      context.onWarn(\n        createCompilerError(ErrorCodes.DEPRECATION_V_IS, isDir.loc)\n      )\n    }\n    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n      isDir.exp\n    ])\n  }\n\n  // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag)\n  if (builtIn) {\n    // built-ins are simply fallthroughs / have special handling during ssr\n    // so we don't need to import their runtime equivalents\n    if (!ssr) context.helper(builtIn)\n    return builtIn\n  }\n\n  // 3. user component (from setup bindings)\n  // this is skipped in browser build since browser builds do not perform\n  // binding analysis.\n  if (!__BROWSER__) {\n    const fromSetup = resolveSetupReference(tag, context)\n    if (fromSetup) {\n      return fromSetup\n    }\n    const dotIndex = tag.indexOf('.')\n    if (dotIndex > 0) {\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context)\n      if (ns) {\n        return ns + tag.slice(dotIndex)\n      }\n    }\n  }\n\n  // 4. Self referencing component (inferred from filename)\n  if (\n    !__BROWSER__ &&\n    context.selfName &&\n    capitalize(camelize(tag)) === context.selfName\n  ) {\n    context.helper(RESOLVE_COMPONENT)\n    // codegen.ts has special check for __self postfix when generating\n    // component imports, which will pass additional `maybeSelfReference` flag\n    // to `resolveComponent`.\n    context.components.add(tag + `__self`)\n    return toValidAssetId(tag, `component`)\n  }\n\n  // 5. user component (resolve)\n  context.helper(RESOLVE_COMPONENT)\n  context.components.add(tag)\n  return toValidAssetId(tag, `component`)\n}\n\nfunction resolveSetupReference(name: string, context: TransformContext) {\n  const bindings = context.bindingMetadata\n  if (!bindings || bindings.__isScriptSetup === false) {\n    return\n  }\n\n  const camelName = camelize(name)\n  const PascalName = capitalize(camelName)\n  const checkType = (type: BindingTypes) => {\n    if (bindings[name] === type) {\n      return name\n    }\n    if (bindings[camelName] === type) {\n      return camelName\n    }\n    if (bindings[PascalName] === type) {\n      return PascalName\n    }\n  }\n\n  const fromConst =\n    checkType(BindingTypes.SETUP_CONST) ||\n    checkType(BindingTypes.SETUP_REACTIVE_CONST) ||\n    checkType(BindingTypes.LITERAL_CONST)\n  if (fromConst) {\n    return context.inline\n      ? // in inline mode, const setup bindings (e.g. imports) can be used as-is\n        fromConst\n      : `$setup[${JSON.stringify(fromConst)}]`\n  }\n\n  const fromMaybeRef =\n    checkType(BindingTypes.SETUP_LET) ||\n    checkType(BindingTypes.SETUP_REF) ||\n    checkType(BindingTypes.SETUP_MAYBE_REF)\n  if (fromMaybeRef) {\n    return context.inline\n      ? // setup scope bindings that may be refs need to be unrefed\n        `${context.helperString(UNREF)}(${fromMaybeRef})`\n      : `$setup[${JSON.stringify(fromMaybeRef)}]`\n  }\n}\n\nexport type PropsExpression = ObjectExpression | CallExpression | ExpressionNode\n\nexport function buildProps(\n  node: ElementNode,\n  context: TransformContext,\n  props: ElementNode['props'] = node.props,\n  isComponent: boolean,\n  isDynamicComponent: boolean,\n  ssr = false\n): {\n  props: PropsExpression | undefined\n  directives: DirectiveNode[]\n  patchFlag: number\n  dynamicPropNames: string[]\n  shouldUseBlock: boolean\n} {\n  const { tag, loc: elementLoc, children } = node\n  let properties: ObjectExpression['properties'] = []\n  const mergeArgs: PropsExpression[] = []\n  const runtimeDirectives: DirectiveNode[] = []\n  const hasChildren = children.length > 0\n  let shouldUseBlock = false\n\n  // patchFlag analysis\n  let patchFlag = 0\n  let hasRef = false\n  let hasClassBinding = false\n  let hasStyleBinding = false\n  let hasHydrationEventBinding = false\n  let hasDynamicKeys = false\n  let hasVnodeHook = false\n  const dynamicPropNames: string[] = []\n\n  const pushMergeArg = (arg?: PropsExpression) => {\n    if (properties.length) {\n      mergeArgs.push(\n        createObjectExpression(dedupeProperties(properties), elementLoc)\n      )\n      properties = []\n    }\n    if (arg) mergeArgs.push(arg)\n  }\n\n  const analyzePatchFlag = ({ key, value }: Property) => {\n    if (isStaticExp(key)) {\n      const name = key.content\n      const isEventHandler = isOn(name)\n      if (\n        isEventHandler &&\n        (!isComponent || isDynamicComponent) &&\n        // omit the flag for click handlers because hydration gives click\n        // dedicated fast path.\n        name.toLowerCase() !== 'onclick' &&\n        // omit v-model handlers\n        name !== 'onUpdate:modelValue' &&\n        // omit onVnodeXXX hooks\n        !isReservedProp(name)\n      ) {\n        hasHydrationEventBinding = true\n      }\n\n      if (isEventHandler && isReservedProp(name)) {\n        hasVnodeHook = true\n      }\n\n      if (\n        value.type === NodeTypes.JS_CACHE_EXPRESSION ||\n        ((value.type === NodeTypes.SIMPLE_EXPRESSION ||\n          value.type === NodeTypes.COMPOUND_EXPRESSION) &&\n          getConstantType(value, context) > 0)\n      ) {\n        // skip if the prop is a cached handler or has constant value\n        return\n      }\n\n      if (name === 'ref') {\n        hasRef = true\n      } else if (name === 'class') {\n        hasClassBinding = true\n      } else if (name === 'style') {\n        hasStyleBinding = true\n      } else if (name !== 'key' && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name)\n      }\n\n      // treat the dynamic class and style binding of the component as dynamic props\n      if (\n        isComponent &&\n        (name === 'class' || name === 'style') &&\n        !dynamicPropNames.includes(name)\n      ) {\n        dynamicPropNames.push(name)\n      }\n    } else {\n      hasDynamicKeys = true\n    }\n  }\n\n  for (let i = 0; i < props.length; i++) {\n    // static attribute\n    const prop = props[i]\n    if (prop.type === NodeTypes.ATTRIBUTE) {\n      const { loc, name, value } = prop\n      let isStatic = true\n      if (name === 'ref') {\n        hasRef = true\n        if (context.scopes.vFor > 0) {\n          properties.push(\n            createObjectProperty(\n              createSimpleExpression('ref_for', true),\n              createSimpleExpression('true')\n            )\n          )\n        }\n        // in inline mode there is no setupState object, so we can't use string\n        // keys to set the ref. Instead, we need to transform it to pass the\n        // actual ref instead.\n        if (!__BROWSER__ && value && context.inline) {\n          const binding = context.bindingMetadata[value.content]\n          if (\n            binding === BindingTypes.SETUP_LET ||\n            binding === BindingTypes.SETUP_REF ||\n            binding === BindingTypes.SETUP_MAYBE_REF\n          ) {\n            isStatic = false\n            properties.push(\n              createObjectProperty(\n                createSimpleExpression('ref_key', true),\n                createSimpleExpression(value.content, true, value.loc)\n              )\n            )\n          }\n        }\n      }\n      // skip is on <component>, or is=\"vue:xxx\"\n      if (\n        name === 'is' &&\n        (isComponentTag(tag) ||\n          (value && value.content.startsWith('vue:')) ||\n          (__COMPAT__ &&\n            isCompatEnabled(\n              CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\n              context\n            )))\n      ) {\n        continue\n      }\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(\n            name,\n            true,\n            getInnerRange(loc, 0, name.length)\n          ),\n          createSimpleExpression(\n            value ? value.content : '',\n            isStatic,\n            value ? value.loc : loc\n          )\n        )\n      )\n    } else {\n      // directives\n      const { name, arg, exp, loc } = prop\n      const isVBind = name === 'bind'\n      const isVOn = name === 'on'\n\n      // skip v-slot - it is handled by its dedicated transform.\n      if (name === 'slot') {\n        if (!isComponent) {\n          context.onError(\n            createCompilerError(ErrorCodes.X_V_SLOT_MISPLACED, loc)\n          )\n        }\n        continue\n      }\n      // skip v-once/v-memo - they are handled by dedicated transforms.\n      if (name === 'once' || name === 'memo') {\n        continue\n      }\n      // skip v-is and :is on <component>\n      if (\n        name === 'is' ||\n        (isVBind &&\n          isStaticArgOf(arg, 'is') &&\n          (isComponentTag(tag) ||\n            (__COMPAT__ &&\n              isCompatEnabled(\n                CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\n                context\n              ))))\n      ) {\n        continue\n      }\n      // skip v-on in SSR compilation\n      if (isVOn && ssr) {\n        continue\n      }\n\n      if (\n        // #938: elements with dynamic keys should be forced into blocks\n        (isVBind && isStaticArgOf(arg, 'key')) ||\n        // inline before-update hooks need to force block so that it is invoked\n        // before children\n        (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))\n      ) {\n        shouldUseBlock = true\n      }\n\n      if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\n        properties.push(\n          createObjectProperty(\n            createSimpleExpression('ref_for', true),\n            createSimpleExpression('true')\n          )\n        )\n      }\n\n      // special case for v-bind and v-on with no argument\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true\n        if (exp) {\n          if (isVBind) {\n            // have to merge early for compat build check\n            pushMergeArg()\n            if (__COMPAT__) {\n              // 2.x v-bind object order compat\n              if (__DEV__) {\n                const hasOverridableKeys = mergeArgs.some(arg => {\n                  if (arg.type === NodeTypes.JS_OBJECT_EXPRESSION) {\n                    return arg.properties.some(({ key }) => {\n                      if (\n                        key.type !== NodeTypes.SIMPLE_EXPRESSION ||\n                        !key.isStatic\n                      ) {\n                        return true\n                      }\n                      return (\n                        key.content !== 'class' &&\n                        key.content !== 'style' &&\n                        !isOn(key.content)\n                      )\n                    })\n                  } else {\n                    // dynamic expression\n                    return true\n                  }\n                })\n                if (hasOverridableKeys) {\n                  checkCompatEnabled(\n                    CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\n                    context,\n                    loc\n                  )\n                }\n              }\n\n              if (\n                isCompatEnabled(\n                  CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\n                  context\n                )\n              ) {\n                mergeArgs.unshift(exp)\n                continue\n              }\n            }\n\n            mergeArgs.push(exp)\n          } else {\n            // v-on=\"obj\" -> toHandlers(obj)\n            pushMergeArg({\n              type: NodeTypes.JS_CALL_EXPRESSION,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent ? [exp] : [exp, `true`]\n            })\n          }\n        } else {\n          context.onError(\n            createCompilerError(\n              isVBind\n                ? ErrorCodes.X_V_BIND_NO_EXPRESSION\n                : ErrorCodes.X_V_ON_NO_EXPRESSION,\n              loc\n            )\n          )\n        }\n        continue\n      }\n\n      const directiveTransform = context.directiveTransforms[name]\n      if (directiveTransform) {\n        // has built-in directive transform.\n        const { props, needRuntime } = directiveTransform(prop, node, context)\n        !ssr && props.forEach(analyzePatchFlag)\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(props, elementLoc))\n        } else {\n          properties.push(...props)\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop)\n          if (isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime)\n          }\n        }\n      } else if (!isBuiltInDirective(name)) {\n        // no built-in transform, this is a user custom directive.\n        runtimeDirectives.push(prop)\n        // custom dirs may use beforeUpdate so they need to force blocks\n        // to ensure before-update gets called before children update\n        if (hasChildren) {\n          shouldUseBlock = true\n        }\n      }\n    }\n  }\n\n  let propsExpression: PropsExpression | undefined = undefined\n\n  // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\n  if (mergeArgs.length) {\n    // close up any not-yet-merged props\n    pushMergeArg()\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(\n        context.helper(MERGE_PROPS),\n        mergeArgs,\n        elementLoc\n      )\n    } else {\n      // single v-bind with nothing else - no need for a mergeProps call\n      propsExpression = mergeArgs[0]\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(\n      dedupeProperties(properties),\n      elementLoc\n    )\n  }\n\n  // patchFlag analysis\n  if (hasDynamicKeys) {\n    patchFlag |= PatchFlags.FULL_PROPS\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= PatchFlags.CLASS\n    }\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= PatchFlags.STYLE\n    }\n    if (dynamicPropNames.length) {\n      patchFlag |= PatchFlags.PROPS\n    }\n    if (hasHydrationEventBinding) {\n      patchFlag |= PatchFlags.HYDRATE_EVENTS\n    }\n  }\n  if (\n    !shouldUseBlock &&\n    (patchFlag === 0 || patchFlag === PatchFlags.HYDRATE_EVENTS) &&\n    (hasRef || hasVnodeHook || runtimeDirectives.length > 0)\n  ) {\n    patchFlag |= PatchFlags.NEED_PATCH\n  }\n\n  // pre-normalize props, SSR is skipped for now\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case NodeTypes.JS_OBJECT_EXPRESSION:\n        // means that there is no v-bind,\n        // but still need to deal with dynamic key binding\n        let classKeyIndex = -1\n        let styleKeyIndex = -1\n        let hasDynamicKey = false\n\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key\n          if (isStaticExp(key)) {\n            if (key.content === 'class') {\n              classKeyIndex = i\n            } else if (key.content === 'style') {\n              styleKeyIndex = i\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true\n          }\n        }\n\n        const classProp = propsExpression.properties[classKeyIndex]\n        const styleProp = propsExpression.properties[styleKeyIndex]\n\n        // no dynamic key\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(\n              context.helper(NORMALIZE_CLASS),\n              [classProp.value]\n            )\n          }\n          if (\n            styleProp &&\n            // the static style is compiled into an object,\n            // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n            (hasStyleBinding ||\n              (styleProp.value.type === NodeTypes.SIMPLE_EXPRESSION &&\n                styleProp.value.content.trim()[0] === `[`) ||\n              // v-bind:style and style both exist,\n              // v-bind:style with static literal object\n              styleProp.value.type === NodeTypes.JS_ARRAY_EXPRESSION)\n          ) {\n            styleProp.value = createCallExpression(\n              context.helper(NORMALIZE_STYLE),\n              [styleProp.value]\n            )\n          }\n        } else {\n          // dynamic key binding, wrap with `normalizeProps`\n          propsExpression = createCallExpression(\n            context.helper(NORMALIZE_PROPS),\n            [propsExpression]\n          )\n        }\n        break\n      case NodeTypes.JS_CALL_EXPRESSION:\n        // mergeProps call, do nothing\n        break\n      default:\n        // single v-bind\n        propsExpression = createCallExpression(\n          context.helper(NORMALIZE_PROPS),\n          [\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n              propsExpression\n            ])\n          ]\n        )\n        break\n    }\n  }\n\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  }\n}\n\n// Dedupe props in an object literal.\n// Literal duplicated attributes would have been warned during the parse phase,\n// however, it's possible to encounter duplicated `onXXX` handlers with different\n// modifiers. We also need to merge static and dynamic class / style attributes.\n// - onXXX handlers / style: merge into array\n// - class: merge into single expression with concatenation\nfunction dedupeProperties(properties: Property[]): Property[] {\n  const knownProps: Map<string, Property> = new Map()\n  const deduped: Property[] = []\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i]\n    // dynamic keys are always allowed\n    if (prop.key.type === NodeTypes.COMPOUND_EXPRESSION || !prop.key.isStatic) {\n      deduped.push(prop)\n      continue\n    }\n    const name = prop.key.content\n    const existing = knownProps.get(name)\n    if (existing) {\n      if (name === 'style' || name === 'class' || isOn(name)) {\n        mergeAsArray(existing, prop)\n      }\n      // unexpected duplicate, should have emitted error during parse\n    } else {\n      knownProps.set(name, prop)\n      deduped.push(prop)\n    }\n  }\n  return deduped\n}\n\nfunction mergeAsArray(existing: Property, incoming: Property) {\n  if (existing.value.type === NodeTypes.JS_ARRAY_EXPRESSION) {\n    existing.value.elements.push(incoming.value)\n  } else {\n    existing.value = createArrayExpression(\n      [existing.value, incoming.value],\n      existing.loc\n    )\n  }\n}\n\nexport function buildDirectiveArgs(\n  dir: DirectiveNode,\n  context: TransformContext\n): ArrayExpression {\n  const dirArgs: ArrayExpression['elements'] = []\n  const runtime = directiveImportMap.get(dir)\n  if (runtime) {\n    // built-in directive with runtime\n    dirArgs.push(context.helperString(runtime))\n  } else {\n    // user directive.\n    // see if we have directives exposed via <script setup>\n    const fromSetup =\n      !__BROWSER__ && resolveSetupReference('v-' + dir.name, context)\n    if (fromSetup) {\n      dirArgs.push(fromSetup)\n    } else {\n      // inject statement for resolving directive\n      context.helper(RESOLVE_DIRECTIVE)\n      context.directives.add(dir.name)\n      dirArgs.push(toValidAssetId(dir.name, `directive`))\n    }\n  }\n  const { loc } = dir\n  if (dir.exp) dirArgs.push(dir.exp)\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`)\n    }\n    dirArgs.push(dir.arg)\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`)\n      }\n      dirArgs.push(`void 0`)\n    }\n    const trueExpression = createSimpleExpression(`true`, false, loc)\n    dirArgs.push(\n      createObjectExpression(\n        dir.modifiers.map(modifier =>\n          createObjectProperty(modifier, trueExpression)\n        ),\n        loc\n      )\n    )\n  }\n  return createArrayExpression(dirArgs, dir.loc)\n}\n\nfunction stringifyDynamicPropNames(props: string[]): string {\n  let propsNamesString = `[`\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i])\n    if (i < l - 1) propsNamesString += ', '\n  }\n  return propsNamesString + `]`\n}\n\nfunction isComponentTag(tag: string) {\n  return tag === 'component' || tag === 'Component'\n}\n", "import { NodeTransform, TransformContext } from '../transform'\nimport {\n  NodeTypes,\n  CallExpression,\n  createCallExpression,\n  ExpressionNode,\n  SlotOutletNode,\n  createFunctionExpression\n} from '../ast'\nimport { isSlotOutlet, isStaticArgOf, isStaticExp } from '../utils'\nimport { buildProps, PropsExpression } from './transformElement'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport { RENDER_SLOT } from '../runtimeHelpers'\nimport { camelize } from '@vue/shared'\n\nexport const transformSlotOutlet: NodeTransform = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const { children, loc } = node\n    const { slotName, slotProps } = processSlotOutlet(node, context)\n\n    const slotArgs: CallExpression['arguments'] = [\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n      slotName,\n      '{}',\n      'undefined',\n      'true'\n    ]\n    let expectedLen = 2\n\n    if (slotProps) {\n      slotArgs[2] = slotProps\n      expectedLen = 3\n    }\n\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc)\n      expectedLen = 4\n    }\n\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5\n    }\n    slotArgs.splice(expectedLen) // remove unused arguments\n\n    node.codegenNode = createCallExpression(\n      context.helper(RENDER_SLOT),\n      slotArgs,\n      loc\n    )\n  }\n}\n\ninterface SlotOutletProcessResult {\n  slotName: string | ExpressionNode\n  slotProps: PropsExpression | undefined\n}\n\nexport function processSlotOutlet(\n  node: SlotOutletNode,\n  context: TransformContext\n): SlotOutletProcessResult {\n  let slotName: string | ExpressionNode = `\"default\"`\n  let slotProps: PropsExpression | undefined = undefined\n\n  const nonNameProps = []\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i]\n    if (p.type === NodeTypes.ATTRIBUTE) {\n      if (p.value) {\n        if (p.name === 'name') {\n          slotName = JSON.stringify(p.value.content)\n        } else {\n          p.name = camelize(p.name)\n          nonNameProps.push(p)\n        }\n      }\n    } else {\n      if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\n        if (p.exp) slotName = p.exp\n      } else {\n        if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = camelize(p.arg.content)\n        }\n        nonNameProps.push(p)\n      }\n    }\n  }\n\n  if (nonNameProps.length > 0) {\n    const { props, directives } = buildProps(\n      node,\n      context,\n      nonNameProps,\n      false,\n      false\n    )\n    slotProps = props\n\n    if (directives.length) {\n      context.onError(\n        createCompilerError(\n          ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\n          directives[0].loc\n        )\n      )\n    }\n  }\n\n  return {\n    slotName,\n    slotProps\n  }\n}\n", "import { DirectiveTransform, DirectiveTransformResult } from '../transform'\nimport {\n  createCompoundExpression,\n  createObjectProperty,\n  createSimpleExpression,\n  DirectiveNode,\n  ElementTypes,\n  ExpressionNode,\n  NodeTypes,\n  SimpleExpressionNode\n} from '../ast'\nimport { camelize, toHandlerKey } from '@vue/shared'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport { processExpression } from './transformExpression'\nimport { validateBrowserExpression } from '../validateExpression'\nimport { hasScopeRef, isMemberExpression } from '../utils'\nimport { TO_HANDLER_KEY } from '../runtimeHelpers'\n\nconst fnExpRE =\n  /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/\n\nexport interface VOnDirectiveNode extends DirectiveNode {\n  // v-on without arg is handled directly in ./transformElements.ts due to it affecting\n  // codegen for the entire props object. This transform here is only for v-on\n  // *with* args.\n  arg: ExpressionNode\n  // exp is guaranteed to be a simple expression here because v-on w/ arg is\n  // skipped by transformExpression as a special case.\n  exp: SimpleExpressionNode | undefined\n}\n\nexport const transformOn: DirectiveTransform = (\n  dir,\n  node,\n  context,\n  augmentor\n) => {\n  const { loc, modifiers, arg } = dir as VOnDirectiveNode\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(ErrorCodes.X_V_ON_NO_EXPRESSION, loc))\n  }\n  let eventName: ExpressionNode\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\n    if (arg.isStatic) {\n      let rawName = arg.content\n      if (__DEV__ && rawName.startsWith('vnode')) {\n        context.onWarn(\n          createCompilerError(ErrorCodes.DEPRECATION_VNODE_HOOKS, arg.loc)\n        )\n      }\n      if (rawName.startsWith('vue:')) {\n        rawName = `vnode-${rawName.slice(4)}`\n      }\n      const eventString =\n        node.tagType !== ElementTypes.ELEMENT ||\n        rawName.startsWith('vnode') ||\n        !/[A-Z]/.test(rawName)\n          ? // for non-element and vnode lifecycle event listeners, auto convert\n            // it to camelCase. See issue #2249\n            toHandlerKey(camelize(rawName))\n          : // preserve case for plain element listeners that have uppercase\n            // letters, as these may be custom elements' custom events\n            `on:${rawName}`\n      eventName = createSimpleExpression(eventString, true, arg.loc)\n    } else {\n      // #2388\n      eventName = createCompoundExpression([\n        `${context.helperString(TO_HANDLER_KEY)}(`,\n        arg,\n        `)`\n      ])\n    }\n  } else {\n    // already a compound expression.\n    eventName = arg\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`)\n    eventName.children.push(`)`)\n  }\n\n  // handler processing\n  let exp: ExpressionNode | undefined = dir.exp as\n    | SimpleExpressionNode\n    | undefined\n  if (exp && !exp.content.trim()) {\n    exp = undefined\n  }\n  let shouldCache: boolean = context.cacheHandlers && !exp && !context.inVOnce\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp.content, context)\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content))\n    const hasMultipleStatements = exp.content.includes(`;`)\n\n    // process the expression since it's been skipped\n    if (!__BROWSER__ && context.prefixIdentifiers) {\n      isInlineStatement && context.addIdentifiers(`$event`)\n      exp = dir.exp = processExpression(\n        exp,\n        context,\n        false,\n        hasMultipleStatements\n      )\n      isInlineStatement && context.removeIdentifiers(`$event`)\n      // with scope analysis, the function is hoistable if it has no reference\n      // to scope variables.\n      shouldCache =\n        context.cacheHandlers &&\n        // unnecessary to cache inside v-once\n        !context.inVOnce &&\n        // runtime constants don't need to be cached\n        // (this is analyzed by compileScript in SFC <script setup>)\n        !(exp.type === NodeTypes.SIMPLE_EXPRESSION && exp.constType > 0) &&\n        // #1541 bail if this is a member exp handler passed to a component -\n        // we need to use the original function to preserve arity,\n        // e.g. <transition> relies on checking cb.length to determine\n        // transition end handling. Inline function is ok since its arity\n        // is preserved even when cached.\n        !(isMemberExp && node.tagType === ElementTypes.COMPONENT) &&\n        // bail if the function references closure variables (v-for, v-slot)\n        // it must be passed fresh to avoid stale values.\n        !hasScopeRef(exp, context.identifiers)\n      // If the expression is optimizable and is a member expression pointing\n      // to a function, turn it into invocation (and wrap in an arrow function\n      // below) so that it always accesses the latest value when called - thus\n      // avoiding the need to be patched.\n      if (shouldCache && isMemberExp) {\n        if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\n          exp.content = `${exp.content} && ${exp.content}(...args)`\n        } else {\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`]\n        }\n      }\n    }\n\n    if (__DEV__ && __BROWSER__) {\n      validateBrowserExpression(\n        exp as SimpleExpressionNode,\n        context,\n        false,\n        hasMultipleStatements\n      )\n    }\n\n    if (isInlineStatement || (shouldCache && isMemberExp)) {\n      // wrap inline statement in a function expression\n      exp = createCompoundExpression([\n        `${\n          isInlineStatement\n            ? !__BROWSER__ && context.isTS\n              ? `($event: any)`\n              : `$event`\n            : `${\n                !__BROWSER__ && context.isTS ? `\\n//@ts-ignore\\n` : ``\n              }(...args)`\n        } => ${hasMultipleStatements ? `{` : `(`}`,\n        exp,\n        hasMultipleStatements ? `}` : `)`\n      ])\n    }\n  }\n\n  let ret: DirectiveTransformResult = {\n    props: [\n      createObjectProperty(\n        eventName,\n        exp || createSimpleExpression(`() => {}`, false, loc)\n      )\n    ]\n  }\n\n  // apply extended compiler augmentor\n  if (augmentor) {\n    ret = augmentor(ret)\n  }\n\n  if (shouldCache) {\n    // cache handlers so that it's always the same handler being passed down.\n    // this avoids unnecessary re-renders when users use inline handlers on\n    // components.\n    ret.props[0].value = context.cache(ret.props[0].value)\n  }\n\n  // mark the key as handler for props normalization check\n  ret.props.forEach(p => (p.key.isHandlerKey = true))\n  return ret\n}\n", "import { DirectiveTransform } from '../transform'\nimport {\n  createObjectProperty,\n  createSimpleExpression,\n  ExpressionNode,\n  NodeTypes\n} from '../ast'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport { camelize } from '@vue/shared'\nimport { CAMELIZE } from '../runtimeHelpers'\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\n// codegen for the entire props object. This transform here is only for v-bind\n// *with* args.\nexport const transformBind: DirectiveTransform = (dir, _node, context) => {\n  const { exp, modifiers, loc } = dir\n  const arg = dir.arg!\n\n  if (arg.type !== NodeTypes.SIMPLE_EXPRESSION) {\n    arg.children.unshift(`(`)\n    arg.children.push(`) || \"\"`)\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`\n  }\n\n  // .sync is replaced by v-model:arg\n  if (modifiers.includes('camel')) {\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\n      if (arg.isStatic) {\n        arg.content = camelize(arg.content)\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`)\n      arg.children.push(`)`)\n    }\n  }\n\n  if (!context.inSSR) {\n    if (modifiers.includes('prop')) {\n      injectPrefix(arg, '.')\n    }\n    if (modifiers.includes('attr')) {\n      injectPrefix(arg, '^')\n    }\n  }\n\n  if (\n    !exp ||\n    (exp.type === NodeTypes.SIMPLE_EXPRESSION && !exp.content.trim())\n  ) {\n    context.onError(createCompilerError(ErrorCodes.X_V_BIND_NO_EXPRESSION, loc))\n    return {\n      props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\n    }\n  }\n\n  return {\n    props: [createObjectProperty(arg, exp)]\n  }\n}\n\nconst injectPrefix = (arg: ExpressionNode, prefix: string) => {\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`)\n    arg.children.push(`)`)\n  }\n}\n", "import { NodeTransform } from '../transform'\nimport {\n  NodeTypes,\n  CompoundExpressionNode,\n  createCallExpression,\n  CallExpression,\n  ElementTypes,\n  ConstantTypes,\n  createCompoundExpression\n} from '../ast'\nimport { isText } from '../utils'\nimport { CREATE_TEXT } from '../runtimeHelpers'\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\nimport { getConstantType } from './hoistStatic'\n\n// Merge adjacent text nodes and expressions into a single expression\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\nexport const transformText: NodeTransform = (node, context) => {\n  if (\n    node.type === NodeTypes.ROOT ||\n    node.type === NodeTypes.ELEMENT ||\n    node.type === NodeTypes.FOR ||\n    node.type === NodeTypes.IF_BRANCH\n  ) {\n    // perform the transform on node exit so that all expressions have already\n    // been processed.\n    return () => {\n      const children = node.children\n      let currentContainer: CompoundExpressionNode | undefined = undefined\n      let hasText = false\n\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i]\n        if (isText(child)) {\n          hasText = true\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j]\n            if (isText(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression(\n                  [child],\n                  child.loc\n                )\n              }\n              // merge adjacent text node into current\n              currentContainer.children.push(` + `, next)\n              children.splice(j, 1)\n              j--\n            } else {\n              currentContainer = undefined\n              break\n            }\n          }\n        }\n      }\n\n      if (\n        !hasText ||\n        // if this is a plain element with a single text child, leave it\n        // as-is since the runtime has dedicated fast path for this by directly\n        // setting textContent of the element.\n        // for component root it's always normalized anyway.\n        (children.length === 1 &&\n          (node.type === NodeTypes.ROOT ||\n            (node.type === NodeTypes.ELEMENT &&\n              node.tagType === ElementTypes.ELEMENT &&\n              // #3756\n              // custom directives can potentially add DOM elements arbitrarily,\n              // we need to avoid setting textContent of the element at runtime\n              // to avoid accidentally overwriting the DOM elements added\n              // by the user through custom directives.\n              !node.props.find(\n                p =>\n                  p.type === NodeTypes.DIRECTIVE &&\n                  !context.directiveTransforms[p.name]\n              ) &&\n              // in compat mode, <template> tags with no special directives\n              // will be rendered as a fragment so its children must be\n              // converted into vnodes.\n              !(__COMPAT__ && node.tag === 'template'))))\n      ) {\n        return\n      }\n\n      // pre-convert text nodes into createTextVNode(text) calls to avoid\n      // runtime normalization.\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i]\n        if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) {\n          const callArgs: CallExpression['arguments'] = []\n          // createTextVNode defaults to single whitespace, so if it is a\n          // single space the code could be an empty call to save bytes.\n          if (child.type !== NodeTypes.TEXT || child.content !== ' ') {\n            callArgs.push(child)\n          }\n          // mark dynamic text with flag so it gets patched inside a block\n          if (\n            !context.ssr &&\n            getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\n          ) {\n            callArgs.push(\n              PatchFlags.TEXT +\n                (__DEV__ ? ` /* ${PatchFlagNames[PatchFlags.TEXT]} */` : ``)\n            )\n          }\n          children[i] = {\n            type: NodeTypes.TEXT_CALL,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(\n              context.helper(CREATE_TEXT),\n              callArgs\n            )\n          }\n        }\n      }\n    }\n  }\n}\n", "import { NodeTransform } from '../transform'\nimport { findDir } from '../utils'\nimport { ElementNode, ForNode, IfNode, NodeTypes } from '../ast'\nimport { SET_BLOCK_TRACKING } from '../runtimeHelpers'\n\nconst seen = new WeakSet()\n\nexport const transformOnce: NodeTransform = (node, context) => {\n  if (node.type === NodeTypes.ELEMENT && findDir(node, 'once', true)) {\n    if (seen.has(node) || context.inVOnce || context.inSSR) {\n      return\n    }\n    seen.add(node)\n    context.inVOnce = true\n    context.helper(SET_BLOCK_TRACKING)\n    return () => {\n      context.inVOnce = false\n      const cur = context.currentNode as ElementNode | IfNode | ForNode\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */)\n      }\n    }\n  }\n}\n", "import { DirectiveTransform } from '../transform'\nimport {\n  createSimpleExpression,\n  createObjectProperty,\n  createCompoundExpression,\n  NodeTypes,\n  Property,\n  ElementTypes,\n  ExpressionNode,\n  ConstantTypes\n} from '../ast'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport {\n  isMemberExpression,\n  isSimpleIdentifier,\n  hasScopeRef,\n  isStaticExp\n} from '../utils'\nimport { IS_REF } from '../runtimeHelpers'\nimport { BindingTypes } from '../options'\nimport { camelize } from '@vue/shared'\n\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\n  const { exp, arg } = dir\n  if (!exp) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_MODEL_NO_EXPRESSION, dir.loc)\n    )\n    return createTransformProps()\n  }\n\n  const rawExp = exp.loc.source\n  const expString =\n    exp.type === NodeTypes.SIMPLE_EXPRESSION ? exp.content : rawExp\n\n  // im SFC <script setup> inline mode, the exp may have been transformed into\n  // _unref(exp)\n  const bindingType = context.bindingMetadata[rawExp]\n\n  // check props\n  if (\n    bindingType === BindingTypes.PROPS ||\n    bindingType === BindingTypes.PROPS_ALIASED\n  ) {\n    context.onError(createCompilerError(ErrorCodes.X_V_MODEL_ON_PROPS, exp.loc))\n    return createTransformProps()\n  }\n\n  const maybeRef =\n    !__BROWSER__ &&\n    context.inline &&\n    (bindingType === BindingTypes.SETUP_LET ||\n      bindingType === BindingTypes.SETUP_REF ||\n      bindingType === BindingTypes.SETUP_MAYBE_REF)\n\n  if (\n    !expString.trim() ||\n    (!isMemberExpression(expString, context) && !maybeRef)\n  ) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION, exp.loc)\n    )\n    return createTransformProps()\n  }\n\n  if (\n    !__BROWSER__ &&\n    context.prefixIdentifiers &&\n    isSimpleIdentifier(expString) &&\n    context.identifiers[expString]\n  ) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE, exp.loc)\n    )\n    return createTransformProps()\n  }\n\n  const propName = arg ? arg : createSimpleExpression('modelValue', true)\n  const eventName = arg\n    ? isStaticExp(arg)\n      ? `onUpdate:${camelize(arg.content)}`\n      : createCompoundExpression(['\"onUpdate:\" + ', arg])\n    : `onUpdate:modelValue`\n\n  let assignmentExp: ExpressionNode\n  const eventArg = context.isTS ? `($event: any)` : `$event`\n  if (maybeRef) {\n    if (bindingType === BindingTypes.SETUP_REF) {\n      // v-model used on known ref.\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => ((`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event)`\n      ])\n    } else {\n      // v-model used on a potentially ref binding in <script setup> inline mode.\n      // the assignment needs to check whether the binding is actually a ref.\n      const altAssignment =\n        bindingType === BindingTypes.SETUP_LET ? `${rawExp} = $event` : `null`\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event : ${altAssignment})`\n      ])\n    }\n  } else {\n    assignmentExp = createCompoundExpression([\n      `${eventArg} => ((`,\n      exp,\n      `) = $event)`\n    ])\n  }\n\n  const props = [\n    // modelValue: foo\n    createObjectProperty(propName, dir.exp!),\n    // \"onUpdate:modelValue\": $event => (foo = $event)\n    createObjectProperty(eventName, assignmentExp)\n  ]\n\n  // cache v-model handler if applicable (when it doesn't refer any scope vars)\n  if (\n    !__BROWSER__ &&\n    context.prefixIdentifiers &&\n    !context.inVOnce &&\n    context.cacheHandlers &&\n    !hasScopeRef(exp, context.identifiers)\n  ) {\n    props[1].value = context.cache(props[1].value)\n  }\n\n  // modelModifiers: { foo: true, \"bar-baz\": true }\n  if (dir.modifiers.length && node.tagType === ElementTypes.COMPONENT) {\n    const modifiers = dir.modifiers\n      .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\n      .join(`, `)\n    const modifiersKey = arg\n      ? isStaticExp(arg)\n        ? `${arg.content}Modifiers`\n        : createCompoundExpression([arg, ' + \"Modifiers\"'])\n      : `modelModifiers`\n    props.push(\n      createObjectProperty(\n        modifiersKey,\n        createSimpleExpression(\n          `{ ${modifiers} }`,\n          false,\n          dir.loc,\n          ConstantTypes.CAN_HOIST\n        )\n      )\n    )\n  }\n\n  return createTransformProps(props)\n}\n\nfunction createTransformProps(props: Property[] = []) {\n  return { props }\n}\n", "import { NodeTransform } from '../transform'\nimport { findDir } from '../utils'\nimport {\n  convertToBlock,\n  createCallExpression,\n  createFunctionExpression,\n  ElementTypes,\n  MemoExpression,\n  NodeTypes,\n  PlainElementNode\n} from '../ast'\nimport { WITH_MEMO } from '../runtimeHelpers'\n\nconst seen = new WeakSet()\n\nexport const transformMemo: NodeTransform = (node, context) => {\n  if (node.type === NodeTypes.ELEMENT) {\n    const dir = findDir(node, 'memo')\n    if (!dir || seen.has(node)) {\n      return\n    }\n    seen.add(node)\n    return () => {\n      const codegenNode =\n        node.codegenNode ||\n        (context.currentNode as PlainElementNode).codegenNode\n      if (codegenNode && codegenNode.type === NodeTypes.VNODE_CALL) {\n        // non-component sub tree should be turned into a block\n        if (node.tagType !== ElementTypes.COMPONENT) {\n          convertToBlock(codegenNode, context)\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n          dir.exp!,\n          createFunctionExpression(undefined, codegenNode),\n          `_cache`,\n          String(context.cached++)\n        ]) as MemoExpression\n      }\n    }\n  }\n}\n", "import { CompilerOptions } from './options'\nimport { baseParse } from './parse'\nimport { transform, NodeTransform, DirectiveTransform } from './transform'\nimport { generate, CodegenResult } from './codegen'\nimport { RootNode } from './ast'\nimport { isString, extend } from '@vue/shared'\nimport { transformIf } from './transforms/vIf'\nimport { transformFor } from './transforms/vFor'\nimport { transformExpression } from './transforms/transformExpression'\nimport { transformSlotOutlet } from './transforms/transformSlotOutlet'\nimport { transformElement } from './transforms/transformElement'\nimport { transformOn } from './transforms/vOn'\nimport { transformBind } from './transforms/vBind'\nimport { trackSlotScopes, trackVForSlotScopes } from './transforms/vSlot'\nimport { transformText } from './transforms/transformText'\nimport { transformOnce } from './transforms/vOnce'\nimport { transformModel } from './transforms/vModel'\nimport { transformFilter } from './compat/transformFilter'\nimport { defaultOnError, createCompilerError, ErrorCodes } from './errors'\nimport { transformMemo } from './transforms/vMemo'\n\nexport type TransformPreset = [\n  NodeTransform[],\n  Record<string, DirectiveTransform>\n]\n\nexport function getBaseTransformPreset(\n  prefixIdentifiers?: boolean\n): TransformPreset {\n  return [\n    [\n      transformOnce,\n      transformIf,\n      transformMemo,\n      transformFor,\n      ...(__COMPAT__ ? [transformFilter] : []),\n      ...(!__BROWSER__ && prefixIdentifiers\n        ? [\n            // order is important\n            trackVForSlotScopes,\n            transformExpression\n          ]\n        : __BROWSER__ && __DEV__\n        ? [transformExpression]\n        : []),\n      transformSlotOutlet,\n      transformElement,\n      trackSlotScopes,\n      transformText\n    ],\n    {\n      on: transformOn,\n      bind: transformBind,\n      model: transformModel\n    }\n  ]\n}\n\n// we name it `baseCompile` so that higher order compilers like\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\nexport function baseCompile(\n  template: string | RootNode,\n  options: CompilerOptions = {}\n): CodegenResult {\n  const onError = options.onError || defaultOnError\n  const isModuleMode = options.mode === 'module'\n  /* istanbul ignore if */\n  if (__BROWSER__) {\n    if (options.prefixIdentifiers === true) {\n      onError(createCompilerError(ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED))\n    } else if (isModuleMode) {\n      onError(createCompilerError(ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED))\n    }\n  }\n\n  const prefixIdentifiers =\n    !__BROWSER__ && (options.prefixIdentifiers === true || isModuleMode)\n  if (!prefixIdentifiers && options.cacheHandlers) {\n    onError(createCompilerError(ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED))\n  }\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED))\n  }\n\n  const ast = isString(template) ? baseParse(template, options) : template\n  const [nodeTransforms, directiveTransforms] =\n    getBaseTransformPreset(prefixIdentifiers)\n\n  if (!__BROWSER__ && options.isTS) {\n    const { expressionPlugins } = options\n    if (!expressionPlugins || !expressionPlugins.includes('typescript')) {\n      options.expressionPlugins = [...(expressionPlugins || []), 'typescript']\n    }\n  }\n\n  transform(\n    ast,\n    extend({}, options, {\n      prefixIdentifiers,\n      nodeTransforms: [\n        ...nodeTransforms,\n        ...(options.nodeTransforms || []) // user transforms\n      ],\n      directiveTransforms: extend(\n        {},\n        directiveTransforms,\n        options.directiveTransforms || {} // user transforms\n      )\n    })\n  )\n\n  return generate(\n    ast,\n    extend({}, options, {\n      prefixIdentifiers\n    })\n  )\n}\n", "import { DirectiveTransform } from '../transform'\n\nexport const noopDirectiveTransform: DirectiveTransform = () => ({ props: [] })\n", "import { registerRuntimeHelpers } from '@vue/compiler-core'\n\nexport const V_MODEL_RADIO = Symbol(__DEV__ ? `vModelRadio` : ``)\nexport const V_MODEL_CHECKBOX = Symbol(__DEV__ ? `vModelCheckbox` : ``)\nexport const V_MODEL_TEXT = Symbol(__DEV__ ? `vModelText` : ``)\nexport const V_MODEL_SELECT = Symbol(__DEV__ ? `vModelSelect` : ``)\nexport const V_MODEL_DYNAMIC = Symbol(__DEV__ ? `vModelDynamic` : ``)\n\nexport const V_ON_WITH_MODIFIERS = Symbol(__DEV__ ? `vOnModifiersGuard` : ``)\nexport const V_ON_WITH_KEYS = Symbol(__DEV__ ? `vOnKeysGuard` : ``)\n\nexport const V_SHOW = Symbol(__DEV__ ? `vShow` : ``)\n\nexport const TRANSITION = Symbol(__DEV__ ? `Transition` : ``)\nexport const TRANSITION_GROUP = Symbol(__DEV__ ? `TransitionGroup` : ``)\n\nregisterRuntimeHelpers({\n  [V_MODEL_RADIO]: `vModelRadio`,\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\n  [V_MODEL_TEXT]: `vModelText`,\n  [V_MODEL_SELECT]: `vModelSelect`,\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\n  [V_ON_WITH_KEYS]: `withKeys`,\n  [V_SHOW]: `vShow`,\n  [TRANSITION]: `Transition`,\n  [TRANSITION_GROUP]: `TransitionGroup`\n})\n", "/* eslint-disable no-restricted-globals */\n\nlet decoder: HTMLDivElement\n\nexport function decodeHtmlBrowser(raw: string, asAttr = false): string {\n  if (!decoder) {\n    decoder = document.createElement('div')\n  }\n  if (asAttr) {\n    decoder.innerHTML = `<div foo=\"${raw.replace(/\"/g, '&quot;')}\">`\n    return decoder.children[0].getAttribute('foo')!\n  } else {\n    decoder.innerHTML = raw\n    return decoder.textContent!\n  }\n}\n", "import {\n  TextModes,\n  ParserOptions,\n  ElementNode,\n  NodeTypes,\n  isBuiltInType\n} from '@vue/compiler-core'\nimport { makeMap, isVoidTag, isHTMLTag, isSVGTag } from '@vue/shared'\nimport { TRANSITION, TRANSITION_GROUP } from './runtimeHelpers'\nimport { decodeHtml } from './decodeHtml'\nimport { decodeHtmlBrowser } from './decodeHtmlBrowser'\n\nconst isRawTextContainer = /*#__PURE__*/ makeMap(\n  'style,iframe,script,noscript',\n  true\n)\n\nexport const enum DOMNamespaces {\n  HTML = 0 /* Namespaces.HTML */,\n  SVG,\n  MATH_ML\n}\n\nexport const parserOptions: ParserOptions = {\n  isVoidTag,\n  isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\n  isPreTag: tag => tag === 'pre',\n  decodeEntities: __BROWSER__ ? decodeHtmlBrowser : decodeHtml,\n\n  isBuiltInComponent: (tag: string): symbol | undefined => {\n    if (isBuiltInType(tag, `Transition`)) {\n      return TRANSITION\n    } else if (isBuiltInType(tag, `TransitionGroup`)) {\n      return TRANSITION_GROUP\n    }\n  },\n\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\n  getNamespace(tag: string, parent: ElementNode | undefined): DOMNamespaces {\n    let ns = parent ? parent.ns : DOMNamespaces.HTML\n\n    if (parent && ns === DOMNamespaces.MATH_ML) {\n      if (parent.tag === 'annotation-xml') {\n        if (tag === 'svg') {\n          return DOMNamespaces.SVG\n        }\n        if (\n          parent.props.some(\n            a =>\n              a.type === NodeTypes.ATTRIBUTE &&\n              a.name === 'encoding' &&\n              a.value != null &&\n              (a.value.content === 'text/html' ||\n                a.value.content === 'application/xhtml+xml')\n          )\n        ) {\n          ns = DOMNamespaces.HTML\n        }\n      } else if (\n        /^m(?:[ions]|text)$/.test(parent.tag) &&\n        tag !== 'mglyph' &&\n        tag !== 'malignmark'\n      ) {\n        ns = DOMNamespaces.HTML\n      }\n    } else if (parent && ns === DOMNamespaces.SVG) {\n      if (\n        parent.tag === 'foreignObject' ||\n        parent.tag === 'desc' ||\n        parent.tag === 'title'\n      ) {\n        ns = DOMNamespaces.HTML\n      }\n    }\n\n    if (ns === DOMNamespaces.HTML) {\n      if (tag === 'svg') {\n        return DOMNamespaces.SVG\n      }\n      if (tag === 'math') {\n        return DOMNamespaces.MATH_ML\n      }\n    }\n    return ns\n  },\n\n  // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\n  getTextMode({ tag, ns }: ElementNode): TextModes {\n    if (ns === DOMNamespaces.HTML) {\n      if (tag === 'textarea' || tag === 'title') {\n        return TextModes.RCDATA\n      }\n      if (isRawTextContainer(tag)) {\n        return TextModes.RAWTEXT\n      }\n    }\n    return TextModes.DATA\n  }\n}\n", "import {\n  NodeTransform,\n  NodeTypes,\n  createSimpleExpression,\n  SimpleExpressionNode,\n  SourceLocation,\n  ConstantTypes\n} from '@vue/compiler-core'\nimport { parseStringStyle } from '@vue/shared'\n\n// Parse inline CSS strings for static style attributes into an object.\n// This is a NodeTransform since it works on the static `style` attribute and\n// converts it into a dynamic equivalent:\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\n// It is then processed by `transformElement` and included in the generated\n// props.\nexport const transformStyle: NodeTransform = node => {\n  if (node.type === NodeTypes.ELEMENT) {\n    node.props.forEach((p, i) => {\n      if (p.type === NodeTypes.ATTRIBUTE && p.name === 'style' && p.value) {\n        // replace p with an expression node\n        node.props[i] = {\n          type: NodeTypes.DIRECTIVE,\n          name: `bind`,\n          arg: createSimpleExpression(`style`, true, p.loc),\n          exp: parseInlineCSS(p.value.content, p.loc),\n          modifiers: [],\n          loc: p.loc\n        }\n      }\n    })\n  }\n}\n\nconst parseInlineCSS = (\n  cssText: string,\n  loc: SourceLocation\n): SimpleExpressionNode => {\n  const normalized = parseStringStyle(cssText)\n  return createSimpleExpression(\n    JSON.stringify(normalized),\n    false,\n    loc,\n    ConstantTypes.CAN_STRINGIFY\n  )\n}\n", "import {\n  SourceLocation,\n  CompilerError,\n  createCompilerError,\n  ErrorCodes\n} from '@vue/compiler-core'\n\nexport interface DOMCompilerError extends CompilerError {\n  code: DOMErrorCodes\n}\n\nexport function createDOMCompilerError(\n  code: DOMErrorCodes,\n  loc?: SourceLocation\n) {\n  return createCompilerError(\n    code,\n    loc,\n    __DEV__ || !__BROWSER__ ? DOMErrorMessages : undefined\n  ) as DOMCompilerError\n}\n\nexport const enum DOMErrorCodes {\n  X_V_HTML_NO_EXPRESSION = 53 /* ErrorCodes.__EXTEND_POINT__ */,\n  X_V_HTML_WITH_CHILDREN,\n  X_V_TEXT_NO_EXPRESSION,\n  X_V_TEXT_WITH_CHILDREN,\n  X_V_MODEL_ON_INVALID_ELEMENT,\n  X_V_MODEL_ARG_ON_ELEMENT,\n  X_V_MODEL_ON_FILE_INPUT_ELEMENT,\n  X_V_MODEL_UNNECESSARY_VALUE,\n  X_V_SHOW_NO_EXPRESSION,\n  X_TRANSITION_INVALID_CHILDREN,\n  X_IGNORED_SIDE_EFFECT_TAG,\n  __EXTEND_POINT__\n}\n\nif (__TEST__) {\n  // esbuild cannot infer const enum increments if first value is from another\n  // file, so we have to manually keep them in sync. this check ensures it\n  // errors out if there are collisions.\n  if (DOMErrorCodes.X_V_HTML_NO_EXPRESSION < ErrorCodes.__EXTEND_POINT__) {\n    throw new Error(\n      `DOMErrorCodes need to be updated to ${\n        ErrorCodes.__EXTEND_POINT__ + 1\n      } to match extension point from core ErrorCodes.`\n    )\n  }\n}\n\nexport const DOMErrorMessages: { [code: number]: string } = {\n  [DOMErrorCodes.X_V_HTML_NO_EXPRESSION]: `v-html is missing expression.`,\n  [DOMErrorCodes.X_V_HTML_WITH_CHILDREN]: `v-html will override element children.`,\n  [DOMErrorCodes.X_V_TEXT_NO_EXPRESSION]: `v-text is missing expression.`,\n  [DOMErrorCodes.X_V_TEXT_WITH_CHILDREN]: `v-text will override element children.`,\n  [DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\n  [DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT]: `v-model argument is not supported on plain elements.`,\n  [DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\n  [DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\n  [DOMErrorCodes.X_V_SHOW_NO_EXPRESSION]: `v-show is missing expression.`,\n  [DOMErrorCodes.X_TRANSITION_INVALID_CHILDREN]: `<Transition> expects exactly one child element or component.`,\n  [DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\n}\n", "import {\n  DirectiveTransform,\n  createObjectProperty,\n  createSimpleExpression\n} from '@vue/compiler-core'\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\n\nexport const transformVHtml: DirectiveTransform = (dir, node, context) => {\n  const { exp, loc } = dir\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_NO_EXPRESSION, loc)\n    )\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_WITH_CHILDREN, loc)\n    )\n    node.children.length = 0\n  }\n  return {\n    props: [\n      createObjectProperty(\n        createSimpleExpression(`innerHTML`, true, loc),\n        exp || createSimpleExpression('', true)\n      )\n    ]\n  }\n}\n", "import {\n  DirectiveTransform,\n  createObjectProperty,\n  createSimpleExpression,\n  TO_DISPLAY_STRING,\n  createCallExpression,\n  getConstantType\n} from '@vue/compiler-core'\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\n\nexport const transformVText: DirectiveTransform = (dir, node, context) => {\n  const { exp, loc } = dir\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_NO_EXPRESSION, loc)\n    )\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_WITH_CHILDREN, loc)\n    )\n    node.children.length = 0\n  }\n  return {\n    props: [\n      createObjectProperty(\n        createSimpleExpression(`textContent`, true),\n        exp\n          ? getConstantType(exp, context) > 0\n            ? exp\n            : createCallExpression(\n                context.helperString(TO_DISPLAY_STRING),\n                [exp],\n                loc\n              )\n          : createSimpleExpression('', true)\n      )\n    ]\n  }\n}\n", "import {\n  transformModel as baseTransform,\n  DirectiveTransform,\n  ElementTypes,\n  findProp,\n  NodeTypes,\n  hasDynamicKeyVBind\n} from '@vue/compiler-core'\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\nimport {\n  V_MODEL_CHECKBOX,\n  V_MODEL_RADIO,\n  V_MODEL_SELECT,\n  V_MODEL_TEXT,\n  V_MODEL_DYNAMIC\n} from '../runtimeHelpers'\n\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\n  const baseResult = baseTransform(dir, node, context)\n  // base transform has errors OR component v-model (only need props)\n  if (!baseResult.props.length || node.tagType === ElementTypes.COMPONENT) {\n    return baseResult\n  }\n\n  if (dir.arg) {\n    context.onError(\n      createDOMCompilerError(\n        DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT,\n        dir.arg.loc\n      )\n    )\n  }\n\n  function checkDuplicatedValue() {\n    const value = findProp(node, 'value')\n    if (value) {\n      context.onError(\n        createDOMCompilerError(\n          DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE,\n          value.loc\n        )\n      )\n    }\n  }\n\n  const { tag } = node\n  const isCustomElement = context.isCustomElement(tag)\n  if (\n    tag === 'input' ||\n    tag === 'textarea' ||\n    tag === 'select' ||\n    isCustomElement\n  ) {\n    let directiveToUse = V_MODEL_TEXT\n    let isInvalidType = false\n    if (tag === 'input' || isCustomElement) {\n      const type = findProp(node, `type`)\n      if (type) {\n        if (type.type === NodeTypes.DIRECTIVE) {\n          // :type=\"foo\"\n          directiveToUse = V_MODEL_DYNAMIC\n        } else if (type.value) {\n          switch (type.value.content) {\n            case 'radio':\n              directiveToUse = V_MODEL_RADIO\n              break\n            case 'checkbox':\n              directiveToUse = V_MODEL_CHECKBOX\n              break\n            case 'file':\n              isInvalidType = true\n              context.onError(\n                createDOMCompilerError(\n                  DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT,\n                  dir.loc\n                )\n              )\n              break\n            default:\n              // text type\n              __DEV__ && checkDuplicatedValue()\n              break\n          }\n        }\n      } else if (hasDynamicKeyVBind(node)) {\n        // element has bindings with dynamic keys, which can possibly contain\n        // \"type\".\n        directiveToUse = V_MODEL_DYNAMIC\n      } else {\n        // text type\n        __DEV__ && checkDuplicatedValue()\n      }\n    } else if (tag === 'select') {\n      directiveToUse = V_MODEL_SELECT\n    } else {\n      // textarea\n      __DEV__ && checkDuplicatedValue()\n    }\n    // inject runtime directive\n    // by returning the helper symbol via needRuntime\n    // the import will replaced a resolveDirective call.\n    if (!isInvalidType) {\n      baseResult.needRuntime = context.helper(directiveToUse)\n    }\n  } else {\n    context.onError(\n      createDOMCompilerError(\n        DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT,\n        dir.loc\n      )\n    )\n  }\n\n  // native vmodel doesn't need the `modelValue` props since they are also\n  // passed to the runtime as `binding.value`. removing it reduces code size.\n  baseResult.props = baseResult.props.filter(\n    p =>\n      !(\n        p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\n        p.key.content === 'modelValue'\n      )\n  )\n\n  return baseResult\n}\n", "import {\n  transformOn as baseTransform,\n  DirectiveTransform,\n  createObjectProperty,\n  createCallExpression,\n  createSimpleExpression,\n  NodeTypes,\n  createCompoundExpression,\n  ExpressionNode,\n  SimpleExpressionNode,\n  isStaticExp,\n  CompilerDeprecationTypes,\n  TransformContext,\n  SourceLocation,\n  checkCompatEnabled\n} from '@vue/compiler-core'\nimport { V_ON_WITH_MODIFIERS, V_ON_WITH_KEYS } from '../runtimeHelpers'\nimport { makeMap, capitalize } from '@vue/shared'\n\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`)\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\n  // event propagation management\n  `stop,prevent,self,` +\n    // system modifiers + exact\n    `ctrl,shift,alt,meta,exact,` +\n    // mouse\n    `middle`\n)\n// left & right could be mouse or key modifiers based on event type\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right')\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(\n  `onkeyup,onkeydown,onkeypress`,\n  true\n)\n\nconst resolveModifiers = (\n  key: ExpressionNode,\n  modifiers: string[],\n  context: TransformContext,\n  loc: SourceLocation\n) => {\n  const keyModifiers = []\n  const nonKeyModifiers = []\n  const eventOptionModifiers = []\n\n  for (let i = 0; i < modifiers.length; i++) {\n    const modifier = modifiers[i]\n\n    if (\n      __COMPAT__ &&\n      modifier === 'native' &&\n      checkCompatEnabled(\n        CompilerDeprecationTypes.COMPILER_V_ON_NATIVE,\n        context,\n        loc\n      )\n    ) {\n      eventOptionModifiers.push(modifier)\n    } else if (isEventOptionModifier(modifier)) {\n      // eventOptionModifiers: modifiers for addEventListener() options,\n      // e.g. .passive & .capture\n      eventOptionModifiers.push(modifier)\n    } else {\n      // runtimeModifiers: modifiers that needs runtime guards\n      if (maybeKeyModifier(modifier)) {\n        if (isStaticExp(key)) {\n          if (isKeyboardEvent((key as SimpleExpressionNode).content)) {\n            keyModifiers.push(modifier)\n          } else {\n            nonKeyModifiers.push(modifier)\n          }\n        } else {\n          keyModifiers.push(modifier)\n          nonKeyModifiers.push(modifier)\n        }\n      } else {\n        if (isNonKeyModifier(modifier)) {\n          nonKeyModifiers.push(modifier)\n        } else {\n          keyModifiers.push(modifier)\n        }\n      }\n    }\n  }\n\n  return {\n    keyModifiers,\n    nonKeyModifiers,\n    eventOptionModifiers\n  }\n}\n\nconst transformClick = (key: ExpressionNode, event: string) => {\n  const isStaticClick =\n    isStaticExp(key) && key.content.toLowerCase() === 'onclick'\n  return isStaticClick\n    ? createSimpleExpression(event, true)\n    : key.type !== NodeTypes.SIMPLE_EXPRESSION\n    ? createCompoundExpression([\n        `(`,\n        key,\n        `) === \"onClick\" ? \"${event}\" : (`,\n        key,\n        `)`\n      ])\n    : key\n}\n\nexport const transformOn: DirectiveTransform = (dir, node, context) => {\n  return baseTransform(dir, node, context, baseResult => {\n    const { modifiers } = dir\n    if (!modifiers.length) return baseResult\n\n    let { key, value: handlerExp } = baseResult.props[0]\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } =\n      resolveModifiers(key, modifiers, context, dir.loc)\n\n    // normalize click.right and click.middle since they don't actually fire\n    if (nonKeyModifiers.includes('right')) {\n      key = transformClick(key, `onContextmenu`)\n    }\n    if (nonKeyModifiers.includes('middle')) {\n      key = transformClick(key, `onMouseup`)\n    }\n\n    if (nonKeyModifiers.length) {\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\n        handlerExp,\n        JSON.stringify(nonKeyModifiers)\n      ])\n    }\n\n    if (\n      keyModifiers.length &&\n      // if event name is dynamic, always wrap with keys guard\n      (!isStaticExp(key) || isKeyboardEvent(key.content))\n    ) {\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\n        handlerExp,\n        JSON.stringify(keyModifiers)\n      ])\n    }\n\n    if (eventOptionModifiers.length) {\n      const modifierPostfix = eventOptionModifiers.map(capitalize).join('')\n      key = isStaticExp(key)\n        ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\n        : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`])\n    }\n\n    return {\n      props: [createObjectProperty(key, handlerExp)]\n    }\n  })\n}\n", "import { DirectiveTransform } from '@vue/compiler-core'\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\nimport { V_SHOW } from '../runtimeHelpers'\n\nexport const transformShow: DirectiveTransform = (dir, node, context) => {\n  const { exp, loc } = dir\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_SHOW_NO_EXPRESSION, loc)\n    )\n  }\n\n  return {\n    props: [],\n    needRuntime: context.helper(V_SHOW)\n  }\n}\n", "import {\n  NodeTransform,\n  NodeTypes,\n  ElementTypes,\n  ComponentNode,\n  IfBranchNode\n} from '@vue/compiler-core'\nimport { TRANSITION } from '../runtimeHelpers'\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\n\nexport const transformTransition: NodeTransform = (node, context) => {\n  if (\n    node.type === NodeTypes.ELEMENT &&\n    node.tagType === ElementTypes.COMPONENT\n  ) {\n    const component = context.isBuiltInComponent(node.tag)\n    if (component === TRANSITION) {\n      return () => {\n        if (!node.children.length) {\n          return\n        }\n\n        // warn multiple transition children\n        if (hasMultipleChildren(node)) {\n          context.onError(\n            createDOMCompilerError(\n              DOMErrorCodes.X_TRANSITION_INVALID_CHILDREN,\n              {\n                start: node.children[0].loc.start,\n                end: node.children[node.children.length - 1].loc.end,\n                source: ''\n              }\n            )\n          )\n        }\n\n        // check if it's s single child w/ v-show\n        // if yes, inject \"persisted: true\" to the transition props\n        const child = node.children[0]\n        if (child.type === NodeTypes.ELEMENT) {\n          for (const p of child.props) {\n            if (p.type === NodeTypes.DIRECTIVE && p.name === 'show') {\n              node.props.push({\n                type: NodeTypes.ATTRIBUTE,\n                name: 'persisted',\n                value: undefined,\n                loc: node.loc\n              })\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction hasMultipleChildren(node: ComponentNode | IfBranchNode): boolean {\n  // #1352 filter out potential comment nodes.\n  const children = (node.children = node.children.filter(\n    c =>\n      c.type !== NodeTypes.COMMENT &&\n      !(c.type === NodeTypes.TEXT && !c.content.trim())\n  ))\n  const child = children[0]\n  return (\n    children.length !== 1 ||\n    child.type === NodeTypes.FOR ||\n    (child.type === NodeTypes.IF && child.branches.some(hasMultipleChildren))\n  )\n}\n", "import { NodeTransform, NodeTypes, ElementTypes } from '@vue/compiler-core'\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\n\nexport const ignoreSideEffectTags: NodeTransform = (node, context) => {\n  if (\n    node.type === NodeTypes.ELEMENT &&\n    node.tagType === ElementTypes.ELEMENT &&\n    (node.tag === 'script' || node.tag === 'style')\n  ) {\n    __DEV__ &&\n      context.onError(\n        createDOMCompilerError(\n          DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG,\n          node.loc\n        )\n      )\n    context.removeNode()\n  }\n}\n", "import {\n  baseCompile,\n  baseParse,\n  CompilerOptions,\n  CodegenResult,\n  ParserOptions,\n  RootNode,\n  noopDirectiveTransform,\n  NodeTransform,\n  DirectiveTransform\n} from '@vue/compiler-core'\nimport { parserOptions } from './parserOptions'\nimport { transformStyle } from './transforms/transformStyle'\nimport { transformVHtml } from './transforms/vHtml'\nimport { transformVText } from './transforms/vText'\nimport { transformModel } from './transforms/vModel'\nimport { transformOn } from './transforms/vOn'\nimport { transformShow } from './transforms/vShow'\nimport { transformTransition } from './transforms/Transition'\nimport { stringifyStatic } from './transforms/stringifyStatic'\nimport { ignoreSideEffectTags } from './transforms/ignoreSideEffectTags'\nimport { extend } from '@vue/shared'\n\nexport { parserOptions }\n\nexport const DOMNodeTransforms: NodeTransform[] = [\n  transformStyle,\n  ...(__DEV__ ? [transformTransition] : [])\n]\n\nexport const DOMDirectiveTransforms: Record<string, DirectiveTransform> = {\n  cloak: noopDirectiveTransform,\n  html: transformVHtml,\n  text: transformVText,\n  model: transformModel, // override compiler-core\n  on: transformOn, // override compiler-core\n  show: transformShow\n}\n\nexport function compile(\n  template: string,\n  options: CompilerOptions = {}\n): CodegenResult {\n  return baseCompile(\n    template,\n    extend({}, parserOptions, options, {\n      nodeTransforms: [\n        // ignore <script> and <tag>\n        // this is not put inside DOMNodeTransforms because that list is used\n        // by compiler-ssr to generate vnode fallback branches\n        ignoreSideEffectTags,\n        ...DOMNodeTransforms,\n        ...(options.nodeTransforms || [])\n      ],\n      directiveTransforms: extend(\n        {},\n        DOMDirectiveTransforms,\n        options.directiveTransforms || {}\n      ),\n      transformHoist: __BROWSER__ ? null : stringifyStatic\n    })\n  )\n}\n\nexport function parse(template: string, options: ParserOptions = {}): RootNode {\n  return baseParse(template, extend({}, parserOptions, options))\n}\n\nexport * from './runtimeHelpers'\nexport { transformStyle } from './transforms/transformStyle'\nexport { createDOMCompilerError, DOMErrorCodes } from './errors'\nexport * from '@vue/compiler-core'\n"],
  "mappings": "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E,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,MAAK,IAAG,IAAG,MAAK,IAAG,GAAE,MAAK,KAAI,MAAK,KAAI,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,MAAK,GAAE,MAAK,IAAG,GAAE,MAAK,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,KAAI,MAAK,KAAI,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,MAAK,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,MAAK,IAAG,GAAE,GAAE,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,MAAK,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAA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",
  "names": ["defaultOptions", "sourceType", "sourceFilename", "undefined", "startColumn", "startLine", "allowAwaitOutsideFunction", "allowReturnOutsideFunction", "allowNewTargetOutsideFunction", "allowImportExportEverywhere", "allowSuperOutsideMethod", "allowUndeclaredExports", "plugins", "strictMode", "ranges", "tokens", "createParenthesizedExpressions", "errorRecovery", "attachComment", "annexB", "getOptions", "opts", "Error", "options", "key", "Object", "keys", "TokContext", "constructor", "token", "preserveSpace", "types", "brace", "j_oTag", "j_cTag", "j_expr", "template", "beforeExpr", "startsExpr", "isLoop", "isAssign", "prefix", "postfix", "ExportedTokenType", "label", "conf", "keyword", "rightAssociative", "binop", "updateContext", "keywords", "Map", "createKeyword", "name", "createToken", "set", "createBinop", "tokenTypeCounter", "tokenTypes", "tokenLabels", "tokenBinops", "tokenBeforeExprs", "tokenStartsExprs", "tokenPrefixes", "_options$binop", "_options$beforeExpr", "_options$startsExpr", "_options$prefix", "push", "createKeywordLike", "_options$binop2", "_options$beforeExpr2", "_options$startsExpr2", "_options$prefix2", "tt", "bracketL", "bracketHashL", "bracketBarL", "bracketR", "bracketBarR", "braceL", "braceBarL", "braceHashL", "braceR", "braceBarR", "parenL", "parenR", "comma", "semi", "colon", "doubleColon", "dot", "question", "questionDot", "arrow", "ellipsis", "backQuote", "dollarBraceL", "templateTail", "templateNonTail", "at", "hash", "interpreterDirective", "eq", "assign", "slashAssign", "xorAssign", "moduloAssign", "incDec", "bang", "tilde", "doubleCaret", "doubleAt", "pipeline", "nullishCoalescing", "logicalOR", "logicalAND", "bitwiseOR", "bitwiseXOR", "bitwiseAND", "equality", "lt", "gt", "relational", "bitShift", "bitShiftL", "bitShiftR", "plusMin", "modulo", "star", "slash", "exponent", "_in", "_instanceof", "_break", "_case", "_catch", "_continue", "_debugger", "_default", "_else", "_finally", "_function", "_if", "_return", "_switch", "_throw", "_try", "_var", "_const", "_with", "_new", "_this", "_super", "_class", "_extends", "_export", "_import", "_null", "_true", "_false", "_typeof", "_void", "_delete", "_do", "_for", "_while", "_as", "_assert", "_async", "_await", "_from", "_get", "_let", "_meta", "_of", "_sent", "_set", "_static", "_using", "_yield", "_asserts", "_checks", "_exports", "_global", "_implements", "_intrinsic", "_infer", "_is", "_mixins", "_proto", "_require", "_satisfies", "_keyof", "_readonly", "_unique", "_abstract", "_declare", "_enum", "_module", "_namespace", "_interface", "_type", "_opaque", "string", "num", "bigint", "decimal", "regexp", "privateName", "eof", "jsxName", "jsxText", "jsxTagStart", "jsxTagEnd", "placeholder", "tokenIsIdentifier", "tokenKeywordOrIdentifierIsKeyword", "tokenIsKeywordOrIdentifier", "tokenIsLiteralPropertyName", "tokenComesBeforeExpression", "tokenCanStartExpression", "tokenIsAssignment", "tokenIsFlowInterfaceOrTypeOrOpaque", "tokenIsLoop", "tokenIsKeyword", "tokenIsOperator", "tokenIsPostfix", "tokenIsPrefix", "tokenIsTSTypeOperator", "tokenIsTSDeclarationStart", "tokenLabelName", "tokenOperatorPrecedence", "tokenIsRightAssociative", "tokenIsTemplate", "getExportedToken", "context", "pop", "tc", "length", "Position", "line", "col", "index", "column", "SourceLocation", "start", "end", "filename", "identifierName", "createPositionWithColumnOffset", "position", "columnOffset", "ParseErrorCode", "SyntaxError", "SourceTypeModuleError", "reflect", "last", "get", "reduce", "object", "value", "item", "i", "instantiate", "properties", "descriptors", "map", "filter", "descriptor", "enumerable", "split", "instance", "defineProperty", "configurable", "ModuleErrors", "ImportMetaOutsideModule", "message", "code", "ImportOutsideModule", "NodeDescriptions", "ArrayPattern", "AssignmentExpression", "AssignmentPattern", "ArrowFunctionExpression", "ConditionalExpression", "CatchClause", "ForOfStatement", "ForInStatement", "ForStatement", "FormalParameters", "Identifier", "ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier", "ObjectPattern", "ParenthesizedExpression", "RestElement", "UpdateExpression", "true", "false", "VariableDeclarator", "YieldExpression", "toNodeDescription", "type", "String", "StandardErrors", "AccessorIsGenerator", "kind", "ArgumentsInClass", "AsyncFunctionInSingleStatementContext", "AwaitBindingIdentifier", "AwaitBindingIdentifierInStaticBlock", "AwaitExpressionFormalParameter", "AwaitInUsingBinding", "AwaitNotInAsyncContext", "AwaitNotInAsyncFunction", "BadGetterArity", "BadSetterArity", "BadSetterRestParameter", "ConstructorClassField", "ConstructorClassPrivateField", "ConstructorIsAccessor", "ConstructorIsAsync", "ConstructorIsGenerator", "DeclarationMissingInitializer", "DecoratorArgumentsOutsideParentheses", "DecoratorBeforeExport", "DecoratorsBeforeAfterExport", "DecoratorConstructor", "DecoratorExportClass", "DecoratorSemicolon", "DecoratorStaticBlock", "DeletePrivateField", "DestructureNamedImport", "DuplicateConstructor", "DuplicateDefaultExport", "DuplicateExport", "exportName", "DuplicateProto", "DuplicateRegExpFlags", "ElementAfterRest", "EscapedCharNotAnIdentifier", "ExportBindingIsString", "localName", "ExportDefaultFromAsIdentifier", "ForInOfLoopInitializer", "ForInUsing", "ForOfAsync", "ForOfLet", "GeneratorInSingleStatementContext", "IllegalBreakContinue", "IllegalLanguageModeDirective", "IllegalReturn", "ImportBindingIsString", "importName", "ImportCallArgumentTrailingComma", "ImportCallArity", "maxArgumentCount", "ImportCallNotNewExpression", "ImportCallSpreadArgument", "ImportJSONBindingNotDefault", "ImportReflectionHasAssertion", "ImportReflectionNotBinding", "IncompatibleRegExpUVFlags", "InvalidBigIntLiteral", "InvalidCodePoint", "InvalidCoverInitializedName", "InvalidDecimal", "InvalidDigit", "radix", "InvalidEscapeSequence", "InvalidEscapeSequenceTemplate", "InvalidEscapedReservedWord", "reservedWord", "InvalidIdentifier", "InvalidLhs", "ancestor", "InvalidLhsBinding", "InvalidNumber", "InvalidOrMissingExponent", "InvalidOrUnexpectedToken", "unexpected", "InvalidParenthesizedAssignment", "InvalidPrivateFieldResolution", "InvalidPropertyBindingPattern", "InvalidRecordProperty", "InvalidRestAssignmentPattern", "LabelRedeclaration", "labelName", "LetInLexicalBinding", "LineTerminatorBeforeArrow", "MalformedRegExpFlags", "MissingClassName", "MissingEqInAssignment", "MissingSemicolon", "MissingPlugin", "missingPlugin", "JSON", "stringify", "join", "MissingOneOfPlugins", "MissingUnicodeEscape", "MixingCoalesceWithLogical", "ModuleAttributeDifferentFromType", "ModuleAttributeInvalidValue", "ModuleAttributesWithDuplicateKeys", "ModuleExportNameHasLoneSurrogate", "surrogateCharCode", "toString", "ModuleExportUndefined", "MultipleDefaultsInSwitch", "NewlineAfterThrow", "NoCatchOrFinally", "NumberIdentifier", "NumericSeparatorInEscapeSequence", "ObsoleteAwaitStar", "OptionalChainingNoNew", "OptionalChainingNoTemplate", "OverrideOnConstructor", "ParamDupe", "PatternHasAccessor", "PatternHasMethod", "PrivateInExpectedIn", "PrivateNameRedeclaration", "RecordExpressionBarIncorrectEndSyntaxType", "RecordExpressionBarIncorrectStartSyntaxType", "RecordExpressionHashIncorrectStartSyntaxType", "RecordNoProto", "RestTrailingComma", "SloppyFunction", "SloppyFunctionAnnexB", "StaticPrototype", "SuperNotAllowed", "SuperPrivateField", "TrailingDecorator", "TupleExpressionBarIncorrectEndSyntaxType", "TupleExpressionBarIncorrectStartSyntaxType", "TupleExpressionHashIncorrectStartSyntaxType", "UnexpectedArgumentPlaceholder", "UnexpectedAwaitAfterPipelineBody", "UnexpectedDigitAfterHash", "UnexpectedImportExport", "UnexpectedKeyword", "UnexpectedLeadingDecorator", "UnexpectedLexicalDeclaration", "UnexpectedNewTarget", "UnexpectedNumericSeparator", "UnexpectedPrivateField", "UnexpectedReservedWord", "UnexpectedSuper", "UnexpectedToken", "expected", "UnexpectedTokenUnaryExponentiation", "UnexpectedUsingDeclaration", "UnsupportedBind", "UnsupportedDecoratorExport", "UnsupportedDefaultExport", "UnsupportedImport", "UnsupportedMetaProperty", "target", "onlyValidPropertyName", "UnsupportedParameterDecorator", "UnsupportedPropertyDecorator", "UnsupportedSuper", "UnterminatedComment", "UnterminatedRegExp", "UnterminatedString", "UnterminatedTemplate", "UsingDeclarationHasBindingPattern", "VarRedeclaration", "YieldBindingIdentifier", "YieldInParameter", "ZeroDigitNumericSeparator", "StrictModeErrors", "StrictDelete", "StrictEvalArguments", "referenceName", "StrictEvalArgumentsBinding", "bindingName", "StrictFunction", "StrictNumericEscape", "StrictOctalLiteral", "StrictWith", "UnparenthesizedPipeBodyDescriptions", "Set", "PipelineOperatorErrors", "PipeBodyIsTighter", "PipeTopicRequiresHackPipes", "PipeTopicUnbound", "PipeTopicUnconfiguredToken", "PipeTopicUnused", "PipeUnparenthesizedBody", "PipelineBodyNoArrow", "PipelineBodySequenceExpression", "PipelineHeadSequenceExpression", "PipelineTopicUnused", "PrimaryTopicNotAllowed", "PrimaryTopicRequiresSmartPipeline", "toParseErrorConstructor", "_ref", "toMessage", "_objectWithoutPropertiesLoose", "_excluded", "loc", "details", "clone", "overrides", "pos", "ParseErrorEnum", "argument", "syntaxPlugin", "Array", "isArray", "parseErrorTemplates", "ParseErrorConstructors", "reasonCode", "_ref2", "rest", "_excluded2", "Errors", "toUnenumerable", "toESTreeLocation", "node", "estree", "superClass", "ESTreeParserMixin", "parse", "file", "parseRegExpLiteral", "pattern", "flags", "regex", "RegExp", "e", "estreeParseLiteral", "parseBigIntLiteral", "bigInt", "BigInt", "_unused", "parseDecimalLiteral", "parseLiteral", "parseStringLiteral", "parseNumericLiteral", "parseNullLiteral", "parseBooleanLiteral", "directiveToStmt", "directive", "expression", "raw", "extra", "expressionValue", "stmt", "rawValue", "initFunction", "isAsync", "checkDeclaration", "isObjectProperty", "getObjectOrClassMethodParams", "method", "params", "isValidDirective", "_stmt$expression$extr", "parenthesized", "parseBlockBody", "allowDirectives", "topLevel", "afterBlockParse", "directiveStatements", "directives", "d", "body", "concat", "pushClassMethod", "classBody", "isGenerator", "isConstructor", "allowsDirectSuper", "parseMethod", "typeParameters", "parsePrivateName", "getPluginOption", "convertPrivateNameToPrivateIdentifier", "getPrivateNameSV", "id", "isPrivateName", "parseFunctionBody", "allowExpression", "isMethod", "allowDirectSuper", "inClassScope", "funcNode", "startNode", "computed", "finishNode", "parseClassProperty", "args", "propertyNode", "parseClassPrivateProperty", "parseObjectMethod", "prop", "isPattern", "isAccessor", "shorthand", "parseObjectProperty", "startLoc", "refExpressionErrors", "isValidLVal", "isUnparenthesizedInAssign", "binding", "isAssignable", "isBinding", "toAssignable", "isLHS", "classScope", "usePrivateName", "toAssignableObjectExpressionProp", "isLast", "raise", "finishCallExpression", "unfinished", "optional", "callee", "source", "arguments", "hasPlugin", "_node$arguments$", "attributes", "toReferencedArguments", "parseExport", "decorators", "exportStartLoc", "state", "lastTokStartLoc", "exported", "specifiers", "_declaration$decorato", "declaration", "resetStartLocation", "parseSubscript", "base", "noCalls", "optionalChainMember", "substring", "stop", "chain", "startNodeAtNode", "hasPropertyAsPrivateName", "isObjectMethod", "finishNodeAt", "endLoc", "resetEndLocation", "lastTokEndLoc", "nonASCIIidentifierStartChars", "nonASCIIidentifierChars", "nonASCIIidentifierStart", "nonASCIIidentifier", "astralIdentifierStartCodes", "astralIdentifierCodes", "isInAstralSet", "isIdentifierStart", "test", "fromCharCode", "isIdentifierChar", "reservedWords", "strict", "strictBind", "reservedWordsStrictSet", "reservedWordsStrictBindSet", "isReservedWord", "word", "inModule", "isStrictReservedWord", "has", "isStrictBindOnlyReservedWord", "isStrictBindReservedWord", "isKeyword", "isIteratorStart", "current", "next", "next2", "reservedWordLikeSet", "canBeReservedWord", "SCOPE_OTHER", "SCOPE_PROGRAM", "SCOPE_FUNCTION", "SCOPE_ARROW", "SCOPE_SIMPLE_CATCH", "SCOPE_SUPER", "SCOPE_DIRECT_SUPER", "SCOPE_CLASS", "SCOPE_STATIC_BLOCK", "SCOPE_TS_MODULE", "SCOPE_VAR", "BIND_KIND_VALUE", "BIND_KIND_TYPE", "BIND_SCOPE_VAR", "BIND_SCOPE_LEXICAL", "BIND_SCOPE_FUNCTION", "BIND_FLAGS_NONE", "BIND_FLAGS_CLASS", "BIND_FLAGS_TS_ENUM", "BIND_FLAGS_TS_CONST_ENUM", "BIND_FLAGS_TS_EXPORT_ONLY", "BIND_FLAGS_FLOW_DECLARE_FN", "BIND_FLAGS_TS_IMPORT", "BIND_FLAGS_NO_LET_IN_LEXICAL", "BIND_CLASS", "BIND_LEXICAL", "BIND_CATCH_PARAM", "BIND_VAR", "BIND_FUNCTION", "BIND_TS_INTERFACE", "BIND_TS_TYPE", "BIND_TS_ENUM", "BIND_TS_AMBIENT", "BIND_NONE", "BIND_OUTSIDE", "BIND_TS_CONST_ENUM", "BIND_TS_NAMESPACE", "BIND_TS_TYPE_IMPORT", "BIND_FLOW_DECLARE_FN", "CLASS_ELEMENT_FLAG_STATIC", "CLASS_ELEMENT_KIND_GETTER", "CLASS_ELEMENT_KIND_SETTER", "CLASS_ELEMENT_KIND_ACCESSOR", "CLASS_ELEMENT_STATIC_GETTER", "CLASS_ELEMENT_STATIC_SETTER", "CLASS_ELEMENT_INSTANCE_GETTER", "CLASS_ELEMENT_INSTANCE_SETTER", "CLASS_ELEMENT_OTHER", "Scope", "var", "lexical", "functions", "ScopeHandler", "parser", "scopeStack", "undefinedExports", "inTopLevel", "currentScope", "inFunction", "currentVarScopeFlags", "allowSuper", "currentThisScopeFlags", "inClass", "inClassAndNotInNonArrowFunction", "inStaticBlock", "inNonArrowFunction", "treatFunctionsAsVar", "treatFunctionsAsVarInScope", "createScope", "enter", "exit", "scope", "declareName", "bindingType", "checkRedeclarationInScope", "add", "maybeExportDefined", "delete", "isRedeclaredInScope", "values", "checkLocalExport", "topLevelScope", "FlowScope", "declareFunctions", "FlowScopeHandler", "BaseParser", "sawUnambiguousESM", "ambiguousScriptDifferentAst", "pluginConfig", "pluginName", "pluginOptions", "actualOptions", "plugin", "_this$plugins$get", "setTrailingComments", "comments", "trailingComments", "unshift", "setLeadingComments", "leadingComments", "setInnerComments", "innerComments", "adjustInnerComments", "elements", "commentWS", "lastElement", "CommentsParser", "addComment", "comment", "processComment", "commentStack", "commentStackLength", "lastCommentWS", "leadingNode", "nodeStart", "commentEnd", "containingNode", "finalizeComment", "splice", "trailingNode", "commentStart", "input", "charCodeAt", "finalizeRemainingComments", "resetPreviousNodeTrailingComments", "takeSurroundingComments", "lineBreak", "lineBreakG", "isNewLine", "skipWhiteSpace", "skipWhiteSpaceInLine", "skipWhiteSpaceToLineBreak", "isWhitespace", "State", "curLine", "lineStart", "errors", "potentialArrowAt", "noArrowAt", "noArrowParamsConversionAt", "maybeInArrowParameters", "inType", "noAnonFunctionType", "hasFlowComment", "isAmbientContext", "inAbstractClass", "inDisallowConditionalTypesContext", "topicContext", "maxNumOfResolvableTopics", "maxTopicIndex", "soloAwait", "inFSharpPipelineDirectBody", "labels", "lastTokStart", "ct", "canStartJSXElement", "containsEsc", "firstInvalidTemplateEscapePos", "strictErrors", "tokensLength", "init", "curPosition", "skipArrays", "val", "slice", "isDigit", "forbiddenNumericSeparatorSiblings", "decBinOct", "hex", "isAllowedNumericSeparatorSibling", "bin", "ch", "oct", "dec", "readStringContents", "initialPos", "initialLineStart", "initialCurLine", "out", "firstInvalidLoc", "chunkStart", "unterminated", "isStringEnd", "res", "readEscapedChar", "str", "containsInvalid", "inTemplate", "throwOnInvalid", "readHexChar", "readCodePoint", "fromCodePoint", "strictNumericEscape", "startPos", "match", "octalStr", "octal", "parseInt", "len", "forceLen", "n", "readInt", "invalidEscapeSequence", "allowNumSeparator", "bailOnError", "forbiddenSiblings", "isAllowedSibling", "invalid", "total", "Infinity", "prev", "numericSeparatorInEscapeSequence", "Number", "isNaN", "unexpectedNumericSeparator", "_isDigit", "invalidDigit", "indexOf", "invalidCodePoint", "buildPosition", "VALID_REGEX_FLAGS", "Token", "Tokenizer", "isLookahead", "errorHandlers_readInt", "errorBuilder", "errorHandlers_readCodePoint", "errorHandlers_readStringContents_string", "recordStrictModeErrors", "errorHandlers_readStringContents_template", "pushToken", "checkKeywordEscapes", "nextToken", "eat", "createLookaheadState", "curContext", "lookahead", "old", "curr", "nextTokenStart", "nextTokenStartSince", "lastIndex", "lookaheadCharCode", "codePointAtPos", "cp", "trail", "setStrict", "forEach", "toParseError", "clear", "skipSpace", "finishToken", "getTokenFromCode", "skipBlockComment", "skipLineComment", "startSkip", "spaceStart", "loop", "commentWhitespace", "prevType", "replaceToken", "readToken_numberSign", "readToken_interpreter", "nextPos", "expectPlugin", "readWord1", "finishOp", "readToken_dot", "readNumber", "readToken_slash", "readToken_mult_modulo", "width", "readToken_pipe_amp", "readToken_caret", "proposal", "topicToken", "lookaheadCh", "codePointAt", "readToken_atSign", "readToken_plus_min", "readToken_lt", "readToken_gt", "size", "readToken_eq_excl", "readToken_question", "readTemplateToken", "readRadixNumber", "readString", "readWord", "readRegexp", "escaped", "content", "mods", "char", "includes", "isBigInt", "replace", "startsWithDot", "isFloat", "isDecimal", "hasExponent", "isOctal", "hasLeadingZero", "integer", "underscorePos", "parseFloat", "quote", "readTemplateContinuation", "opening", "firstCode", "escStart", "identifierCheck", "esc", "keywordTypes", "raiseProperties", "error", "raiseOverwrite", "expectOnePlugin", "pluginNames", "some", "ClassScope", "privateNames", "loneAccessors", "undefinedPrivateNames", "ClassScopeHandler", "stack", "oldClassScope", "from", "declarePrivateName", "elementType", "redefined", "accessor", "oldStatic", "newStatic", "oldKind", "newKind", "kExpression", "kMaybeArrowParameterDeclaration", "kMaybeAsyncArrowParameterDeclaration", "kParameterDeclaration", "ExpressionScope", "canBeArrowParameterDeclaration", "isCertainlyParameterDeclaration", "ArrowHeadParsingScope", "declarationErrors", "recordDeclarationError", "ParsingErrorClass", "clearDeclarationError", "iterateErrors", "iterator", "ExpressionScopeHandler", "recordParameterInitializerError", "origin", "recordArrowParameterBindingError", "recordAsyncArrowParametersError", "validateAsPattern", "newParameterDeclarationScope", "newArrowHeadScope", "newAsyncArrowScope", "newExpressionScope", "PARAM", "PARAM_YIELD", "PARAM_AWAIT", "PARAM_RETURN", "PARAM_IN", "ProductionParameterHandler", "stacks", "currentFlags", "hasAwait", "hasYield", "hasReturn", "hasIn", "functionFlags", "UtilParser", "addExtra", "isContextual", "isUnparsedContextual", "nameStart", "nameEnd", "nextCh", "isLookaheadContextual", "eatContextual", "expectContextual", "canInsertSemicolon", "hasPrecedingLineBreak", "hasFollowingLineBreak", "isLineTerminator", "semicolon", "allowAsi", "expect", "tryParse", "fn", "oldState", "abortSignal", "failState", "thrown", "aborted", "checkExpressionErrors", "andThrow", "shorthandAssignLoc", "doubleProtoLoc", "privateKeyLoc", "optionalParametersLoc", "hasErrors", "isLiteralPropertyName", "property", "initializeScopes", "oldLabels", "oldExportedIdentifiers", "exportedIdentifiers", "oldInModule", "oldScope", "getScopeHandler", "oldProdParam", "prodParam", "oldExpressionScope", "expressionScope", "enterInitialScopes", "paramFlags", "checkDestructuringPrivate", "ExpressionErrors", "Node", "range", "NodePrototype", "prototype", "__clone", "newNode", "clonePlaceholder", "cloneIdentifier", "cloned", "create", "expectedNode", "cloneStringLiteral", "NodeUtils", "startNodeAt", "resetStartLocationFromNode", "locationNode", "reservedTypes", "FlowErrors", "AmbiguousConditionalArrow", "AmbiguousDeclareModuleKind", "AssignReservedType", "reservedType", "DeclareClassElement", "DeclareClassFieldInitializer", "DuplicateDeclareModuleExports", "EnumBooleanMemberNotInitialized", "memberName", "enumName", "EnumDuplicateMemberName", "EnumInconsistentMemberValues", "EnumInvalidExplicitType", "invalidEnumType", "EnumInvalidExplicitTypeUnknownSupplied", "EnumInvalidMemberInitializerPrimaryType", "explicitType", "EnumInvalidMemberInitializerSymbolType", "EnumInvalidMemberInitializerUnknownType", "EnumInvalidMemberName", "suggestion", "EnumNumberMemberNotInitialized", "EnumStringMemberInconsistentlyInitailized", "GetterMayNotHaveThisParam", "ImportReflectionHasImportType", "ImportTypeShorthandOnlyInPureImport", "InexactInsideExact", "InexactInsideNonObject", "InexactVariance", "InvalidNonTypeImportInDeclareModule", "MissingTypeParamDefault", "NestedDeclareModule", "NestedFlowComment", "PatternIsOptional", "SetterMayNotHaveThisParam", "SpreadVariance", "ThisParamAnnotationRequired", "ThisParamBannedInConstructor", "ThisParamMayNotBeOptional", "ThisParamMustBeFirst", "ThisParamNoDefault", "TypeBeforeInitializer", "TypeCastInPattern", "UnexpectedExplicitInexactInObject", "UnexpectedReservedType", "UnexpectedReservedUnderscore", "UnexpectedSpaceBetweenModuloChecks", "UnexpectedSpreadType", "UnexpectedSubtractionOperand", "UnexpectedTokenAfterTypeParameter", "UnexpectedTypeParameterBeforeAsyncArrowFunction", "UnsupportedDeclareExportKind", "unsupportedExportKind", "UnsupportedStatementInDeclareModule", "UnterminatedFlowComment", "isEsModuleType", "bodyElement", "hasTypeImportKind", "importKind", "isMaybeDefaultImport", "exportSuggestions", "const", "let", "interface", "partition", "list", "list1", "list2", "FLOW_PRAGMA_REGEX", "flow", "FlowParserMixin", "flowPragma", "shouldParseTypes", "shouldParseEnums", "matches", "exec", "flowParseTypeInitialiser", "tok", "oldInType", "flowParseType", "flowParsePredicate", "moduloLoc", "parseExpression", "flowParseTypeAndPredicateInitialiser", "predicate", "flowParseDeclareClass", "flowParseInterfaceish", "flowParseDeclareFunction", "parseIdentifier", "typeNode", "typeContainer", "flowParseTypeParameterDeclaration", "tmp", "flowParseFunctionTypeParams", "this", "returnType", "typeAnnotation", "flowParseDeclare", "insideModule", "flowParseDeclareVariable", "flowParseDeclareModuleExports", "flowParseDeclareModule", "flowParseDeclareTypeAlias", "flowParseDeclareOpaqueType", "flowParseDeclareInterface", "flowParseDeclareExportDeclaration", "flowParseTypeAnnotatableIdentifier", "parseExprAtom", "bodyNode", "parseImport", "hasModuleExport", "default", "isLet", "exportKind", "flowParseTypeAnnotation", "finished", "flowParseTypeAlias", "flowParseOpaqueType", "isClass", "flowParseRestrictedIdentifier", "extends", "implements", "mixins", "flowParseInterfaceExtends", "flowParseObjectType", "allowStatic", "allowExact", "allowSpread", "allowProto", "allowInexact", "flowParseQualifiedTypeIdentifier", "flowParseTypeParameterInstantiation", "flowParseInterface", "checkNotUnderscore", "checkReservedType", "liberal", "right", "declare", "supertype", "impltype", "flowParseTypeParameter", "requireDefault", "nodeStartLoc", "variance", "flowParseVariance", "ident", "bound", "defaultRequired", "typeParameter", "oldNoAnonFunctionType", "flowParseTypeParameterInstantiationCallOrNew", "flowParseTypeOrImplicitInstantiation", "flowParseInterfaceType", "flowParseObjectPropertyKey", "flowParseObjectTypeIndexer", "isStatic", "static", "flowParseObjectTypeInternalSlot", "flowParseObjectTypeMethodish", "flowParseFunctionTypeParam", "flowParseObjectTypeCallProperty", "valueNode", "callProperties", "indexers", "internalSlots", "endDelim", "exact", "inexact", "protoStartLoc", "inexactStartLoc", "propOrInexact", "flowParseObjectTypeProperty", "flowObjectTypeSemicolon", "isInexactToken", "proto", "flowCheckGetterSetterParams", "paramCount", "_startLoc", "node2", "qualification", "flowParseGenericType", "flowParseTypeofType", "flowParsePrimaryType", "flowParseTupleType", "first", "lh", "isThis", "reinterpretTypeAsFunctionTypeParam", "flowIdentToTypeAnnotation", "isGroupedType", "parseLiteralAtNode", "createIdentifier", "flowParsePostfixType", "seenOptionalIndexedAccess", "objectType", "indexType", "flowParsePrefixType", "flowParseAnonFunctionWithoutParens", "param", "flowParseIntersectionType", "flowParseUnionType", "allowPrimitiveOverride", "typeCastToParameter", "allowExpressionBody", "forwardNoArrowParamsConversionAt", "parseFunctionBodyAndFinish", "parseStatementLike", "flowParseEnumDeclaration", "parseExpressionStatement", "expr", "shouldParseExportDeclaration", "isExportDefaultSpecifier", "parseExportDefaultExpression", "parseConditional", "setOptionalParametersError", "originalNoArrowAt", "consequent", "failed", "tryParseConditionalConsequent", "valid", "getArrowLikeExpressions", "alternate", "parseMaybeAssign", "parseMaybeAssignAllowIn", "disallowInvalid", "arrows", "finishArrowValidation", "every", "_node$extra", "toAssignableList", "trailingCommaLoc", "checkParams", "result", "parseParenItem", "typeCastNode", "assertModuleNodeAllowed", "decl", "parseExportDeclaration", "declarationNode", "parseExportSpecifiers", "parseExportFrom", "eatExportStar", "maybeParseExportNamespaceSpecifier", "hasNamespace", "parseClassId", "isStatement", "optionalId", "parseClassMember", "member", "parseClassMemberFromModifier", "isIterator", "readIterator", "fullWord", "left", "exprList", "toReferencedList", "isParenthesizedExpr", "_expr$extra", "parseArrayLike", "close", "canBePattern", "isTuple", "isParenthesized", "isClassMethod", "isClassProperty", "isNonstaticConstructor", "isThisParam", "pushClassPrivateMethod", "parseClassSuper", "superTypeParameters", "implemented", "checkGetterSetterParams", "parsePropertyNamePrefixOperator", "parseObjPropValue", "parseAssignableListItemTypes", "parseMaybeDefault", "shouldParseDefaultImport", "checkImportReflection", "module", "parseImportSpecifierLocal", "specifier", "local", "finishImportSpecifier", "maybeParseDefaultImportSpecifier", "parseImportSpecifier", "importedIsString", "isInTypeOnlyImport", "isMaybeTypeOnly", "firstIdent", "imported", "specifierTypeKind", "as_ident", "specifierIsTypeImport", "checkReservedWord", "parseBindingAtom", "parseFunctionParams", "parseVarId", "parseAsyncArrowFromCallExpression", "call", "shouldParseAsyncArrow", "afterLeftParse", "_jsx", "jsx", "currentContext", "_jsx2", "_jsx3", "abort", "_arrowExpression$extr", "arrowExpression", "maybeUnwrapTypeCastExpression", "async", "parseArrow", "shouldParseArrow", "setArrowFunctionParameters", "allowDuplicates", "isArrowFunction", "strictModeChanged", "parseParenAndDistinguishExpression", "canBeArrow", "parseSubscripts", "parseCallExpressionArguments", "parseAsyncArrowWithTypeParameters", "subscriptState", "isLookaheadToken_lt", "typeArguments", "parseNewCallee", "targs", "parseArrowExpression", "parseTopLevel", "program", "fileNode", "skipFlowComment", "hasFlowCommentCompletion", "commentSkip", "shiftToFirstNonWhiteSpace", "ch2", "ch3", "flowEnumErrorBooleanMemberNotInitialized", "flowEnumErrorInvalidMemberInitializer", "enumContext", "flowEnumErrorNumberMemberNotInitialized", "flowEnumErrorStringMemberInconsistentlyInitailized", "flowEnumMemberInit", "endOfInit", "literal", "flowEnumMemberRaw", "flowEnumCheckExplicitTypeMismatch", "expectedType", "flowEnumMembers", "seenNames", "members", "booleanMembers", "numberMembers", "stringMembers", "defaultedMembers", "hasUnknownMembers", "memberNode", "toUpperCase", "flowEnumStringMembers", "initializedMembers", "flowEnumParseExplicitType", "flowEnumBody", "nameLoc", "empty", "boolsLen", "numsLen", "strsLen", "defaultedLen", "afterNext", "entities", "__proto__", "quot", "amp", "apos", "nbsp", "iexcl", "cent", "pound", "curren", "yen", "brvbar", "sect", "uml", "copy", "ordf", "laquo", "not", "shy", "reg", "macr", "deg", "plusmn", "sup2", "sup3", "acute", "micro", "para", "middot", "cedil", "sup1", "ordm", "raquo", "frac14", "frac12", "frac34", "iquest", "Agrave", "Aacute", "Acirc", "Atilde", "Auml", "Aring", "AElig", "Ccedil", "Egrave", "Eacute", "Ecirc", "Euml", "Igrave", "Iacute", "Icirc", "Iuml", "ETH", "Ntilde", "Ograve", "Oacute", "Ocirc", "Otilde", "Ouml", "times", "Oslash", "Ugrave", "Uacute", "Ucirc", "Uuml", "Yacute", "THORN", "szlig", "agrave", "aacute", "acirc", "atilde", "auml", "aring", "aelig", "ccedil", "egrave", "eacute", "ecirc", "euml", "igrave", "iacute", "icirc", "iuml", "eth", "ntilde", "ograve", "oacute", "ocirc", "otilde", "ouml", "divide", "oslash", "ugrave", "uacute", "ucirc", "uuml", "yacute", "thorn", "yuml", "OElig", "oelig", "Scaron", "scaron", "Yuml", "fnof", "circ", "Alpha", "Beta", "Gamma", "Delta", "Epsilon", "Zeta", "Eta", "Theta", "Iota", "Kappa", "Lambda", "Mu", "Nu", "Xi", "Omicron", "Pi", "Rho", "Sigma", "Tau", "Upsilon", "Phi", "Chi", "Psi", "Omega", "alpha", "beta", "gamma", "delta", "epsilon", "zeta", "eta", "theta", "iota", "kappa", "lambda", "mu", "nu", "xi", "omicron", "pi", "rho", "sigmaf", "sigma", "tau", "upsilon", "phi", "chi", "psi", "omega", "thetasym", "upsih", "piv", "ensp", "emsp", "thinsp", "zwnj", "zwj", "lrm", "rlm", "ndash", "mdash", "lsquo", "rsquo", "sbquo", "ldquo", "rdquo", "bdquo", "dagger", "Dagger", "bull", "hellip", "permil", "prime", "Prime", "lsaquo", "rsaquo", "oline", "frasl", "euro", "image", "weierp", "real", "trade", "alefsym", "larr", "uarr", "rarr", "darr", "harr", "crarr", "lArr", "uArr", "rArr", "dArr", "hArr", "forall", "part", "exist", "nabla", "isin", "notin", "ni", "prod", "sum", "minus", "lowast", "radic", "infin", "ang", "and", "or", "cap", "cup", "int", "there4", "sim", "cong", "asymp", "ne", "equiv", "le", "ge", "sub", "sup", "nsub", "sube", "supe", "oplus", "otimes", "perp", "sdot", "lceil", "rceil", "lfloor", "rfloor", "lang", "rang", "loz", "spades", "clubs", "hearts", "diams", "JsxErrors", "AttributeIsEmpty", "MissingClosingTagElement", "openingTagName", "MissingClosingTagFragment", "UnexpectedSequenceExpression", "HTMLEntity", "UnsupportedJsxValue", "UnterminatedJsxContent", "UnwrappedAdjacentJSXElements", "isFragment", "getQualifiedJSXName", "namespace", "JSXParserMixin", "jsxReadToken", "jsxReadEntity", "jsxReadNewLine", "normalizeCRLF", "jsxReadString", "codePoint", "count", "desc", "entity", "XHTMLEntities", "jsxReadWord", "jsxParseIdentifier", "jsxParseNamespacedName", "jsxParseElementName", "jsxParseAttributeValue", "setContext", "jsxParseExpressionContainer", "jsxParseEmptyExpression", "jsxParseSpreadChild", "previousContext", "jsxParseAttribute", "jsxParseOpeningElementAt", "jsxParseOpeningElementAfterName", "selfClosing", "jsxParseClosingElementAt", "jsxParseElementAt", "children", "openingElement", "closingElement", "contents", "openingFragment", "closingFragment", "jsxParseElement", "newContext", "TypeScriptScope", "enums", "constEnums", "classes", "exportOnlyBindings", "TypeScriptScopeHandler", "importsStack", "hasImport", "allowShadow", "isConst", "wasConst", "getOwn", "hasOwnProperty", "unwrapParenthesizedExpression", "LValParser", "_node$extra3", "_node$extra2", "operator", "arg", "checkToRestConversion", "elt", "element", "toReferencedListDeep", "parseSpread", "parseRestBinding", "parseBindingList", "ParseBindingListFlags", "parseObjectLike", "closeCharCode", "allowEmpty", "elts", "checkCommaAfterRest", "parseDecorator", "parseAssignableListItem", "parseBindingRestProperty", "parseBindingProperty", "parsePropertyName", "_left", "ObjectProperty", "checkLVal", "in", "checkClashes", "hasParenthesizedAncestor", "_expression$extra", "checkIdentifier", "validity", "ParseErrorClass", "isParenthesizedExpression", "nextAncestor", "child", "declareNameFromIdentifier", "identifier", "allowPattern", "nonNull", "x", "assert", "TSErrors", "AbstractMethodHasImplementation", "methodName", "AbstractPropertyHasInitializer", "propertyName", "AccesorCannotDeclareThisParameter", "AccesorCannotHaveTypeParameters", "AccessorCannotBeOptional", "ClassMethodHasDeclare", "ClassMethodHasReadonly", "ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference", "ConstructorHasTypeParameters", "DeclareAccessor", "DeclareClassFieldHasInitializer", "DeclareFunctionHasImplementation", "DuplicateAccessibilityModifier", "modifier", "DuplicateModifier", "EmptyHeritageClauseType", "EmptyTypeArguments", "EmptyTypeParameters", "ExpectedAmbientAfterExportDeclare", "ImportAliasHasImportType", "IncompatibleModifiers", "modifiers", "IndexSignatureHasAbstract", "IndexSignatureHasAccessibility", "IndexSignatureHasDeclare", "IndexSignatureHasOverride", "IndexSignatureHasStatic", "InitializerNotAllowedInAmbientContext", "InvalidModifierOnTypeMember", "InvalidModifierOnTypeParameter", "InvalidModifierOnTypeParameterPositions", "InvalidModifiersOrder", "orderedModifiers", "InvalidPropertyAccessAfterInstantiationExpression", "InvalidTupleMemberLabel", "MissingInterfaceName", "MixedLabeledAndUnlabeledElements", "NonAbstractClassHasAbstractMethod", "NonClassMethodPropertyHasAbstractModifer", "OptionalTypeBeforeRequired", "OverrideNotInSubClass", "PrivateElementHasAbstract", "PrivateElementHasAccessibility", "ReadonlyForMethodSignature", "ReservedArrowTypeParam", "ReservedTypeAssertion", "SetAccesorCannotHaveOptionalParameter", "SetAccesorCannotHaveRestParameter", "SetAccesorCannotHaveReturnType", "SingleTypeParameterWithoutTrailingComma", "typeParameterName", "StaticBlockCannotHaveModifier", "TupleOptionalAfterType", "TypeAnnotationAfterAssign", "TypeImportCannotSpecifyDefaultAndNamed", "TypeModifierIsUsedInTypeExports", "TypeModifierIsUsedInTypeImports", "UnexpectedParameterModifier", "UnexpectedReadonly", "UnexpectedTypeAnnotation", "UnexpectedTypeCastInParameter", "UnsupportedImportTypeArgument", "UnsupportedParameterPropertyKind", "UnsupportedSignatureParameterKind", "keywordTypeFromName", "tsIsAccessModifier", "tsIsVarianceAnnotations", "typescript", "TypeScriptParserMixin", "tsParseInOutModifiers", "tsParseModifiers", "bind", "allowedModifiers", "disallowedModifiers", "errorTemplate", "tsParseConstModifier", "tsParseInOutConstModifiers", "tsIsIdentifier", "tsTokenCanFollowModifier", "tsNextTokenCanFollowModifier", "tsParseModifier", "stopOnStartOfClassStaticBlock", "tsIsStartOfStaticBlocks", "tsTryParse", "modified", "enforceOrder", "before", "after", "incompatible", "mod1", "mod2", "accessibility", "tsIsListTerminator", "tsParseList", "parseElement", "tsParseDelimitedList", "refTrailingCommaPos", "tsParseDelimitedListWorker", "expectSuccess", "trailingCommaPos", "tsParseBracketedList", "bracket", "skipFirstToken", "tsParseImportType", "qualifier", "tsParseEntityName", "tsParseTypeArguments", "allowReservedWords", "tsParseTypeReference", "typeName", "tsParseThisTypePredicate", "lhs", "parameterName", "tsParseTypeAnnotation", "asserts", "tsParseThisTypeNode", "tsParseTypeQuery", "exprName", "tsParseTypeParameter", "parseModifiers", "tsParseTypeParameterName", "constraint", "tsEatThenParseType", "tsTryParseTypeParameters", "tsParseTypeParameters", "tsFillSignature", "returnToken", "signature", "returnTokenRequired", "paramsKey", "returnTypeKey", "tsParseBindingListForSignature", "tsParseTypeOrTypePredicateAnnotation", "tsParseTypeMemberSemicolon", "tsParseSignatureMember", "tsIsUnambiguouslyIndexSignature", "tsTryParseIndexSignature", "tsLookAhead", "parameters", "tsTryParseTypeAnnotation", "tsParsePropertyOrMethodSignature", "readonly", "nodeAny", "firstParameter", "tsParseTypeMember", "idx", "tsParseTypeLiteral", "tsParseObjectTypeMembers", "tsIsStartOfMappedType", "tsParseMappedTypeParameter", "tsExpectThenParseType", "tsParseMappedType", "nameType", "tsParseType", "tsTryParseType", "tsParseTupleType", "elementTypes", "tsParseTupleElementType", "seenOptionalElement", "labeledElements", "elementNode", "_labeledElements", "checkType", "isLabeled", "labeled", "isWord", "chAfterWord", "wordName", "typeOrLabel", "tsParseNonArrayType", "labeledNode", "optionalTypeNode", "restNode", "tsParseParenthesizedType", "tsParseFunctionOrConstructorType", "abstract", "tsInAllowConditionalTypesContext", "tsParseLiteralTypeNode", "tsParseTemplateLiteralType", "parseTemplate", "parseTemplateSubstitution", "tsParseThisTypeOrThisTypePredicate", "thisKeyword", "parseMaybeUnary", "nodeType", "tsParseArrayTypeOrHigher", "tsParseTypeOperator", "tsParseTypeOperatorOrHigher", "tsCheckTypeAnnotationForReadOnly", "tsParseInferType", "tsParseConstraintForInferType", "tsInDisallowConditionalTypesContext", "isTypeOperator", "tsParseUnionOrIntersectionType", "parseConstituentType", "hasLeadingOperator", "tsParseIntersectionTypeOrHigher", "tsParseUnionTypeOrHigher", "tsIsStartOfFunctionType", "tsIsUnambiguouslyStartOfFunctionType", "tsSkipParameterStart", "previousErrorCount", "_unused2", "tsInType", "t", "tsParseTypePredicateAsserts", "thisTypePredicate", "typePredicateVariable", "tsParseTypePredicatePrefix", "tsTryParseTypeOrTypePredicateAnnotation", "eatColon", "tsParseNonConditionalType", "extendsType", "trueType", "falseType", "isAbstractConstructorSignature", "tsParseTypeAssertion", "tsParseHeritageClause", "originalStartLoc", "delimitedList", "tsParseInterfaceDeclaration", "tsParseTypeAliasDeclaration", "tsInNoContext", "cb", "oldContext", "oldInDisallowConditionalTypesContext", "tsNextThenParseType", "tsDoThenParseType", "tsParseEnumMember", "initializer", "tsParseEnumDeclaration", "tsParseModuleBlock", "parseBlockOrModuleBlockBody", "tsParseModuleOrNamespaceDeclaration", "nested", "inner", "tsParseAmbientExternalModuleDeclaration", "global", "tsParseImportEqualsDeclaration", "isExport", "moduleReference", "tsParseModuleReference", "tsIsExternalModuleReference", "tsParseExternalModuleReference", "f", "tsTryParseAndCatch", "tsTryParseDeclare", "nany", "starttype", "tsInAmbientContext", "parseFunctionStatement", "parseClass", "parseVarStatement", "tsParseDeclaration", "tsTryParseExportDeclaration", "tsParseExpressionStatement", "mod", "tsCheckLineTerminator", "tsParseAbstractDeclaration", "tsTryParseGenericAsyncArrowFunction", "oldMaybeInArrowParameters", "tsParseTypeArgumentsInExpression", "reScan_lt", "tsIsDeclarationStart", "override", "pp", "parameter", "isSimpleParameter", "tsDisallowOptionalPattern", "bodilessType", "registerFunctionStatementId", "tsCheckForInvalidTypeCasts", "items", "isInParens", "nonNullExpression", "isOptionalCall", "missingParenErrorLoc", "atPossibleAsyncArrow", "asyncArrowFn", "parseTaggedTemplateExpression", "tokenType", "_callee$extra", "parseExprOp", "leftStartLoc", "minPrec", "isSatisfies", "reScan_lt_gt", "checkKeywords", "checkDuplicateExports", "ahead", "importNode", "isAbstractClass", "cls", "allowMissingInitializer", "declarations", "isValidAmbientConstInitializer", "parseStatementContent", "parseAccessModifier", "tsHasSomeModifiers", "callParseClassMemberWithIsStatic", "parseClassStaticBlock", "parseClassMemberWithIsStatic", "hadSuperClass", "parsePostMemberNameModifiers", "methodOrProp", "isDeclare", "isIdentifier", "parseClassPropertyAnnotation", "definite", "parseClassAccessorProperty", "declareClassPrivateMethodInScope", "_typeCast", "_typeCast2", "_jsx4", "_typeCast3", "typeCast", "_typeParameters", "reportReservedArrowTypeParam", "trailingComma", "sawUnary", "toAssignableParenthesizedExpression", "TSTypeCastExpression", "TSParameterProperty", "TSNonNullExpression", "TSAsExpression", "TSSatisfiesExpression", "TSTypeAssertion", "parseMaybeDecoratorArguments", "canHaveLeadingDecorator", "getGetterSetterExpectedParamCount", "baseCount", "firstParam", "hasContextParam", "parseCatchClauseParam", "oldIsAmbientContext", "oldInAbstractClass", "maybeTakeDecorators", "hasBody", "shouldParseAsAmbientContext", "getExpression", "parseExportSpecifier", "isString", "isInTypeExport", "parseTypeOnlyImportExportSpecifier", "isImport", "isInTypeOnlyImportExport", "leftOfAsKey", "rightOfAsKey", "leftOfAs", "rightOfAs", "hasTypeSpecifier", "canParseAsKeyword", "firstAs", "secondAs", "parseModuleExportName", "kindKey", "isPossiblyLiteralEnum", "expressions", "isUncomputedMemberExpressionChain", "isNumber", "isNegativeNumber", "PlaceholderErrors", "ClassNameIsRequired", "UnexpectedSpace", "placeholders", "PlaceholdersParserMixin", "parsePlaceholder", "assertNoSpace", "finishPlaceholder", "isFinished", "chStartsBindingIdentifier", "verifyBreakContinue", "isBreak", "parseStatementOrSloppyAnnexBFunctionDeclaration", "parseBlock", "createNewLexicalScope", "parseFunctionId", "requireId", "oldStrict", "parseClassBody", "startsWith", "maybeParseExportDefaultSpecifier", "checkExport", "hasStarImport", "maybeParseStarImportSpecifier", "parseNamedImportSpecifiers", "parseImportSource", "v8intrinsic", "V8IntrinsicMixin", "parseV8Intrinsic", "v8IntrinsicStartLoc", "parseIdentifierName", "expectedConfig", "expectedName", "expectedOptions", "expectedKeys", "expectedOptionsIsEmpty", "p", "option", "find", "PIPELINE_PROPOSALS", "TOPIC_TOKENS", "RECORD_AND_TUPLE_SYNTAX_TYPES", "validatePlugins", "decoratorsBeforeExport", "allowCallParenthesized", "proposalList", "tupleSyntaxIsHash", "syntaxType", "tokenList", "moduleAttributesVersionPluginOption", "missingPlugins", "mixinPlugins", "mixinPluginNames", "ExpressionParser", "checkProto", "isRecord", "protoRef", "used", "shouldExitDescending", "disallowIn", "disallowInAnd", "parseExpressionBase", "allowInAnd", "parseMaybeAssignDisallowIn", "resultError", "_resultError$loc", "parseYield", "ownExpressionErrors", "parseMaybeConditional", "startIndex", "parseExprOps", "parseMaybeUnaryOrPrivate", "op", "prec", "checkPipelineAtInfixOperator", "logical", "coalesce", "parseExprOpRightExpr", "finishedNode", "nextOp", "withTopicBindingContext", "parseHackPipeBody", "parseSmartPipelineBodyInStyle", "parseExprOpBaseRightExpr", "withSoloAwaitPermittingContext", "parseFSharpPipelineBody", "_body$extra", "requiredParentheses", "topicReferenceWasUsedInCurrentContext", "checkExponentialAfterUnary", "isAwait", "isAwaitAllowed", "parseAwait", "update", "isDelete", "parseUpdate", "isAmbiguousAwait", "updateExpressionNode", "parseExprSubscripts", "maybeAsyncArrow", "parseBind", "parseCoverCallAndAsyncArrowHead", "parseMember", "parseNoCallExpr", "tag", "quasi", "dynamicImport", "allowPlaceholder", "nodeForExtra", "oldInFSharpPipelineDirectBody", "addTrailingCommaExtraToNode", "parseExprListItem", "_call$extra", "parseSuper", "parseImportMetaProperty", "parseDo", "parseFunctionOrFunctionSent", "parseDecorators", "parseNewOrNewTarget", "parseTopicReferenceThenEqualsSign", "parseTopicReference", "pipeProposal", "parseModuleExpression", "parseAsyncFunctionExpression", "parseAsyncArrowUnaryFunction", "topicTokenType", "topicTokenValue", "finishTopicReference", "testTopicReferenceConfiguration", "topicReferenceIsAllowedInCurrentContext", "registerTopicReference", "meta", "parseMetaProperty", "parseFunction", "innerStartLoc", "spreadStartLoc", "optionalCommaStartLoc", "spreadNodeStartLoc", "innerEndLoc", "arrowNode", "wrapParenthesis", "parenExpression", "metaProp", "parseNew", "parseExprList", "parseTemplateElement", "isTagged", "elemStart", "elem", "isTail", "endOffset", "elemEnd", "cooked", "tail", "curElt", "quasis", "propHash", "parsePropertyDefinition", "maybeAsyncOrAccessorProp", "keyName", "_params", "finishedProp", "generator", "isExpression", "hasStrictModeDirective", "nonSimple", "isSimpleParamList", "formalParameters", "reservedTest", "delegating", "delegate", "childExpr", "isSimpleReference", "checkSmartPipeTopicBodyEarlyErrors", "callback", "outerContextTopicState", "withSmartMixTopicForbiddingContext", "outerContextSoloAwaitState", "prodParamToSet", "prodParamToClear", "ret", "revertScopes", "parseProgram", "loopLabel", "switchLabel", "loneSurrogate", "keywordRelationalOperator", "babel7CompatTokens", "hashEndPos", "hashEndLoc", "backquoteEnd", "backquoteEndLoc", "startToken", "templateValue", "templateElementEnd", "templateElementEndLoc", "endToken", "StatementParser", "interpreter", "parseInterpreterDirective", "finishedProgram", "stmtToDirective", "directiveLiteral", "hasFollowingBindingAtom", "endCh", "chStartsBindingPattern", "hasFollowingBindingIdentifier", "startsUsingForOf", "parseModuleItem", "ParseStatementFlag", "parseStatementListItem", "allowLabeledFunction", "parseStatement", "allowDeclaration", "allowFunctionDeclaration", "parseBreakContinueStatement", "parseDebuggerStatement", "parseDoWhileStatement", "parseForStatement", "parseIfStatement", "parseReturnStatement", "parseSwitchStatement", "parseThrowStatement", "parseTryStatement", "parseWhileStatement", "parseWithStatement", "parseEmptyStatement", "nextTokenCharCode", "isAsyncFunction", "maybeName", "parseLabeledStatement", "decoratorsEnabledBeforeExport", "maybeDecorators", "classNode", "exportNode", "allowExport", "paramsStartLoc", "lab", "parseHeaderExpression", "awaitAt", "parseFor", "startsWithLet", "startsWithUsing", "isLetOrUsing", "initNode", "parseVar", "isForIn", "parseForIn", "startsWithAsync", "isForOf", "isHangingDeclaration", "ParseFunctionFlag", "discriminant", "cases", "cur", "sawDefault", "isCase", "block", "handler", "clause", "finalizer", "statementStart", "parsedNonDirective", "await", "isFor", "hangingDeclaration", "isDeclaration", "hadConstructor", "publicMethod", "privateMethod", "publicProp", "privateProp", "accessorProp", "publicMember", "parseClassElementName", "isPrivate", "maybeQuestionTokenStartLoc", "pushClassPrivateProperty", "pushClassProperty", "pushClassAccessorProperty", "_member$decorators", "parseInitializer", "hasDefault", "parseAfterDefault", "hasStar", "parseAfterNamespace", "isFromRequired", "hasSpecifiers", "maybeParseExportNamedSpecifiers", "hasDeclaration", "maybeParseExportDeclaration", "_node2$declaration", "isTypeExport", "assertions", "nextType", "hasFrom", "nextAfterFrom", "maybeParseImportAssertions", "checkJSONModuleImport", "checkNames", "isDefault", "isFrom", "_declaration$extra", "nodes", "surrogate", "isJSONModuleImport", "_node$assertions", "nonDefaultNamedSpecifier", "parseMaybeImportReflection", "isImportReflection", "nextNextTokenFirstChar", "parseNext", "maybeParseModuleAttributes", "parseAssertEntries", "attrs", "attrNames", "importSpecifier", "Parser", "pluginsMap", "pluginMap", "_options", "getParser", "ast", "moduleError", "generateExportedTokenTypes", "internalTokenTypes", "tokTypes", "getParserClass", "parserClassCache", "pluginsFromOptions", "pluginList", "normalize", "has", "set", "SourceMapGenerator", "sourceFile", "map", "comparator", "p", "version", "needle", "section", "SourceMapGenerator", "map", "ReactiveEffect", "computed", "warn", "TrackOpTypes", "TriggerOpTypes", "map", "val", "last", "effect", "effect", "ReactiveEffect", "effect", "last", "shouldTrack", "key", "effect", "_a", "hasOwnProperty", "isReadonly", "isReadonly", "isShallow", "has", "get", "mutableInstrumentations", "shallowInstrumentations", "readonlyInstrumentations", "shallowReadonlyInstrumentations", "isReadonly", "ref", "get", "set", "isReadonly", "ReactiveEffect", "self", "NOOP", "warn", "last", "ErrorCodes", "warn", "p", "seen", "NOOP", "warn", "_a", "version", "DeprecationTypes", "emit", "warn", "isModelListener", "raw", "Component", "emit", "render", "warn", "effect", "warn", "_a", "ReactiveEffect", "seen", "warn", "warn", "callHook", "hook", "remove", "key", "vnode", "resolve", "warn", "ref", "instance", "warn", "p", "warn", "isInSSRComponentSetup", "Component", "warn", "warn", "warn", "warn", "isFunction", "warn", "has", "warn", "p", "warn", "render", "get", "set", "computed", "h", "render", "hydrate", "createApp", "warn", "warn", "isOn", "raw", "warn", "warn", "ref", "warn", "patchProp", "remove", "hydrate", "warn", "ref", "hasWarned", "next", "queuePostFlushCb", "ref", "warn", "effect", "ReactiveEffect", "remove", "render", "hydrate", "p", "SuspenseImpl", "remove", "vnode", "parentComponent", "container", "anchor", "isSVG", "parentSuspense", "warn", "_a", "warn", "container", "anchor", "ref", "warn", "warn", "ref", "uid", "emit", "getGlobalThis", "warn", "isInSSRComponentSetup", "_a", "Component", "computed", "isInSSRComponentSetup", "warn", "computed", "render", "callHook", "h", "resolve", "warn", "isBoolean", "compatUtils", "DeprecationTypes", "warn", "e", "hydrate", "warn", "resolve", "def", "getCurrentInstance", "warn", "warn", "enterCbKey", "warn", "warn", "matches", "isArray", "compatUtils", "DeprecationTypes", "warn", "isComponent", "isVNode", "isComponent", "p", "p", "p", "p", "_a", "match", "loc", "isComponent", "i", "returnType", "p", "hoistStatic", "isVNode", "i", "matches", "advancePositionWithMutation", "locStub", "RESOLVE_FILTER", "isText", "isComponent", "p", "walk", "walk", "p", "import_parser", "node", "isReferenced", "last", "source", "processExpression", "processExpression", "range", "i", "children", "node", "isComponent", "isComponent", "arg", "checkCompatEnabled", "CompilerDeprecationTypes", "isCompatEnabled", "props", "mergeAsArray", "p", "processExpression", "hasScopeRef", "p", "p", "seen", "TRANSITION", "TRANSITION", "p", "ErrorCodes", "transformModel", "p", "transformOn", "TRANSITION", "p", "transformModel", "transformOn", "compile", "warn", "compile", "render"]
}
